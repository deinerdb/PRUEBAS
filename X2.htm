<!DOCTYPE HTML>
<html lang="es" dir="ltr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">  
        <meta name="description" content="ECUACIÓN CUADRÁTICA"/>
        <!-- Chrome, Firefox, OS y Opera -->
        <meta name="theme-color" content="#663399" />
        <!-- Windows Phone -->
        <meta name="msapplication-navbutton-color" content="#663399" />
        <title>ECUACIÓN CUADRÁTICA</title>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        <link rel="stylesheet" href="estilo.css" />
        
        <link rel="icon" href="favicon.ico" type="image/x-icon" />
        <link rel="shortcut icon" href="favicon.ico" type="image/x-icon" />
        <!--*jQuery CDN
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
        este es más nuevo, pero usamos la versión vieja
    -->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>

        <style>
            .loader {
                position: fixed;
                left: 0px;
                top: 0px;
                width: 100%;
                height: 100%;
                z-index: 9999;
                background: url('pageLoader.gif') 50% 50% no-repeat rgb(249,249,249);
                opacity: 0.8;
                filter: Alpha(opacity=80); /* IE8 and earlier */
            }
            #títuloEcuación {
                color: indigo;
                font-size: 1.8em;
                text-align: center;
                max-width: 100%;
                margin: auto;
                padding: 8px;
                /*sombra en el texto*/
                text-shadow: 3px 3px 4px purple; /*estándar*/
            }
           
            #linechart, #regChart,#cajaNoDisponible, #cajachart, #noDisponible, #opcionesGráfico, #opcionesGráficoReg, #diagrama, #opcionesGráficoCaja {
                /*RESPONSIVE*/
                max-width: 100%;
                overflow: auto;
                margin: 4px 6px 4px 4px;
                /*para que el ancho sea real*/
                -moz-box-sizing: border-box;
                -webkit-box-sizing: border-box;
                box-sizing: border-box;
                border: 1px solid purple;
                -webkit-border-radius: 4px;
                -moz-border-radius: 4px;
                border-radius: 4px;
                outline: none;
            }
            #linechart {
                background-color: lavender;
            }
            #noDisponible {                
                /*visible por defecto*/
                display: block;
                padding: 4px 24px;
                color:purple;
                border-width: 2px;
            }
          
            #opcionesGráfico, #opcionesGráficoReg, #opcionesGráficoCaja {
                margin-top: 12px !important;
                padding: 24px 12px 12px 18px;
            }
            
           
            #opcionesGráfico {
                margin-bottom: 12px !important;                
            }
            #linechart, #opcionesGráfico, #regChart, #opcionesGráficoReg, #cajachart, #opcionesGráficoCaja, .tab, .tabcontent {
                /*oculto por defecto*/
                display: none;
            }
            

               

            footer {
                margin-top: 24px !important;
            }
            /* inicio CSS para tab*/

            /* Style the tab */
            .tab, .tab button {
                -webkit-border-top-left-radius: 4px;
                -moz-border-radius-topleft: 4px;
                border-top-left-radius: 4px;
                -webkit-border-top-right-radius: 4px;
                -moz-border-radius-topright: 4px;
                border-top-right-radius: 4px;
                /*para que el ancho sea real*/
                -moz-box-sizing: border-box;
                -webkit-box-sizing: border-box;
                box-sizing: border-box;
            }
            .tab {
                overflow: hidden;
                border: 2px solid purple;
                background-color: lavender;               
            }

                /* Style the buttons inside the tab */
                .tab button {
                    background-color: lavender;
                    float: left;
                    border: none;
                    outline: none;
                    cursor: pointer;
                    padding: 14px 16px;
                    -moz-transition: 0.3s;
                    -o-transition: 0.3s;
                    -webkit-transition: 0.3s;
                    transition: 0.3s;
                    font-size: 17px;
                }

                    /* Change background color of buttons on hover */
                    .tab button:hover {
                        background-color: #bfbff2; /*lavender 2 tonos más oscuro*/
                    }

                    /* Create an active/current tablink class */
                    .tab button.active {
                        background-color: #9595ea; /*lavender 4 tonos más oscuro*/
                    }

            /* Style the tab content */
            .tabcontent {
                display: none;
                padding: 5px 6px;
                border: 2px solid purple;
                -webkit-border-bottom-left-radius: 4px;
                -moz-border-radius-bottomleft: 4px;
                border-bottom-left-radius: 4px;
                -webkit-border-bottom-right-radius: 4px;
                -moz-border-radius-bottomright: 4px;
                border-bottom-right-radius: 4px;
                border-top: none;
                /*para que el ancho sea real*/
                -moz-box-sizing: border-box;
                -webkit-box-sizing: border-box;
                box-sizing: border-box;
                /*fade*/
                -moz-animation: fadeEffect 1.5s;
                -o-animation: fadeEffect 1.5s;
                -webkit-animation: fadeEffect 1.5s;
                animation: fadeEffect 1.5s;                
            }
            /* Fade in tabs */
            @-moz-keyframes fadeEffect {
                from {
                    opacity: 0;
                }

                to {
                    opacity: 1;
                }
            }
            @-o-keyframes fadeEffect {
                from {
                    opacity: 0;
                }

                to {
                    opacity: 1;
                }
            }
            @-webkit-keyframes fadeEffect {
                from {
                    opacity: 0;
                }

                to {
                    opacity: 1;
                }
            }

            @keyframes fadeEffect {
                from {
                    opacity: 0;
                }

                to {
                    opacity: 1;
                }
            }
            /* fin CSS para tab*/
            #ayudaImprimirGráfico {
                color: indigo;
                margin-left: 12px;

            }
            /*ajustes al imprimir*/
            @media print {
                /*cosas invisibles al imprimir*/
                #ayudaImprimirGráfico, #selectorN, #opcionesGráfico, #snackbar, #opcionesGráficoReg, #opcionesGráficoCaja, #checkCopiar, .tab, .tabcontent, #titulaGráficos, #noDisponible {
                    display: none !important;
                }
                #divDatos {
                    /*para que se vean todos, porque en el papel no hay scroll xD */
                    max-height: none !important;
                }                 
            }

            .formulario {
                font-size: 1.1em;
                padding: 10px 8px;
                /*Formularios con borde superior e inferior gris*/
                border-bottom-style: none !important;
                border-top-style: none !important; 
                margin-bottom: 4px !important;

            }
                        
            #divDatos {                
                overflow:auto;                
            }
           
            

            #aIzquierda i:hover , #aDerecha i:hover, #BtnPNG:hover, #BtnRegPNG:hover, #BtnCajaPNG:hover {
                background: #8c53c6; /* For browsers that do not support gradients */
                background: -webkit-linear-gradient(left, #8c53c6, rebeccapurple); /* For Safari 5.1 to 6.0 */
                background: -o-linear-gradient(right, #8c53c6, rebeccapurple); /* For Opera 11.1 to 12.0 */
                background: -moz-linear-gradient(right, #8c53c6, rebeccapurple); /* For Firefox 3.6 to 15 */
                background: linear-gradient(to right, #8c53c6, rebeccapurple); /* Standard syntax (must be last) */
            }
            
            #BtnPNG, #BtnRegPNG, #BtnCajaPNG {
                text-decoration: none;
                padding: 16px 32px !important;
            }
            #divA i, #BtnPNG, #BtnRegPNG, #BtnCajaPNG {
                -webkit-box-sizing: border-box;
                -moz-box-sizing: border-box;
                box-sizing: border-box;
                border: none; /* Remove borders */
                outline: none; /* Remove outline */
                background-color: rebeccapurple; /* Set a background color */
                color: white; /* Text color */
                cursor: pointer; /* Add a mouse pointer on hover */
                padding: 7px 12px; /* Some padding */
                -moz-border-radius: 10px;
                -webkit-border-radius: 10px;
                border-radius: 10px; /* Rounded corners */
                /*SOMBRA*/
                -moz-box-shadow: 5px 5px 3px MediumPurple;
                -webkit-box-shadow: 5px 5px 3px MediumPurple;
                box-shadow: 5px 5px 3px MediumPurple;
                /*no se puede seleccionar el texto*/
                -webkit-user-select: none; /* Chrome, Opera, Safari */
                -moz-user-select: none; /* Firefox 2+ */
                -ms-user-select: none; /* IE 10+ */
                user-select: none; /* Standard syntax */
            }
            
            #divDatos label , input[type=number] {
                display: inline-block;
                max-width:70%;
                
            }
            #divDatos input[type=number] {
                margin-left:12px;
            }
            #divDatos div {
                text-align:center;
            }
            #rangoDatos {
                border: none;
            }
            

           

        </style>
    </head>
    <body>
        <div class="loader"></div>
        <script type="text/javascript">
            $(window).load(function () {
                $(".loader").fadeOut("slow");
            });
                        
        </script>

        <!-- The actual snackbar -->
        <div id="snackbar">Realizado</div>

        <div id="mySidenav" class="sidenav">
            <a href="INDEX.htm"><i class="fa fa-home"></i>INICIO</a>
            <a href="HTML.htm"><i class="fa fa-html5"></i>HTML</a>
            <a href="CSS.htm"><i class="fa fa-css3"></i>CSS</a>
            <a href="JAVASCRIPT.htm"><i class="fa fa-code"></i>JAVASCRIPT</a>            
            <a href="MEDIA.htm"><i class="fa fa-play"></i>MULTIMEDIA</a>
            <a href="FILTROS.htm"><i class="fa fa-paint-brush"></i>FILTROS</a>
            <a href="CANVAS.htm"><i class="fa fa-file-image-o"></i>CANVAS</a>
            <a href="JUEGO.htm"><i class="fa fa-gamepad"></i>JUEGO</a>
            <a href="SVG.htm"><i class="fa fa-picture-o"></i>SVG</a>
            <a href="SITIOS.htm"><i class="fa fa-globe"></i>SITIOS</a>
            <a href="FORM.htm"><i class="fa fa-file-text-o"></i>FORMULARIOS</a>
            <a href="FUENTE.htm"><i class="fa fa-font"></i>FUENTES</a>
            <a href="IMC.htm"><i class="fa fa-calculator"></i>IMC</a>
            <a href="DTV.htm"><i class="fa fa-television"></i>DirecTV <sup>&#174;</sup></a>
            <a href="LOADERS.htm"><i class="fa fa-spinner"></i>LOADERS</a>
            <a href="MAP.htm"><i class="fa fa-map-marker"></i>MAPA</a>
            <a href="TRADUCTOR.htm"><i class="fa fa-google"></i>TRADUCIR</a>
            <a href="GRAFICAR.htm"><i class="fa fa-pie-chart"></i>GRAFICAR</a>
            <a href="FRASES.htm"><i class="fa fa-book"></i>FRASES</a>
            <a href="ANALIZAR.htm"><i class="fa fa-table"></i>ANALIZAR</a>
            <a class="selected" id="selectedsidenav" href="X2.htm"><i class="fa fa-superscript"></i>EC. CUADRÁTICA</a>
            <hr />
            <a href="#" onclick="imprimir()"><i class="fa fa-print"></i>IMPRIMIR</a>
        </div>
        <div id="relleno">
            relleno
        </div>
        <div id="overlay" onclick="soloCerrar()">
        </div>
        <div class="caja">
            <div class="container" id="container" onclick="myFunction(this)">
                <div class="bar1"></div>
                <div class="bar2"></div>
                <div class="bar3"></div>
            </div>
            <div class="navbar" id="navbar" onclick="soloCerrar()">
                <a href="INDEX.htm"><i class="fa fa-home"></i>VOLVER AL INICIO</a>
                <a href="HTML.htm"><i class="fa fa-html5"></i>HTML</a>
                <a href="CSS.htm"><i class="fa fa-css3"></i>CSS</a>
                <a href="JAVASCRIPT.htm"><i class="fa fa-code"></i>JAVASCRIPT</a>
                <a href="MEDIA.htm"><i class="fa fa-play"></i>MULTIMEDIA</a>
                <a href="FILTROS.htm"><i class="fa fa-paint-brush"></i>FILTROS</a>
                <a href="CANVAS.htm"><i class="fa fa-file-image-o"></i>CANVAS</a>
                <a href="JUEGO.htm"><i class="fa fa-gamepad"></i>JUEGO</a>
                <a href="SVG.htm"><i class="fa fa-picture-o"></i>SVG</a>
                <a href="SITIOS.htm"><i class="fa fa-globe"></i>SITIOS</a>
                <a href="FORM.htm"><i class="fa fa-file-text-o"></i>FORMULARIOS</a>
                <a href="FUENTE.htm"><i class="fa fa-font"></i>FUENTES</a>
                <a href="IMC.htm"><i class="fa fa-calculator"></i>IMC</a>
                <a href="DTV.htm"><i class="fa fa-television"></i>DirecTV <sup>&#174;</sup></a>
                <a href="LOADERS.htm"><i class="fa fa-spinner"></i>LOADERS</a>
                <a href="MAP.htm"><i class="fa fa-map-marker"></i>MAPA</a>
                <a href="TRADUCTOR.htm"><i class="fa fa-google"></i>TRADUCIR</a>
                <a href="GRAFICAR.htm"><i class="fa fa-pie-chart"></i>GRAFICAR</a>
                <a href="FRASES.htm"><i class="fa fa-book"></i>FRASES</a>
                <a href="ANALIZAR.htm"><i class="fa fa-table"></i>ANALIZAR</a>
                <a class="selected" id="selectednavbar" href="X2.htm"><i class="fa fa-superscript"></i>EC. CUADRÁTICA</a>
                <span id="separador">|</span>
                <a href="#" onclick="imprimir()"><i class="fa fa-print"></i>IMPRIMIR</a>

            </div>
        </div>
 
           
            <div class="main" id="main">                
                    <button class="accordion" id="accordion">ECUACIÓN CUADRÁTICA<i id="folder" class="fa" aria-hidden="true"></i></button>
                    <div class="panel" id="panel">
                        <p>
                            <i class="fa fa-superscript" aria-hidden="true"></i>
                            Ingrese los coeficientes de la ecuación cuadrática f(x) = AX<sup>2</sup> + BX + C, presione CALCULAR y obtendrá un análisis numérico y gráfico.                            
                            <br />
                            <br />
                            <strong style="clear:left">Fragmento de código usado en esta página:</strong><br />
                        </p>

<textarea readonly rows="3">
...
...
</textarea>
                        <i id="arrow" class="fa fa-angle-double-up" aria-hidden="true"></i>
                    </div>


                <form class="formulario">                                      
                    <div id="títuloEcuación">
                        f(x) = AX<sup>2</sup> + BX + C
                    </div>                   
                    <div id="divDatos">
                        <fieldset>
                            <legend><strong>COEFICIENTES:</strong></legend>
                            <div id="div1"><label>A:</label><input type="number" id="txtA" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div2"><label>B:</label><input type="number" id="txtB" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div3"><label>C:</label><input type="number" id="txtC" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                                                        
                        </fieldset>
                    </div>
                    
                    <button type="button" id="btnCalcular" title="Realizar cálculos">CALCULAR</button>
                    <button type="button" id="btnCopiar" disabled title="Copiar Resultados">COPIAR</button> 
                                 
                   
                        <h2 id="titulaResultados" class="letramorada" style="margin-left:12px;">RESULTADOS: </h2>                        
                           
                            <label>Raíz 1:</label> <br />
                            <input type="text" id="raíz1" readonly /><br />
                            <label>Raíz 2:</label> <br />
                            <input type="text" id="raíz2" readonly /><br />
                            <label>Distancia focal (p):</label> <br />
                            <input type="text" id="p" readonly /><br />
                            <label>Lado recto (4p):</label> <br />
                            <input type="text" id="ladoRecto" readonly /><br />
                    <p>Y así sucesivamente...</p>
                        
                </form>
                
                <div id="noDisponible">
                    <p>GRÁFICOS NO DISPONIBLES</p>
                </div>
                <div class="tab" id="tab">
                    <button class="tablinks" onclick="openTab(event, 'esencial')" id="defaultOpen">Esencial</button>
                    <button class="tablinks" onclick="openTab(event, 'regresión')">Regresión</button>                    
                    <button class="tablinks" onclick="openTab(event, 'caja')">Caja</button>
                </div>

                <div id="esencial" class="tabcontent">
                    <!-- gráfico de datos -->
                    <div id="linechart"></div>

                    <fieldset id="opcionesGráfico">
                        <legend>Opciones gráfico de datos: </legend>
                        <label class="contenedorCheckbox">
                            Usar trazado curvo
                            <input type="checkbox" id="myCheck2" onclick="clickCheck2()">
                            <span class="checkmark"></span>
                        </label>
                        <label class="contenedorCheckbox">
                            Mostrar tendencia lineal y media aritmética
                            <input type="checkbox" id="myCheck" onclick="clickCheck()">
                            <span class="checkmark"></span>
                        </label>
                        <button id="BtnPNG" title="Copiar enlace a imagen PNG del gráfico">COPIAR ENLACE PNG</button>
                        <p class="letramorada">En navegadores modernos, puede visualizar este enlace como una imagen PNG</p>
                    </fieldset>  
                </div>

                <div id="regresión" class="tabcontent">
                    <!-- gráfico de regresión -->
                    <div id="regChart"></div>
                    <fieldset id="opcionesGráficoReg">
                        <legend>Opciones gráfico de regresión: </legend>
                        <!-- selección de modelo de regresión -->
                        <h3>Seleccione un tipo de regresión:</h3>
                        <select id="tipoReg">
                            <option value="ninguna" selected>NINGUNA</option>
                            <option value="lineal">LINEAL</option>
                            <option value="exponencial">EXPONENCIAL</option>
                            <option value="logarítmica">LOGARÍTMICA</option>
                            <option value="potencial">POTENCIAL</option>
                            <option value="polinomial2">POLINOMIAL GRADO 2</option>
                            <option value="polinomial3">POLINOMIAL GRADO 3</option>
                            <option value="polinomial4">POLINOMIAL GRADO 4</option>
                            <option value="polinomial5">POLINOMIAL GRADO 5</option>
                            <option value="polinomial6">POLINOMIAL GRADO 6</option>
                        </select>
                        <button id="BtnRegPNG" title="Copiar enlace a imagen PNG del gráfico">COPIAR ENLACE PNG</button>
                        <p class="letramorada">En navegadores modernos, puede visualizar este enlace como una imagen PNG</p>
                    </fieldset>    
                </div>
                <div id="caja" class="tabcontent">
                    <div id="cajaNoDisponible">
                        <h3>Gráfico de caja no disponible</h3>
                        <p>El gráfico de caja de esta página requiere que los siguientes parámetros contengan valores numéricos válidos:</p>
                        <p>
                            Mínimo, máximo, primer cuartil, tercer cuartil, mediana, media.
                        </p>
                    </div>
                    <!-- gráfico de caja -->
                    <div id="cajachart"></div>

                    <fieldset id="opcionesGráficoCaja">
                        <legend>Opciones gráfico de caja: </legend>                        
                        <button id="BtnCajaPNG" title="Copiar enlace a imagen PNG del gráfico">COPIAR ENLACE PNG</button>
                        <p class="letramorada">En navegadores modernos, puede visualizar este enlace como una imagen PNG</p>
                    </fieldset>
                    <fieldset id="diagrama">
                        <legend>Nota: </legend>                        
                        <p class="letramorada" id="notadiagrama">Se muestra un gráfico de caja (box-plot) simplificado, el cual no incluye valores atípicos (outliers). 
                            El siguiente diagrama puede ayudar a interpretarlo:</p>
                        <img id="imgdiagramacaja" title="Diagrama de caja explicado" alt="Diagrama de caja explicado" src="diagramacaja.png" width="792" height="504" />
                    </fieldset>
                </div>
                <h4 id="ayudaImprimirGráfico">
                    * Para imprimir los gráficos, utilice la opción COPIAR ENLACE PNG, pegue el enlace en la barra de direcciones en una nueva pestaña del navegador.
                </h4>
                <!--script para cargar la API de Google para gráficos-->
                <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js">
                </script>


                    <!--FUNCIONES PARA ANÁLISIS-->
                    <script>
                        //declara variables para cálculos

                        var cuenta;
                        var suma;
                        var sumaCuadrados;
                        var productoria;
                        var max;
                        var min;
                        var rango;
                        var recorridoRelativo;
                        var coefApertura;
                        var todosPositivos = true;
                        var media;
                        var mediaGeom;
                        var mediaArm;
                        var mediaCuad;
                        var moda;
                        var mediana;
                        var q1;
                        var q3;
                        var rangoIntercuartílico;
                        var rangoMedio;
                        var mostrarSeriesAdicionales = false;
                        var varianzaP;
                        var desvP;
                        var coefVarP;
                        var varianzaM;
                        var desvM;
                        var coefVarM;
                        var ETMM;
                        var coefAsim;
                        var curtosis;
                        var pendiente;
                        var intercepto;
                        var r;
                        var r2;
                        var desvMedia;
                        var pronLin;
                        var tipoCurva = 'null';
                        var aExp;
                        var bExp;
                        var rExp;
                        var r2Exp;
                        var pronExp;
                        var aLog;
                        var bLog;
                        var rLog;
                        var r2Log;
                        var pronLog;
                        var aPot;
                        var bPot;
                        var rPot;
                        var r2Pot;
                        var pronPot;
                        //polinomial grado 2
                        var Pol2C0;
                        var Pol2C1;
                        var Pol2C2;
                        var Pol2R;
                        var Pol2R2;
                        var Pol2Pron;
                        //polinomial grado 3
                        var Pol3C0;
                        var Pol3C1;
                        var Pol3C2;
                        var Pol3C3;
                        var Pol3R;
                        var Pol3R2;
                        var Pol3Pron;
                        //polinomial grado 4
                        var Pol4C0;
                        var Pol4C1;
                        var Pol4C2;
                        var Pol4C3;
                        var Pol4C4;
                        var Pol4R;
                        var Pol4R2;
                        var Pol4Pron;
                        //polinomial grado 5
                        var Pol5C0;
                        var Pol5C1;
                        var Pol5C2;
                        var Pol5C3;
                        var Pol5C4;
                        var Pol5C5;
                        var Pol5R;
                        var Pol5R2;
                        var Pol5Pron;
                        //polinomial grado 6
                        var Pol6C0;
                        var Pol6C1;
                        var Pol6C2;
                        var Pol6C3;
                        var Pol6C4;
                        var Pol6C5;
                        var Pol6C6;
                        var Pol6R;
                        var Pol6R2;
                        var Pol6Pron;
                        // para el gráfico de datos
                        var chart;
                        // para el gráfico de regresión
                        var chartReg;
                        // para el gráfico de caja
                        var chartCaja;
                        //almacena la regresión seleccionada
                        var miTipoReg = "ninguna";
                        var regActualizado = false;
                        var cajaActualizado = false;
                        var cajaDisponible = false;

                        //SUMA ARRAY
                        function sumar() {
                            var temp = 0;
                            var i;
                            for (i = 0; i < arrayDatos.length; i++) {
                                temp = Number(arrayDatos[i]) + temp;
                            }
                            return temp;
                        }
                        //SUMA cuadrados
                        function sumarCuadrados() {
                            var temp = 0;
                            var i;
                            for (i = 0; i < arrayDatos.length; i++) {
                                temp = Number(arrayDatos[i]) * Number(arrayDatos[i]) + temp;
                            }
                            return temp;
                        }
                        //recorre y obtiene max y min                  
                        function maxmin() {
                            var tempMax = Number(arrayDatos[0]) ;
                            var tempMin = Number(arrayDatos[0]) ;
                            var i;
                            todosPositivos = true;
                            for (i = 0; i < arrayDatos.length; i++) {
                                //verifica si no hay negativos
                                if (arrayDatos[i] <= 0) { todosPositivos = false; }
                                //mayor
                                if (arrayDatos[i] > tempMax) {
                                    tempMax = Number(arrayDatos[i]);
                                }
                                //menor
                                if (arrayDatos[i] < tempMin) {
                                    tempMin = Number(arrayDatos[i]);
                                }                                
                            } 
                            max = tempMax;
                            min = tempMin;                            
                        }
                        //productoria
                        function calculaProductoria() {                            
                            var prod = 1;
                            var i;
                            if (todosPositivos == false) {
                                //no la calcula
                                prod = "Requiere valores positivos";
                            } else {
                                for (i = 0; i < arrayDatos.length; i++) {
                                    prod = Number(arrayDatos[i]) * prod;
                                }                                
                            }
                            return prod;
                        }
                        //media geométrica
                        function mediaGeométrica() {
                            var temp;                            
                            var i;
                            if (todosPositivos == false) {
                                //no la calcula
                                temp = "Requiere valores positivos";
                            } else {                                
                                temp = Math.pow(productoria, 1 / cuenta);
                            }
                            return temp;
                        }
                        //media armónica
                        function mediaArmónica() {
                            var temp;
                            var sumaInv = 0;
                            var i;
                            if (todosPositivos == false) {
                                //no la calcula
                                temp = "Requiere valores positivos";
                            } else {
                                for (i = 0; i < arrayDatos.length; i++) {
                                    sumaInv = 1/Number(arrayDatos[i]) + sumaInv;
                                }
                                temp = sumaInv / cuenta;
                                temp = 1 / temp;
                            }
                            return temp;
                        }
                        //media cuadrática
                        function mediaCuadrática() {
                            var temp = 0;
                            temp = Math.sqrt(sumaCuadrados / cuenta);
                            return temp;
                        }
                        //devuelve la primera moda encontrada
                        function calculaModa() {
                            var repetidos = 1;
                            var temp = "No disponible (Sin duplicados)";
                            var contador = 0;
                            var i;
                            var j;
                            for (i = 0; i < arrayDatos.length; i++) {
                                contador = 0;
                                for (j = 0; j < arrayDatos.length; j++) {
                                    if (arrayDatos[i] == arrayDatos[j]) {
                                        contador++;
                                    }
                                }
                                if (contador > repetidos) {
                                    temp = arrayDatos[i];
                                    repetidos = contador;
                                }
                            }
                            return temp;
                        }
                        //devuelve la mediana
                        function calculaMediana() {
                            // Nota:
                            // n = cuenta (length)
                            // array ordenado es base 0
                            if (cuenta % 2 == 0) {
                                //es par
                                return (Number(ordenado[(cuenta / 2) - 1]) + Number(ordenado[cuenta / 2])) / 2;
                            } else {
                                //es impar
                                return Number(ordenado[((1 + cuenta) / 2) - 1]);
                            }
                        }
                        //devuelve primer cuartil
                        function calculaQ1() {
                            // Nota:
                            // n = cuenta (length)
                            // array ordenado es base 0
                            if (cuenta < 3) {
                                return "No disponible (N < 3)";
                            }
                            var parteEntera;
                            var parteDecimal;
                            var pos;

                            if ((1 + cuenta) % 4 == 0) {
                                //es múltiplo
                                pos = (1 + cuenta) / 4;
                                pos--;
                                return ordenado[pos];                                
                            } else {
                                //no es múltiplo                                
                                parteEntera = Math.floor((1 + cuenta) / 4);
                                parteDecimal = ((1 + cuenta) / 4) % 1;
                                return Number(ordenado[parteEntera - 1]) + parteDecimal * (ordenado[parteEntera] - ordenado[parteEntera-1]);
                            }
                        }
                        //devuelve tercer cuartil
                        function calculaQ3() {
                            // Nota:
                            // n = cuenta (length)
                            // array ordenado es base 0
                            if (cuenta < 3) {
                                return "No disponible (N < 3)";
                            }
                            var parteEntera;
                            var parteDecimal;
                            var pos;

                            if ((3 * (1 + cuenta)) % 4 == 0) {
                                //es múltiplo
                                pos = 3 * (1 + cuenta) / 4;
                                pos--;
                                return ordenado[pos];
                            } else {
                                //no es múltiplo                                
                                parteEntera = Math.floor(3 * (1 + cuenta) / 4);
                                parteDecimal = (3 * (1 + cuenta) / 4) % 1;
                                return Number(ordenado[parteEntera - 1]) + parteDecimal * (ordenado[parteEntera] - ordenado[parteEntera - 1]);
                            }
                        }
                        //devuelve rango intercuartílico
                        function calculaRangoIntercuartílico() {
                            if (cuenta < 3) {
                                return "No disponible (N < 3)";
                            } else {
                                return q3 - q1;
                            }                            
                        }
                        // devuelve el Rango medio
                        function calculaRangoMedio() {
                            return (Number(max) + min) / 2;
                        }
                        //devuelve varianza poblacional
                        function calculaVarianzaPoblacional() {
                            return (sumaCuadrados / cuenta) - (media * media);
                        }
                        //devuelve varianza muestral
                        function calculaVarianzaMuestral() {
                            if (cuenta < 2) {
                                return "No disponible (N < 2)";
                            } else {
                                return (sumaCuadrados / (cuenta - 1)) - (media * media * cuenta / (cuenta - 1));
                            }                               
                        }
                        //devuelve desviación estándar poblacional
                        function calculaDesvPoblacional() {                            
                            if (varianzaP < 0) {
                                //improbable, pero por si acaso
                                return "No disponible (Var < 0)";
                            }
                            //la raíz de la varianza
                            return Math.sqrt(varianzaP);
                        }
                        //devuelve desviación estándar muestral
                        function calculaDesvMuestral() {
                            if (cuenta < 2) {
                                return "No disponible (N < 2)";
                            }                             
                            if (varianzaM < 0) {
                                //improbable, pero por si acaso
                                return "No disponible (VarM < 0)";
                            }
                            //la raíz de la varianza muestral
                            return Math.sqrt(varianzaM);
                        }
                        //devuelve el coeficiente de variación poblacional
                        function calculaCoefVarPoblacional() {
                            if (media == 0) {
                                //evita la división por cero
                                return "No disponible (Media = 0)";
                            }
                            //cociente
                            return desvP / media;
                        }
                        //devuelve el coeficiente de variación muestral
                        function calculaCoefVarMuestral() {
                            if (cuenta < 2) {
                                return "No disponible (N < 2)";
                            }    
                            if (media == 0) {
                                //evita la división por cero
                                return "No disponible (Media = 0)";
                            }
                            //cociente
                            return desvM / media;
                        }
                        //devuelve el error típico de la media muestral ETMM
                        function calculaETMM() {
                            if (cuenta < 2) {
                                return "No disponible (N < 2)";
                            }
                            if (varianzaM < 0) {
                                //improbable, pero por si acaso
                                return "No disponible (VarM < 0)";
                            }
                            //un cociente
                            return desvM / Math.sqrt(cuenta);
                        }
                        //devuelve el coeficiente de asimetría
                        function calculaCoefAsim() {
                            if (cuenta < 3) {
                                return "No disponible (N < 3)";
                            }
                            if (desvM == 0) {
                                //impide div/0
                                return "No disponible (Desv Est = 0)";
                            }
                            //cálcula...
                            var i;
                            var sumaCubos = 0;
                            for (i = 0; i < arrayDatos.length; i++) {
                                sumaCubos = Math.pow((arrayDatos[i] - media) / desvM, 3) + sumaCubos;
                            }
                            return sumaCubos * cuenta / ((cuenta - 1) * (cuenta - 2));
                        }
                        //devuelve la curtosis
                        function calculaCurtosis() {
                            if (cuenta < 4) {
                                return "No disponible (N < 4)";
                            }
                            if (desvM == 0) {
                                //impide div/0
                                return "No disponible (Desv Est = 0)";
                            }
                            //cálcula...
                            var i;
                            var suma4 = 0;
                            var temp;
                            var restar;
                            for (i = 0; i < arrayDatos.length; i++) {
                                suma4 = Math.pow((arrayDatos[i] - media) / desvM, 4) + suma4;
                            }
                            temp = cuenta * (cuenta + 1);
                            temp = temp / ((cuenta - 1) * (cuenta - 2) * (cuenta - 3));
                            temp = temp * suma4;
                            restar = 3 * (cuenta - 1) * (cuenta - 1);
                            restar = restar / ((cuenta - 2) * (cuenta - 3));
                            return temp - restar;
                        }
                        //regresión lineal
                        function regLineal() {
                            if (cuenta == 1) {
                                //mínimo dos puntos de datos
                                //asume linealidad y recta horizontal
                                pendiente = 0;
                                intercepto = Number(arrayDatos[0]);
                                r = 1;
                                r2 = 1;
                                return;
                            }
                            
                            //cálcula...
                            var i;
                            var numerador = 0;
                            var denominador1 = 0;
                            var denominador2 = 0;
                            var mediaX;
                            var temp = 0;

                            for (i = 1; i <= cuenta; i++) {
                                temp = Number(i) + temp;
                            }
                            mediaX = temp / cuenta;
                            //sumatorias
                            for (i = 0; i < arrayDatos.length; i++) {
                                numerador = (1 + i - mediaX) * (arrayDatos[i] - media) + numerador;
                                denominador1 = Math.pow(1 + i - mediaX, 2) + denominador1;
                                denominador2 = Math.pow(arrayDatos[i] - media, 2) + denominador2;
                            }
                            if (denominador1 == 0) {
                                //improbable
                                pendiente = "No disponible";
                                intercepto = "No disponible";
                                r = "No disponible";
                                r2 = "No disponible";
                                return;
                            } else {
                                pendiente = numerador / denominador1;
                                intercepto = media - pendiente * mediaX;
                            }
                            if (denominador2 == 0) {
                                //improbable 
                                if (pendiente == 0) {
                                    r = 1;
                                    r2 = 1;
                                    return;
                                }
                                r = "No disponible";
                                r2 = "No disponible";
                                return;
                            } else {
                                r = numerador / Math.sqrt(denominador1 * denominador2);
                                r2 = r * r;
                            }                            
                        }
                        //devuelve el desviación media
                        function calculaDesvMedia() {                            
                            //cálcula...
                            var i;
                            var temp = 0;
                            for (i = 0; i < arrayDatos.length; i++) {
                                temp = Math.abs(arrayDatos[i] - media) + temp;
                            }
                            return temp / cuenta;
                        }
                        //devuelve el pronóstico lineal
                        function calculaPronósticoLineal() { 
                            if (isNaN(pendiente) == true || isNaN(intercepto) == true) {
                                return "No disponible";
                            }
                            return Number(pendiente * (1 + cuenta)) + Number(intercepto);
                        }
                        //regresión exponencial
                        function regExponencial() {
                            if (cuenta < 2) {
                                //mínimo dos puntos de datos
                                //No asume nada
                                aExp = "No disponible (N < 2)";
                                bExp = "No disponible (N < 2)";
                                rExp = "No disponible (N < 2)";
                                r2Exp = "No disponible (N < 2)";
                                pronExp = "No disponible (N < 2)";
                                return;
                            }
                            if (todosPositivos == false) {
                                //no realiza la regresión 
                                aExp = "Requiere valores positivos";
                                bExp = "Requiere valores positivos";
                                rExp = "Requiere valores positivos";
                                r2Exp = "Requiere valores positivos";
                                pronExp = "Requiere valores positivos";
                                return;
                            }
                            //cálcula...
                            var i;
                            var numerador = 0;
                            var denominador1 = 0;
                            var denominador2 = 0;
                            var mediaX;
                            var mediaLnY = 0;
                            var temp = 0;

                            for (i = 1; i <= cuenta; i++) {
                                temp = Number(i) + temp;
                                mediaLnY = Math.log(arrayDatos[i - 1]) + mediaLnY;
                            }
                            mediaX = temp / cuenta;
                            mediaLnY = mediaLnY / cuenta;
                            //sumatorias
                            for (i = 0; i < arrayDatos.length; i++) {
                                numerador = (1 + i - mediaX) * (Math.log(arrayDatos[i]) - mediaLnY) + numerador;
                                denominador1 = Math.pow(1 + i - mediaX, 2) + denominador1;
                                denominador2 = Math.pow(Math.log(arrayDatos[i]) - mediaLnY, 2) + denominador2;
                            }
                            if (denominador1 == 0) {
                                //improbable
                                aExp = "No disponible";
                                bExp = "No disponible";
                                rExp = "No disponible";
                                r2Exp = "No disponible";
                                return;
                            } else {
                                bExp = numerador / denominador1;
                                aExp = mediaLnY - bExp * mediaX;
                                aExp = Math.exp(aExp);
                            }
                            if (denominador2 == 0) {                                
                                rExp = "No disponible";
                                r2Exp = "No disponible";
                                return;
                            } else {
                                rExp = numerador / Math.sqrt(denominador1 * denominador2);
                                r2Exp = rExp * rExp;
                            }
                        }
                        //devuelve el pronóstico exponencial
                        function calculaPronósticoExponencial() {
                            if (cuenta < 2) {
                                return "No disponible (N < 2)";
                            }
                            if (todosPositivos == false) {                                
                                return "Requiere valores positivos";                                
                            }
                            if (isNaN(aExp) == true || isNaN(bExp) == true) {
                                return "No disponible";
                            }                            
                            var siguiente = 1 + cuenta;
                            return aExp * Math.exp(bExp * siguiente);
                        }

                        //regresión logarítmica
                        function regLogarítmica() {
                            if (cuenta < 2) {
                                //mínimo dos puntos de datos
                                //No asume nada
                                aLog = "No disponible (N < 2)";
                                bLog = "No disponible (N < 2)";
                                rLog = "No disponible (N < 2)";
                                r2Log = "No disponible (N < 2)";
                                pronLog = "No disponible (N < 2)";
                                return;
                            }
                            
                            //cálcula...
                            var i;
                            var numerador = 0;
                            var denominador1 = 0;
                            var denominador2 = 0;
                            var mediaLnX = 0;  

                            for (i = 1; i <= cuenta; i++) {                                
                                mediaLnX = Math.log(i) + mediaLnX;
                            }                            
                            mediaLnX = mediaLnX / cuenta;
                            //sumatorias
                            for (i = 0; i < arrayDatos.length; i++) {
                                numerador = (Math.log(1 + i) - mediaLnX) * (arrayDatos[i] - media) + numerador;
                                denominador1 = Math.pow(Math.log(1 + i) - mediaLnX, 2) + denominador1;
                                denominador2 = Math.pow(arrayDatos[i] - media, 2) + denominador2;
                            }
                            if (denominador1 == 0) {
                                //improbable
                                aLog = "No disponible";
                                bLog = "No disponible";
                                rLog = "No disponible";
                                r2Log = "No disponible";
                                return;
                            } else {
                                aLog = numerador / denominador1;
                                bLog = media - aLog * mediaLnX;                                
                            }
                            if (denominador2 == 0) {
                                rLog = "No disponible";
                                r2Log = "No disponible";
                                return;
                            } else {
                                rLog = numerador / Math.sqrt(denominador1 * denominador2);
                                r2Log = rLog * rLog;
                            }
                        }
                        //devuelve el pronóstico logarítmico
                        function calculaPronósticoLogarítmico() {
                            if (cuenta < 2) {
                                return "No disponible (N < 2)";
                            }                            
                            if (isNaN(aLog) == true || isNaN(bLog) == true) {
                                return "No disponible";
                            }
                            var siguiente = 1 + cuenta;
                            return Number(bLog) + aLog * Math.log(siguiente);
                        }
                        //regresión potencial
                        function regPotencial() {                             
                            if (cuenta < 2) {
                                //mínimo dos puntos de datos
                                //No asume nada
                                aPot = "No disponible (N < 2)";
                                bPot = "No disponible (N < 2)";
                                rPot = "No disponible (N < 2)";
                                r2Pot = "No disponible (N < 2)";
                                pronPot = "No disponible (N < 2)";
                                return;
                            }
                            if (todosPositivos == false) {
                                //no realiza la regresión 
                                aPot = "Requiere valores positivos";
                                bPot = "Requiere valores positivos";
                                rPot = "Requiere valores positivos";
                                r2Pot = "Requiere valores positivos";
                                pronPot = "Requiere valores positivos";
                                return;
                            }
                            //cálcula...
                            var i;
                            var numerador = 0;
                            var denominador1 = 0;
                            var denominador2 = 0;
                            var mediaLnX = 0;
                            var mediaLnY = 0;                            

                            for (i = 1; i <= cuenta; i++) {
                                mediaLnX = Math.log(i) + mediaLnX;
                                mediaLnY = Math.log(arrayDatos[i - 1]) + mediaLnY;
                            }
                            mediaLnX = mediaLnX / cuenta;
                            mediaLnY = mediaLnY / cuenta;
                            //sumatorias
                            for (i = 0; i < arrayDatos.length; i++) {
                                numerador = (Math.log(1 + i) - mediaLnX) * (Math.log(arrayDatos[i]) - mediaLnY) + numerador;
                                denominador1 = Math.pow(Math.log(1 + i) - mediaLnX, 2) + denominador1;
                                denominador2 = Math.pow(Math.log(arrayDatos[i]) - mediaLnY, 2) + denominador2;
                            }
                            if (denominador1 == 0) {
                                //improbable
                                aPot = "No disponible";
                                bPot = "No disponible";
                                rPot = "No disponible";
                                r2Pot = "No disponible";
                                return;
                            } else {
                                bPot = numerador / denominador1;
                                aPot = mediaLnY - bPot * mediaLnX;
                                aPot = Math.exp(aPot);
                            }
                            if (denominador2 == 0) {
                                rPot = "No disponible";
                                r2Pot = "No disponible";
                                return;
                            } else {
                                rPot = numerador / Math.sqrt(denominador1 * denominador2);
                                r2Pot = rPot * rPot;
                            }
                        }
                        //devuelve el pronóstico potencial
                        function calculaPronósticoPotencial() {
                            if (cuenta < 2) {
                                return "No disponible (N < 2)";
                            }
                            if (todosPositivos == false) {
                                return "Requiere valores positivos";
                            }
                            if (isNaN(aPot) == true || isNaN(bPot) == true) {
                                return "No disponible";
                            }
                            var siguiente = 1 + cuenta;
                            return aPot * Math.pow(siguiente, bPot);
                        }
                        /** resuelve un sistema de ecuaciones dado una matrix n x n+1
                            devuelve un vector n x 1 con las soluciones
                            basado y mejorado a partir de https://martin-thoma.com/solving-linear-equations-with-gaussian-elimination/    */
                        function gauss(A) {
                            try {
                                var n = 1;
                                n = A.length;

                                for (var i = 0; i < n; i++) {
                                    // Search for maximum in this column
                                    var maxEl = Math.abs(A[i][i]);
                                    var maxRow = i;
                                    for (var k = i + 1; k < n; k++) {
                                        if (Math.abs(A[k][i]) > maxEl) {
                                            maxEl = Math.abs(A[k][i]);
                                            maxRow = k;
                                        }
                                    }

                                    // Swap maximum row with current row (column by column)
                                    for (var k = i; k < n + 1; k++) {
                                        var tmp = A[maxRow][k];
                                        A[maxRow][k] = A[i][k];
                                        A[i][k] = tmp;
                                    }

                                    // Make all rows below this one 0 in current column
                                    for (k = i + 1; k < n; k++) {
                                        var c = -A[k][i] / A[i][i];
                                        for (var j = i; j < n + 1; j++) {
                                            if (i == j) {
                                                A[k][j] = 0;
                                            } else {
                                                A[k][j] += c * A[i][j];
                                            }
                                        }
                                    }
                                }

                                // Solve equation Ax=b for an upper triangular matrix A
                                var x = new Array(n);
                                for (var i = n - 1; i > -1; i--) {
                                    x[i] = A[i][n] / A[i][i];
                                    for (var k = i - 1; k > -1; k--) {
                                        A[k][n] -= A[k][i] * x[i];
                                    }
                                }
                            }
                            catch(err) {
                                var x = [];
                                for (var i = 0; i < n; i++) {
                                    x[i] = "No disponible";
                                }
                            }
                            finally {
                                return x;
                            }
                        }
                        // fin gauss

                        //regresión polinomial cualquier grado 
                        function regPolinomial(grado) {
                            if (cuenta < 1 + grado) {
                                var Sol = [];
                                var tope = 1 + grado;
                                Sol.length = 4 + grado;
                                for (i = 0; i < Sol.length; i++) {
                                    Sol[i] = "No disponible (N < " + tope + ")";
                                }
                                return Sol;
                            }
                            try {
                                var i;
                                var j;
                                var temp;
                                var St;
                                var Sr;
                                var tempR;
                                var tempR2;
                                var tempPron;
                                var tempEval;
                                var Sol = [];
                                var Sistema = [];
                                for (var i = 0; i <= grado; i++) {
                                    Sistema[i] = [];
                                    for (var j = 0; j <= 1 + grado; j++) {
                                        Sistema[i][j] = undefined;
                                    }
                                }
                                //obtiene las sumas de potencias de 0 a 2*grado
                                var xPot = [];
                                var xPotY = [];

                                for (i = 0; i <= (2 * grado); i++) {
                                    xPot[i] = 0;
                                    xPotY[i] = 0;
                                }
                                for (i = 0; i <= (2 * grado); i++) {
                                    for (j = 1; j <= cuenta; j++) {
                                        xPot[i] = Math.pow(j, i) + xPot[i];
                                        if (i <= grado) {
                                            xPotY[i] = arrayDatos[j - 1] * Math.pow(j, i) + xPotY[i];
                                        }
                                    }
                                }
                                //agrega a la matrix Sistema[][] los coeficientes
                                for (i = 0; i <= grado; i++) {
                                    for (j = 0; j <= grado; j++) {
                                        Sistema[i][j] = xPot[Number(i) + j];
                                    }
                                }
                                //agrega a la matrix Sistema[][] los términos independientes
                                j = 1 + grado;
                                for (i = 0; i <= grado; i++) {
                                    Sistema[i][j] = xPotY[i];
                                }
                                // soluciona el sistema de ecuaciones por Gauss
                                Sol = gauss(Sistema);

                                // halla St
                                temp = 0;
                                for (i = 0; i < arrayDatos.length; i++) {
                                    temp = Math.pow(arrayDatos[i] - media, 2) + temp;
                                }
                                St = temp;
                                // halla Sr
                                temp = 0;
                                for (i = 0; i < arrayDatos.length; i++) {
                                    //evalúa el polinomio en i
                                    tempEval = 0;
                                    for (j = 0; j <= grado; j++) {
                                        tempEval = Math.pow(1 + i, j) * Sol[j] + tempEval;
                                    }
                                    temp = Math.pow(arrayDatos[i] - tempEval, 2) + temp;
                                }
                                Sr = temp;
                                //halla r y r^2
                                if (St == 0) {
                                    //improbable
                                    tempR2 = "No disponible";
                                    tempR = "No disponible";
                                } else {
                                    tempR2 = (St - Sr) / St;
                                    if (tempR2 < 0) {
                                        tempR = "No disponible";
                                    } else {
                                        tempR = Math.sqrt(tempR2);
                                    }
                                }
                                //evalúa el polinomio para hallar el pronóstico
                                tempEval = 0;
                                for (j = 0; j <= grado; j++) {
                                    tempEval = Math.pow(1 + cuenta, j) * Sol[j] + tempEval;
                                }
                                tempPron = tempEval;
                                //extiende el vector solución
                                Sol[Sol.length] = tempR;
                                Sol[Sol.length] = tempR2;
                                Sol[Sol.length] = tempPron;                                
                            }
                            catch (err) {
                                var Sol = [];
                                Sol.length = 4 + grado;
                                for (i = 0; i < Sol.length; i++) {
                                    Sol[i] = "No disponible";
                                }
                            }
                            finally {
                                //Devuelve el vector extendido: coeficientes + r + r^2 + pronóstico
                                return Sol;
                            }
                        }
                    </script>
                    <!--REALIZA CÁLCULOS-->
                    <script>
                        //obtiene referencias

                        //el input range NÚMERO DE DATOS
                        var slider = document.getElementById("rangoDatos");

                        //array para almacenar los valores ingresados
                        var arrayDatos = [];
                        //array para ordenar los datos
                        var ordenado = [];

                        var getbtnCalcular = document.getElementById("btnCalcular");
                        var getbtnCopiar = document.getElementById("btnCopiar");

                        var getMinus = document.getElementById("minus");
                        var getPlus = document.getElementById("plus");

                        //tamaño de datos cambia dinámicamente con el slider
                        //input y change, redundantes por un bug en IE

                        slider.oninput = function () {
                            if (this.value > 1) {
                                document.getElementById("numDatos").innerHTML = this.value + " datos";
                            } else {
                                document.getElementById("numDatos").innerHTML = this.value + " dato";
                            }
                            
                            borrarResultados();
                            mostrarDatos(this.value);
                        }
                        slider.onchange = function () {
                            if (this.value > 1) {
                                document.getElementById("numDatos").innerHTML = this.value + " datos";
                            } else {
                                document.getElementById("numDatos").innerHTML = this.value + " dato";
                            }

                            borrarResultados();
                            mostrarDatos(this.value);
                        }
                        //muestra los necesarios
                        function mostrarDatos(num) {
                            var i;
                            for (i = 1; i <= 100; i++) {
                                if (i <= Number(num)) {
                                    document.getElementById("div" + i).style.display = "block";
                                    document.getElementById("dato" + i).value = "";
                                } else {
                                    document.getElementById("div" + i).style.display = "none";
                                }
                            }

                        }
                        //borra todo
                        function borrarResultados() {
                            document.getElementById("cuenta").value = "";
                            document.getElementById("suma").value = "";
                            document.getElementById("max").value = "";
                            document.getElementById("min").value = "";
                            document.getElementById("rango").value = "";
                            document.getElementById("media").value = "";
                            document.getElementById("mediaGeom").value = "";
                            document.getElementById("mediaArm").value = "";
                            document.getElementById("productoria").value = "";
                            document.getElementById("sumaCuadrados").value = "";
                            document.getElementById("recorridoRelativo").value = "";
                            document.getElementById("mediaCuad").value = "";                            
                            document.getElementById("coefApertura").value = "";
                            document.getElementById("moda").value = "";
                            document.getElementById("mediana").value = "";
                            document.getElementById("q1").value = "";
                            document.getElementById("q3").value = "";
                            document.getElementById("rangoIntercuartílico").value = "";
                            document.getElementById("rangoMedio").value = "";
                            document.getElementById("varianzaP").value = "";
                            document.getElementById("desvP").value = "";
                            document.getElementById("coefVarP").value = "";
                            document.getElementById("varianzaM").value = "";
                            document.getElementById("desvM").value = "";
                            document.getElementById("coefVarM").value = "";
                            document.getElementById("ETMM").value = "";
                            document.getElementById("coefAsim").value = "";
                            document.getElementById("curtosis").value = "";
                            document.getElementById("pendiente").value = "";
                            document.getElementById("intercepto").value = "";
                            document.getElementById("r").value = "";
                            document.getElementById("r2").value = "";
                            document.getElementById("desvMedia").value = "";
                            document.getElementById("pronLin").value = "";
                            document.getElementById("aExp").value = "";
                            document.getElementById("bExp").value = "";
                            document.getElementById("rExp").value = "";
                            document.getElementById("r2Exp").value = "";
                            document.getElementById("pronExp").value = "";
                            document.getElementById("aLog").value = "";
                            document.getElementById("bLog").value = "";
                            document.getElementById("rLog").value = "";
                            document.getElementById("r2Log").value = "";
                            document.getElementById("pronLog").value = "";
                            document.getElementById("aPot").value = "";
                            document.getElementById("bPot").value = "";
                            document.getElementById("rPot").value = "";
                            document.getElementById("r2Pot").value = "";
                            document.getElementById("pronPot").value = "";
                            // polinomial grado 2
                            document.getElementById("Pol2C0").value = "";
                            document.getElementById("Pol2C1").value = "";
                            document.getElementById("Pol2C2").value = "";
                            document.getElementById("Pol2R").value = "";
                            document.getElementById("Pol2R2").value = "";
                            document.getElementById("Pol2Pron").value = "";
                            // polinomial grado 3
                            document.getElementById("Pol3C0").value = "";
                            document.getElementById("Pol3C1").value = "";
                            document.getElementById("Pol3C2").value = "";
                            document.getElementById("Pol3C3").value = "";
                            document.getElementById("Pol3R").value = "";
                            document.getElementById("Pol3R2").value = "";
                            document.getElementById("Pol3Pron").value = "";
                            // polinomial grado 4
                            document.getElementById("Pol4C0").value = "";
                            document.getElementById("Pol4C1").value = "";
                            document.getElementById("Pol4C2").value = "";
                            document.getElementById("Pol4C3").value = "";
                            document.getElementById("Pol4C4").value = "";
                            document.getElementById("Pol4R").value = "";
                            document.getElementById("Pol4R2").value = "";
                            document.getElementById("Pol4Pron").value = "";
                            // polinomial grado 5
                            document.getElementById("Pol5C0").value = "";
                            document.getElementById("Pol5C1").value = "";
                            document.getElementById("Pol5C2").value = "";
                            document.getElementById("Pol5C3").value = "";
                            document.getElementById("Pol5C4").value = "";
                            document.getElementById("Pol5C5").value = "";
                            document.getElementById("Pol5R").value = "";
                            document.getElementById("Pol5R2").value = "";
                            document.getElementById("Pol5Pron").value = "";
                            // polinomial grado 6
                            document.getElementById("Pol6C0").value = "";
                            document.getElementById("Pol6C1").value = "";
                            document.getElementById("Pol6C2").value = "";
                            document.getElementById("Pol6C3").value = "";
                            document.getElementById("Pol6C4").value = "";
                            document.getElementById("Pol6C5").value = "";
                            document.getElementById("Pol6C6").value = "";
                            document.getElementById("Pol6R").value = "";
                            document.getElementById("Pol6R2").value = "";
                            document.getElementById("Pol6Pron").value = "";
                            //nada que copiar
                            getbtnCopiar.setAttribute("disabled", "disabled");
                            //nada que graficar
                            document.getElementById("tab").style.display = "none";
                            document.getElementById("esencial").style.display = "none";
                            document.getElementById("regresión").style.display = "none";
                            document.getElementById("caja").style.display = "none";
                            document.getElementById("linechart").style.display = "none";
                            document.getElementById("opcionesGráfico").style.display = "none";
                            document.getElementById("regChart").style.display = "none";
                            document.getElementById("opcionesGráficoReg").style.display = "none";
                            document.getElementById("cajachart").style.display = "none";
                            document.getElementById("opcionesGráficoCaja").style.display = "none";
                            document.getElementById("noDisponible").style.display = "block";

                        }

                        //parámetros deben ser correctos
                        function validarParámetros() {
                            var i;
                            //Borra los array
                            arrayDatos.length = 0;
                            ordenado.length = 0;
                            //recorre todos los input
                            for (i = 1; i <= Number(slider.value); i++) {
                                //valida (compatible con tipo number)
                                if (Number(document.getElementById("dato" + i).value) == 0 && document.getElementById("dato" + i).value == ""
                                    || isNaN(document.getElementById("dato" + i).value) == true) {
                                    //enfoca el error
                                    document.getElementById("dato" + i).focus();
                                    //sale
                                    return false;
                                }
                                //se van almacenando los valores ingresados en el array de datos
                                arrayDatos[i - 1] = document.getElementById("dato" + i).value;
                                //se almacena una copia para ordenarla
                                ordenado[i - 1] = arrayDatos[i - 1];
                            }
                            //ordena el array
                            ordenado.sort(function (a, b) { return a - b });
                            // todo salió bien
                            return true;
                        }

                        //realiza el cálculo
                        function calcular() {
                            showSnackbar("¡Página en construcción!");
                            return;
                            //valida
                            if (validarParámetros() == false) {
                                //informa del error
                                showSnackbar("¡Error en los datos ingresados!");
                                return;
                            }
                            //ahora sí trabaja con los datos validados...

                            
                            //calcula
                            //cuenta
                            cuenta = arrayDatos.length;
                            //suma
                            suma = sumar();
                            //suma de cuadrados
                            sumaCuadrados = sumarCuadrados();                            
                            //max, min, todos postivos?
                            maxmin();
                            //productoria
                            productoria = calculaProductoria();
                            //rango o recorrido
                            rango = max - min;                            
                            //media aritmética
                            media = suma / cuenta;
                            //recorrido relativo
                            if (media == 0) {
                                recorridoRelativo = "No disponible (Media = 0)";
                            } else {
                                recorridoRelativo = rango / media;
                            }                            
                            //coeficiente da apertura
                            if (min == 0) {
                                coefApertura = "No disponible (Mínimo = 0)";
                            } else {
                                coefApertura = max / min;
                            }  
                            //media geométrica
                            mediaGeom = mediaGeométrica();
                            //media armónica
                            mediaArm = mediaArmónica();
                            //media cuadrática
                            mediaCuad = mediaCuadrática();
                            //moda
                            moda = calculaModa();
                            //mediana
                            mediana = calculaMediana();
                            //primer cuartil
                            q1 = calculaQ1();
                            //tercer cuartil
                            q3 = calculaQ3();
                            //rango intercuartílico
                            rangoIntercuartílico = calculaRangoIntercuartílico();
                            //rango medio
                            rangoMedio = calculaRangoMedio();
                            //desviación media
                            desvMedia = calculaDesvMedia();
                            //varianza poblacional
                            varianzaP = calculaVarianzaPoblacional();
                            //desviación estándar poblacional
                            desvP = calculaDesvPoblacional();
                            //coeficiente de variación poblacional
                            coefVarP = calculaCoefVarPoblacional();
                            //varianza muestral
                            varianzaM = calculaVarianzaMuestral();
                            //desviación estándar muestral
                            desvM = calculaDesvMuestral();
                            //coeficiente de variación muestral
                            coefVarM = calculaCoefVarMuestral();
                            //error típico de la media muestral
                            ETMM = calculaETMM();
                            //coeficiente de asimetría
                            coefAsim = calculaCoefAsim();
                            //curtosis
                            curtosis = calculaCurtosis();
                            //regresión lineal
                            //se obtienen 4 variables: pendiente, intercepto, r y r^2
                            regLineal(); 
                            pronLin = calculaPronósticoLineal();
                            //regresión exponencial
                            // se obtienen 4 variables: aExp, bExp, rExp y r2Exp
                            regExponencial();
                            pronExp = calculaPronósticoExponencial();
                            //regresión logarítmica
                            // se obtienen 4 variables: aLog, bLog, rLog y r2Log
                            regLogarítmica();
                            pronLog = calculaPronósticoLogarítmico();
                            //regresión potencial
                            // se obtienen 4 variables: aPot, bPot, rPot y r2Pot
                            regPotencial();
                            pronPot = calculaPronósticoPotencial();
                            //regresión polinomial grado 2
                            // se obtienen todos los parámetros
                            var ArrayTemp = [];                            
                            ArrayTemp = regPolinomial(2);                            
                            Pol2C0 = ArrayTemp[0];
                            Pol2C1 = ArrayTemp[1];
                            Pol2C2 = ArrayTemp[2];
                            Pol2R = ArrayTemp[3];
                            Pol2R2 = ArrayTemp[4];
                            Pol2Pron = ArrayTemp[5];
                            //regresión polinomial grado 3
                            // se obtienen todos los parámetros
                            var ArrayTemp = [];
                            ArrayTemp = regPolinomial(3);
                            Pol3C0 = ArrayTemp[0];
                            Pol3C1 = ArrayTemp[1];
                            Pol3C2 = ArrayTemp[2];
                            Pol3C3 = ArrayTemp[3];
                            Pol3R = ArrayTemp[4];
                            Pol3R2 = ArrayTemp[5];
                            Pol3Pron = ArrayTemp[6];
                            //regresión polinomial grado 4
                            // se obtienen todos los parámetros
                            var ArrayTemp = [];
                            ArrayTemp = regPolinomial(4);
                            Pol4C0 = ArrayTemp[0];
                            Pol4C1 = ArrayTemp[1];
                            Pol4C2 = ArrayTemp[2];
                            Pol4C3 = ArrayTemp[3];
                            Pol4C4 = ArrayTemp[4];
                            Pol4R = ArrayTemp[5];
                            Pol4R2 = ArrayTemp[6];
                            Pol4Pron = ArrayTemp[7];
                            //regresión polinomial grado 5
                            // se obtienen todos los parámetros
                            var ArrayTemp = [];
                            ArrayTemp = regPolinomial(5);
                            Pol5C0 = ArrayTemp[0];
                            Pol5C1 = ArrayTemp[1];
                            Pol5C2 = ArrayTemp[2];
                            Pol5C3 = ArrayTemp[3];
                            Pol5C4 = ArrayTemp[4];
                            Pol5C5 = ArrayTemp[5];
                            Pol5R = ArrayTemp[6];
                            Pol5R2 = ArrayTemp[7];
                            Pol5Pron = ArrayTemp[8];
                            //regresión polinomial grado 6
                            // se obtienen todos los parámetros
                            var ArrayTemp = [];
                            ArrayTemp = regPolinomial(6);
                            Pol6C0 = ArrayTemp[0];
                            Pol6C1 = ArrayTemp[1];
                            Pol6C2 = ArrayTemp[2];
                            Pol6C3 = ArrayTemp[3];
                            Pol6C4 = ArrayTemp[4];
                            Pol6C5 = ArrayTemp[5];
                            Pol6C6 = ArrayTemp[6];
                            Pol6R = ArrayTemp[7];
                            Pol6R2 = ArrayTemp[8];
                            Pol6Pron = ArrayTemp[9];
                            //formatea resultados: min 0 y max 9 decimales... y configuración local                            
                            //escribe resultados
                            document.getElementById("cuenta").value = cuenta;
                            document.getElementById("suma").value = suma.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("sumaCuadrados").value = sumaCuadrados.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("productoria").value = productoria.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("max").value = max.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("min").value = min.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("rango").value = rango.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("recorridoRelativo").value = recorridoRelativo.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("coefApertura").value = coefApertura.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("media").value = media.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("mediaGeom").value = mediaGeom.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("mediaArm").value = mediaArm.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("mediaCuad").value = mediaCuad.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("moda").value = moda.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("mediana").value = mediana.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("q1").value = q1.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("q3").value = q3.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("rangoIntercuartílico").value = rangoIntercuartílico.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("rangoMedio").value = rangoMedio.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("varianzaP").value = varianzaP.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("desvP").value = desvP.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("coefVarP").value = coefVarP.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("varianzaM").value = varianzaM.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("desvM").value = desvM.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("coefVarM").value = coefVarM.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("ETMM").value = ETMM.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("coefAsim").value = coefAsim.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("curtosis").value = curtosis.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("pendiente").value = pendiente.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("intercepto").value = intercepto.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("r").value = r.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("r2").value = r2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("desvMedia").value = desvMedia.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("pronLin").value = pronLin.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("aExp").value = aExp.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("bExp").value = bExp.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("rExp").value = rExp.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("r2Exp").value = r2Exp.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("pronExp").value = pronExp.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("aLog").value = aLog.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("bLog").value = bLog.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("rLog").value = rLog.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("r2Log").value = r2Log.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("pronLog").value = pronLog.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("aPot").value = aPot.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("bPot").value = bPot.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("rPot").value = rPot.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("r2Pot").value = r2Pot.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("pronPot").value = pronPot.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            // polinomial grado 2
                            document.getElementById("Pol2C0").value = Pol2C0.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol2C1").value = Pol2C1.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol2C2").value = Pol2C2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol2R").value = Pol2R.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol2R2").value = Pol2R2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol2Pron").value = Pol2Pron.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            // polinomial grado 3
                            document.getElementById("Pol3C0").value = Pol3C0.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol3C1").value = Pol3C1.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol3C2").value = Pol3C2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol3C3").value = Pol3C3.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol3R").value = Pol3R.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol3R2").value = Pol3R2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol3Pron").value = Pol3Pron.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            // polinomial grado 4
                            document.getElementById("Pol4C0").value = Pol4C0.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol4C1").value = Pol4C1.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol4C2").value = Pol4C2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol4C3").value = Pol4C3.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol4C4").value = Pol4C4.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol4R").value = Pol4R.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol4R2").value = Pol4R2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol4Pron").value = Pol4Pron.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            // polinomial grado 5
                            document.getElementById("Pol5C0").value = Pol5C0.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol5C1").value = Pol5C1.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol5C2").value = Pol5C2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol5C3").value = Pol5C3.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol5C4").value = Pol5C4.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol5C5").value = Pol5C5.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol5R").value = Pol5R.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol5R2").value = Pol5R2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol5Pron").value = Pol5Pron.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            // polinomial grado 6
                            document.getElementById("Pol6C0").value = Pol6C0.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol6C1").value = Pol6C1.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol6C2").value = Pol6C2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol6C3").value = Pol6C3.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol6C4").value = Pol6C4.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol6C5").value = Pol6C5.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol6C6").value = Pol6C6.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol6R").value = Pol6R.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol6R2").value = Pol6R2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol6Pron").value = Pol6Pron.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });

                            //informa éxito en cálculo
                            showSnackbar("¡Cálculos realizados!");

                            //ya hay algo que copiar
                            getbtnCopiar.removeAttribute("disabled");

                            //muestra las gráficas y sus opciones  
                            document.getElementById("tab").style.display = "block";
                            //tab por defecto
                            // Get the element with id="defaultOpen" and click on it
                            document.getElementById("defaultOpen").click();
                            document.getElementById("linechart").style.display = "block";
                            document.getElementById("opcionesGráfico").style.display = "block";  
                            document.getElementById("regChart").style.display = "block";
                            document.getElementById("opcionesGráficoReg").style.display = "block";                            
                            document.getElementById("noDisponible").style.display = "none";
                            
                            //gráfica de datos
                            if (mostrarSeriesAdicionales == true) {
                                drawChart3();
                            } else {
                                drawChart2();
                            }                            
                            //gráfica de regresión 
                            //  ninguna regresión, por defecto
                            miTipoReg = "ninguna";
                            document.getElementById("tipoReg").selectedIndex = "0";
                            drawChart4();
                            regActualizado = false;
                            //gráfica de caja
                            cajaDisponible = validarCajaDisponible();
                            cajaActualizado = false;
                            if (cajaDisponible == true) {
                                document.getElementById("cajachart").style.display = "block";
                                document.getElementById("opcionesGráficoCaja").style.display = "block";
                                document.getElementById("cajaNoDisponible").style.display = "none";
                                drawChart6();
                            } else {
                                document.getElementById("cajachart").style.display = "none";
                                document.getElementById("opcionesGráficoCaja").style.display = "none";
                                document.getElementById("cajaNoDisponible").style.display = "block";
                            }
                            
                            
                        }
                        function manejador(e, miId) {                            
                            var characterCode;
                            // e.key es la recomendación actual
                            if (e.key != undefined) {
                                if (e.key.toLowerCase() == "enter") {
                                    characterCode = 13;
                                }
                                else {
                                    characterCode = 0;
                                }
                            } else {
                                /* navegadores antiguos...  */
                                characterCode = e.which || e.charCode || e.keyCode || e.keyIdentifier || 0;
                            }
                            //ejecuta solo si presionó Enter
                            //dirige el foco al siguiente con Enter                            
                            if (characterCode == 13) {                                 
                                //dirige el foco al siguiente con Enter                            
                                if (Number(miId.slice(4)) < Number(slider.value)) {
                                    var sigue = Number(miId.slice(4)) + 1
                                    document.getElementById("dato" + sigue).focus();
                                } else {
                                    //ejecuta si es el último input
                                    document.getElementById(miId).blur();
                                    getbtnCalcular.focus();
                                    calcular();
                                }

                            }
                        }

                        //****************************************
                        // COPIAR
                        //copia resultados al portapapeles
                        //****************************************

                        //pasa el contenido de cada campo a una cadena y la copia al portapapeles
                        function copiarResultados() {
                            //decide si se incluyen los datos ingresados al copiar los resultados
                            var incluyeDatos = document.getElementById("myCheck3").checked;                                
                            //aquí guardamos una referencia a cada control a copiar
                            var copyCampo;
                            //aquí vamos guardando la cadena total a copiar
                            var copyText = "*** ANÁLISIS DE DATOS ***" + "\r" ;
                                                        
                            // incluye los datos ingresados, si es necesario
                            if (incluyeDatos == true) {
                                // DATOS INGRESADOS
                                copyText = copyText + "DATOS INGRESADOS:";
                                var i;
                                var miDato;
                                for (i = 0; i < cuenta; i++) {
                                    miDato = Number(arrayDatos[i]).toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                                    copyText = copyText + "\r" + "Dato " + (1 + i) + " = " + "\t" + miDato;
                                }
                                copyText = copyText + "\r";
                            }
                            //RESULTADOS
                            copyText = copyText + "RESULTADOS:";
                            //cuenta
                            copyCampo = document.getElementById("cuenta");
                            copyText = copyText + "\r" + 'Número de Datos = ' + "\t" + copyCampo.value;
                            //suma
                            copyCampo = document.getElementById("suma");
                            copyText = copyText + "\r" + 'Suma = ' + "\t" + copyCampo.value;
                            //productoria
                            copyCampo = document.getElementById("productoria");
                            copyText = copyText + "\r" + 'Productoria = ' + "\t" + copyCampo.value;
                            //sumaCuadrados
                            copyCampo = document.getElementById("sumaCuadrados");
                            copyText = copyText + "\r" + 'Suma de cuadrados = ' + "\t" + copyCampo.value;
                            //max
                            copyCampo = document.getElementById("max");
                            copyText = copyText + "\r" + 'Máximo = ' + "\t" + copyCampo.value;
                            //min
                            copyCampo = document.getElementById("min");
                            copyText = copyText + "\r" + 'Mínimo = ' + "\t" + copyCampo.value;
                            //rango
                            copyCampo = document.getElementById("rango");
                            copyText = copyText + "\r" + 'Rango o recorrido = ' + "\t" + copyCampo.value;
                            //recorridoRelativo
                            copyCampo = document.getElementById("recorridoRelativo");
                            copyText = copyText + "\r" + 'Recorrido relativo = ' + "\t" + copyCampo.value;
                            //coefApertura
                            copyCampo = document.getElementById("coefApertura");
                            copyText = copyText + "\r" + 'Coeficiente de apertura = ' + "\t" + copyCampo.value;
                            //media
                            copyCampo = document.getElementById("media");
                            copyText = copyText + "\r" + 'Media aritmética = ' + "\t" + copyCampo.value;
                            //mediaGeom
                            copyCampo = document.getElementById("mediaGeom");
                            copyText = copyText + "\r" + 'Media geométrica = ' + "\t" + copyCampo.value;
                            //mediaArm
                            copyCampo = document.getElementById("mediaArm");
                            copyText = copyText + "\r" + 'Media armónica = ' + "\t" + copyCampo.value;
                            //mediaCuad
                            copyCampo = document.getElementById("mediaCuad");
                            copyText = copyText + "\r" + 'Media cuadrática = ' + "\t" + copyCampo.value;
                            //moda
                            copyCampo = document.getElementById("moda");
                            copyText = copyText + "\r" + 'Moda (Primera encontrada) = ' + "\t" + copyCampo.value;
                            //mediana
                            copyCampo = document.getElementById("mediana");
                            copyText = copyText + "\r" + 'Mediana = ' + "\t" + copyCampo.value;
                            //q1
                            copyCampo = document.getElementById("q1");
                            copyText = copyText + "\r" + 'Primer cuartil (Q1 = P25) = ' + "\t" + copyCampo.value;
                            //q3
                            copyCampo = document.getElementById("q3");
                            copyText = copyText + "\r" + 'Tercer cuartil (Q3 = P75) = ' + "\t" + copyCampo.value;
                            //rangoIntercuartílico
                            copyCampo = document.getElementById("rangoIntercuartílico");
                            copyText = copyText + "\r" + 'Rango intercuartílico (Q3 - Q1) = ' + "\t" + copyCampo.value;
                            //rangoMedio
                            copyCampo = document.getElementById("rangoMedio");
                            copyText = copyText + "\r" + 'Rango medio = ' + "\t" + copyCampo.value;
                            //desviación media
                            copyCampo = document.getElementById("desvMedia");
                            copyText = copyText + "\r" + 'Desviación media = ' + "\t" + copyCampo.value;
                            //varianzaP
                            copyCampo = document.getElementById("varianzaP");
                            copyText = copyText + "\r" + 'Varianza poblacional = ' + "\t" + copyCampo.value;
                            //desvP
                            copyCampo = document.getElementById("desvP");
                            copyText = copyText + "\r" + 'Desviación estándar poblacional = ' + "\t" + copyCampo.value;
                            //coefVarP
                            copyCampo = document.getElementById("coefVarP");
                            copyText = copyText + "\r" + 'Coeficiente de variación poblacional = ' + "\t" + copyCampo.value;
                            //varianzaM
                            copyCampo = document.getElementById("varianzaM");
                            copyText = copyText + "\r" + 'Varianza muestral = ' + "\t" + copyCampo.value;
                            //desvM
                            copyCampo = document.getElementById("desvM");
                            copyText = copyText + "\r" + 'Desviación estándar muestral = ' + "\t" + copyCampo.value;
                            //coefVarM
                            copyCampo = document.getElementById("coefVarM");
                            copyText = copyText + "\r" + 'Coeficiente de variación muestral = ' + "\t" + copyCampo.value;
                            //ETMM
                            copyCampo = document.getElementById("ETMM");
                            copyText = copyText + "\r" + 'Error típico de la media muestral = ' + "\t" + copyCampo.value;
                            //coefAsim
                            copyCampo = document.getElementById("coefAsim");
                            copyText = copyText + "\r" + 'Coeficiente de asimetría de Fisher = ' + "\t" + copyCampo.value;
                            //curtosis
                            copyCampo = document.getElementById("curtosis");
                            copyText = copyText + "\r" + 'Curtosis = ' + "\t" + copyCampo.value;
                            //pendiente
                            copyCampo = document.getElementById("pendiente");
                            copyText = copyText + "\r" + 'Pendiente recta de ajuste = ' + "\t" + copyCampo.value;
                            //intercepto
                            copyCampo = document.getElementById("intercepto");
                            copyText = copyText + "\r" + 'Intercepto recta de ajuste = ' + "\t" + copyCampo.value;
                            //r
                            copyCampo = document.getElementById("r");
                            copyText = copyText + "\r" + 'Coeficiente r lineal = ' + "\t" + copyCampo.value;
                            //r2
                            copyCampo = document.getElementById("r2");
                            copyText = copyText + "\r" + 'Coeficiente r^2 lineal = ' + "\t" + copyCampo.value;
                            //pronóstico lineal
                            copyCampo = document.getElementById("pronLin");
                            copyText = copyText + "\r" + 'Pronóstico lineal = ' + "\t" + copyCampo.value;
                            //a exp
                            copyCampo = document.getElementById("aExp");
                            copyText = copyText + "\r" + 'Parámetro a regresión exponencial = ' + "\t" + copyCampo.value;
                            //b exp
                            copyCampo = document.getElementById("bExp");
                            copyText = copyText + "\r" + 'Parámetro b regresión exponencial = ' + "\t" + copyCampo.value;
                            //r exp
                            copyCampo = document.getElementById("rExp");
                            copyText = copyText + "\r" + 'Coeficiente r exponencial = ' + "\t" + copyCampo.value;
                            //r2 exp
                            copyCampo = document.getElementById("r2Exp");
                            copyText = copyText + "\r" + 'Coeficiente r^2 exponencial = ' + "\t" + copyCampo.value;
                            //pronóstico exp
                            copyCampo = document.getElementById("pronExp");
                            copyText = copyText + "\r" + 'Pronóstico exponencial = ' + "\t" + copyCampo.value;
                            //a log
                            copyCampo = document.getElementById("aLog");
                            copyText = copyText + "\r" + 'Parámetro a regresión logarítmica = ' + "\t" + copyCampo.value;
                            //b log
                            copyCampo = document.getElementById("bLog");
                            copyText = copyText + "\r" + 'Parámetro b regresión logarítmica = ' + "\t" + copyCampo.value;
                            //r log
                            copyCampo = document.getElementById("rLog");
                            copyText = copyText + "\r" + 'Coeficiente r logarítmico = ' + "\t" + copyCampo.value;
                            //r2 log
                            copyCampo = document.getElementById("r2Log");
                            copyText = copyText + "\r" + 'Coeficiente r^2 logarítmico = ' + "\t" + copyCampo.value;
                            //pronóstico log
                            copyCampo = document.getElementById("pronLog");
                            copyText = copyText + "\r" + 'Pronóstico logarítmico = ' + "\t" + copyCampo.value;
                            //a Pot
                            copyCampo = document.getElementById("aPot");
                            copyText = copyText + "\r" + 'Parámetro a regresión potencial = ' + "\t" + copyCampo.value;
                            //b Pot
                            copyCampo = document.getElementById("bPot");
                            copyText = copyText + "\r" + 'Parámetro b regresión potencial = ' + "\t" + copyCampo.value;
                            //r Pot
                            copyCampo = document.getElementById("rPot");
                            copyText = copyText + "\r" + 'Coeficiente r potencial = ' + "\t" + copyCampo.value;
                            //r2 Pot
                            copyCampo = document.getElementById("r2Pot");
                            copyText = copyText + "\r" + 'Coeficiente r^2 potencial = ' + "\t" + copyCampo.value;
                            //pronóstico Pot
                            copyCampo = document.getElementById("pronPot");
                            copyText = copyText + "\r" + 'Pronóstico potencial = ' + "\t" + copyCampo.value;
                            // regresión polinomial grado 2
                            //Pol2C0
                            copyCampo = document.getElementById("Pol2C0");
                            copyText = copyText + "\r" + 'Coeficiente C0 regresión polinomial grado 2 = ' + "\t" + copyCampo.value;
                            //Pol2C1
                            copyCampo = document.getElementById("Pol2C1");
                            copyText = copyText + "\r" + 'Coeficiente C1 regresión polinomial grado 2 = ' + "\t" + copyCampo.value;
                            //Pol2C2
                            copyCampo = document.getElementById("Pol2C2");
                            copyText = copyText + "\r" + 'Coeficiente C2 regresión polinomial grado 2 = ' + "\t" + copyCampo.value;
                            //Pol2R
                            copyCampo = document.getElementById("Pol2R");
                            copyText = copyText + "\r" + 'Coeficiente r regresión polinomial grado 2 = ' + "\t" + copyCampo.value;
                            //Pol2R2
                            copyCampo = document.getElementById("Pol2R2");
                            copyText = copyText + "\r" + 'Coeficiente r^2 regresión polinomial grado 2 = ' + "\t" + copyCampo.value;
                            //Pol2Pron
                            copyCampo = document.getElementById("Pol2Pron");
                            copyText = copyText + "\r" + 'Pronóstico polinomial grado 2 = ' + "\t" + copyCampo.value;
                            // regresión polinomial grado 3
                            //Pol3C0
                            copyCampo = document.getElementById("Pol3C0");
                            copyText = copyText + "\r" + 'Coeficiente C0 regresión polinomial grado 3 = ' + "\t" + copyCampo.value;
                            //Pol3C1
                            copyCampo = document.getElementById("Pol3C1");
                            copyText = copyText + "\r" + 'Coeficiente C1 regresión polinomial grado 3 = ' + "\t" + copyCampo.value;
                            //Pol3C2
                            copyCampo = document.getElementById("Pol3C2");
                            copyText = copyText + "\r" + 'Coeficiente C2 regresión polinomial grado 3 = ' + "\t" + copyCampo.value;
                            //Pol3C3
                            copyCampo = document.getElementById("Pol3C3");
                            copyText = copyText + "\r" + 'Coeficiente C3 regresión polinomial grado 3 = ' + "\t" + copyCampo.value;
                            //Pol3R
                            copyCampo = document.getElementById("Pol3R");
                            copyText = copyText + "\r" + 'Coeficiente r regresión polinomial grado 3 = ' + "\t" + copyCampo.value;
                            //Pol3R2
                            copyCampo = document.getElementById("Pol3R2");
                            copyText = copyText + "\r" + 'Coeficiente r^2 regresión polinomial grado 3 = ' + "\t" + copyCampo.value;
                            //Pol3Pron
                            copyCampo = document.getElementById("Pol3Pron");
                            copyText = copyText + "\r" + 'Pronóstico polinomial grado 3 = ' + "\t" + copyCampo.value;
                            // regresión polinomial grado 4
                            //Pol4C0
                            copyCampo = document.getElementById("Pol4C0");
                            copyText = copyText + "\r" + 'Coeficiente C0 regresión polinomial grado 4 = ' + "\t" + copyCampo.value;
                            //Pol4C1
                            copyCampo = document.getElementById("Pol4C1");
                            copyText = copyText + "\r" + 'Coeficiente C1 regresión polinomial grado 4 = ' + "\t" + copyCampo.value;
                            //Pol4C2
                            copyCampo = document.getElementById("Pol4C2");
                            copyText = copyText + "\r" + 'Coeficiente C2 regresión polinomial grado 4 = ' + "\t" + copyCampo.value;
                            //Pol4C3
                            copyCampo = document.getElementById("Pol4C3");
                            copyText = copyText + "\r" + 'Coeficiente C3 regresión polinomial grado 4 = ' + "\t" + copyCampo.value;
                            //Pol4C4
                            copyCampo = document.getElementById("Pol4C4");
                            copyText = copyText + "\r" + 'Coeficiente C4 regresión polinomial grado 4 = ' + "\t" + copyCampo.value;

                            //Pol4R
                            copyCampo = document.getElementById("Pol4R");
                            copyText = copyText + "\r" + 'Coeficiente r regresión polinomial grado 4 = ' + "\t" + copyCampo.value;
                            //Pol4R2
                            copyCampo = document.getElementById("Pol4R2");
                            copyText = copyText + "\r" + 'Coeficiente r^2 regresión polinomial grado 4 = ' + "\t" + copyCampo.value;
                            //Pol4Pron
                            copyCampo = document.getElementById("Pol4Pron");
                            copyText = copyText + "\r" + 'Pronóstico polinomial grado 4 = ' + "\t" + copyCampo.value;
                            // regresión polinomial grado 5
                            //Pol5C0
                            copyCampo = document.getElementById("Pol5C0");
                            copyText = copyText + "\r" + 'Coeficiente C0 regresión polinomial grado 5 = ' + "\t" + copyCampo.value;
                            //Pol5C1
                            copyCampo = document.getElementById("Pol5C1");
                            copyText = copyText + "\r" + 'Coeficiente C1 regresión polinomial grado 5 = ' + "\t" + copyCampo.value;
                            //Pol5C2
                            copyCampo = document.getElementById("Pol5C2");
                            copyText = copyText + "\r" + 'Coeficiente C2 regresión polinomial grado 5 = ' + "\t" + copyCampo.value;
                            //Pol5C3
                            copyCampo = document.getElementById("Pol5C3");
                            copyText = copyText + "\r" + 'Coeficiente C3 regresión polinomial grado 5 = ' + "\t" + copyCampo.value;
                            //Pol5C4
                            copyCampo = document.getElementById("Pol5C4");
                            copyText = copyText + "\r" + 'Coeficiente C4 regresión polinomial grado 5 = ' + "\t" + copyCampo.value;
                            //Pol5C5
                            copyCampo = document.getElementById("Pol5C5");
                            copyText = copyText + "\r" + 'Coeficiente C5 regresión polinomial grado 5 = ' + "\t" + copyCampo.value;

                            //Pol5R
                            copyCampo = document.getElementById("Pol5R");
                            copyText = copyText + "\r" + 'Coeficiente r regresión polinomial grado 5 = ' + "\t" + copyCampo.value;
                            //Pol5R2
                            copyCampo = document.getElementById("Pol5R2");
                            copyText = copyText + "\r" + 'Coeficiente r^2 regresión polinomial grado 5 = ' + "\t" + copyCampo.value;
                            //Pol5Pron
                            copyCampo = document.getElementById("Pol5Pron");
                            copyText = copyText + "\r" + 'Pronóstico polinomial grado 5 = ' + "\t" + copyCampo.value;
                            // regresión polinomial grado 6
                            //Pol6C0
                            copyCampo = document.getElementById("Pol6C0");
                            copyText = copyText + "\r" + 'Coeficiente C0 regresión polinomial grado 6 = ' + "\t" + copyCampo.value;
                            //Pol6C1
                            copyCampo = document.getElementById("Pol6C1");
                            copyText = copyText + "\r" + 'Coeficiente C1 regresión polinomial grado 6 = ' + "\t" + copyCampo.value;
                            //Pol6C2
                            copyCampo = document.getElementById("Pol6C2");
                            copyText = copyText + "\r" + 'Coeficiente C2 regresión polinomial grado 6 = ' + "\t" + copyCampo.value;
                            //Pol6C3
                            copyCampo = document.getElementById("Pol6C3");
                            copyText = copyText + "\r" + 'Coeficiente C3 regresión polinomial grado 6 = ' + "\t" + copyCampo.value;
                            //Pol6C4
                            copyCampo = document.getElementById("Pol6C4");
                            copyText = copyText + "\r" + 'Coeficiente C4 regresión polinomial grado 6 = ' + "\t" + copyCampo.value;
                            //Pol6C5
                            copyCampo = document.getElementById("Pol6C5");
                            copyText = copyText + "\r" + 'Coeficiente C5 regresión polinomial grado 6 = ' + "\t" + copyCampo.value;
                            //Pol6C6
                            copyCampo = document.getElementById("Pol6C6");
                            copyText = copyText + "\r" + 'Coeficiente C6 regresión polinomial grado 6 = ' + "\t" + copyCampo.value;

                            //Pol6R
                            copyCampo = document.getElementById("Pol6R");
                            copyText = copyText + "\r" + 'Coeficiente r regresión polinomial grado 6 = ' + "\t" + copyCampo.value;
                            //Pol6R2
                            copyCampo = document.getElementById("Pol6R2");
                            copyText = copyText + "\r" + 'Coeficiente r^2 regresión polinomial grado 6 = ' + "\t" + copyCampo.value;
                            //Pol6Pron
                            copyCampo = document.getElementById("Pol6Pron");
                            copyText = copyText + "\r" + 'Pronóstico polinomial grado 6 = ' + "\t" + copyCampo.value;

                            //FECHA DE CÁLCULO
                            var d = new Date();
                            copyText = copyText + "\r" + '********';
                            copyText = copyText + "\r" + 'CALCULADO: ';
                            copyText = copyText + "\r" + d.toLocaleString();
                            //finalmente copiamos la cadena completa...
                            copyToClipboard(copyText);
                        }



                        getbtnCalcular.onclick = function () {
                            calcular();
                        }

                        getbtnCopiar.onclick = function () {
                            copiarResultados();
                            //informa que copió
                            showSnackbar("¡Resultados copiados!");
                        }

                        getMinus.onclick = function () {                            
                            //disminuye el número de datos
                            if (slider.value != 1) {
                                var nuevo = slider.value - 1;
                                slider.value = nuevo;
                                if (nuevo > 1) {
                                    document.getElementById("numDatos").innerHTML = nuevo + " datos";
                                } else {
                                    document.getElementById("numDatos").innerHTML = nuevo + " dato";
                                }
                                borrarResultados();
                                mostrarDatos(nuevo);
                            }
                        }
                        getPlus.onclick = function () {
                            //disminuye el número de datos
                            if (slider.value != 100) {
                                var nuevo = Number( slider.value ) + 1;
                                slider.value = nuevo;                                
                                document.getElementById("numDatos").innerHTML = nuevo + " datos";                                
                                borrarResultados();
                                mostrarDatos(nuevo);
                            }
                        }

                </script>

                
                <script type="text/javascript">
                    //script del gráfico

                        // Load google charts
                        google.charts.load('current', { 'packages': ['corechart', 'line'] });
                        //gráfico de datos, esencial
                        google.charts.setOnLoadCallback(drawChart2);                       
                        //gráfico de regresión
                        google.charts.setOnLoadCallback(drawChart4);
                        //gráfico de caja
                        google.charts.setOnLoadCallback(drawChart6);
                    
                    // del gráfico esencial
                    // Draw the chart and set the chart values
                        //     normal, sin series adicionales
                        function drawChart2() {
                            var i;
                            var x;
                            var y;
                            // llena el array de datos
                            // Create the data table.
                            var data = new google.visualization.DataTable();
                            //crea las columnas
                            data.addColumn('string', 'DATO');
                            data.addColumn('number', 'VALOR');
                            //los pares de datos
                            for (i = 0; i < arrayDatos.length; i++) {
                                x = String(1 + i);
                                y = Number(arrayDatos[i]);                                
                                data.addRows([
                                    [x, y]
                                ]);
                            }
                            
                            
                            // Optional; add a title and set the width and height of the chart
                            var options = {
                                //título
                                'title': 'GRÁFICA DE DATOS',  
                                curveType: tipoCurva,
                                titleTextStyle: {
                                    //azul oscuro
                                    color: '#000066',
                                    fontName: 'Tahoma', 
                                    fontSize: 18, 
                                    bold: true                                       
                                },
                                //legenda
                                'legend': { position: 'bottom' },
                                //tamaño gráfico
                                'width': 800,
                                'height': 500,
                                //eje x
                                hAxis: {
                                    title: 'Datos',
                                    textStyle: {
                                        color: 'purple'                                        
                                    },
                                    titleTextStyle: {
                                        color: 'indigo',                                        
                                        italic: true,
                                        fontSize: 16, 
                                        bold: true
                                    }
                                },
                                //eje y
                                vAxis: {
                                    title: 'Valores',
                                    textStyle: {
                                        color: 'purple'
                                    },
                                    titleTextStyle: {
                                        color: 'indigo', 
                                        italic: true,
                                        fontSize: 16, 
                                        bold: true
                                    }
                                },
                                //color linea de la serie
                                colors: ['blue'],
                                //color de fondo del gráfico
                                backgroundColor: 'lavender',
                                //muestra una cruz al seleccionar o señalar
                                crosshair: { trigger: 'both' },
                                //tamaño de puntos
                                pointSize: 5,
                                //forma de puntos
                                pointShape: 'circle' 
                            };

                            // Display the chart inside the <div> element with id="linechart"
                            //var chart = new google.visualization.LineChart(document.getElementById('linechart'));
                            var chart_div = document.getElementById('linechart');
                            chart = new google.visualization.LineChart(chart_div);

                                                      
                             //   enlace de descarga png, esto no funcionó
                             //document.getElementById('png').outerHTML = '<a href="' + chart.getImageURI() + '" download="Imagen" target="_blank" class="link" title="Obtener imagen png del gráfico">Descargar Gráfico</a>';
                            
                            chart.draw(data, options);                          
                            
                        }

                        //del gráfico esencial, pero con series adicionales
                        // Draw the chart and set the chart values                        
                        function drawChart3() {
                            var i;
                            var miX;
                            var miValor;
                            // se usa variable "media"

                            // llena el array de datos
                            // Create the data table.
                            var data = new google.visualization.DataTable();
                            //crea las columnas

                            data.addColumn('number', 'X');
                            data.addColumn('number', 'Valor');
                            data.addColumn('number', 'Media');

                            //los pares de datos
                            for (i = 0; i < arrayDatos.length; i++) {
                                miX = 1 + i;
                                miValor = Number(arrayDatos[i]);
                                // y la media ya está calculada
                                data.addRows([
                                    [miX, miValor, Number(media)]
                                ]);
                            }


                            // Optional; add a title and set the width and height of the chart
                            var options = {
                                //título
                                'title': 'GRÁFICA DE DATOS',
                                curveType: tipoCurva,
                                titleTextStyle: {
                                    //azul oscuro
                                    color: '#000066',
                                    fontName: 'Tahoma',
                                    fontSize: 18,
                                    bold: true
                                },
                                //legenda
                                'legend': { position: 'bottom' },
                                //tamaño gráfico
                                'width': 800,
                                'height': 500,
                                //eje x
                                hAxis: {
                                    title: 'Datos',
                                    textStyle: {
                                        color: 'purple'
                                    },
                                    titleTextStyle: {
                                        color: 'indigo',
                                        italic: true,
                                        fontSize: 16,
                                        bold: true
                                    }
                                },
                                //eje y
                                vAxis: {
                                    title: 'Valores',
                                    textStyle: {
                                        color: 'purple'
                                    },
                                    titleTextStyle: {
                                        color: 'indigo',
                                        italic: true,
                                        fontSize: 16,
                                        bold: true
                                    }
                                },
                                //color de fondo del gráfico
                                backgroundColor: 'lavender',
                                //colores líneas de serie
                                colors: ['blue', 'green'],
                                //muestra una cruz al seleccionar o señalar
                                crosshair: { trigger: 'both' },
                                //personaliza series
                                series: {
                                    //valores
                                    0: {
                                        //tamaño de puntos
                                        pointSize: 5,
                                        //forma de puntos
                                        pointShape: 'circle'
                                    },
                                    //media
                                    1: {
                                        //tamaño de puntos
                                        pointSize: 0,
                                        //forma de puntos
                                        pointShape: 'circle',
                                        //punteada
                                        lineDashStyle: [4, 4]
                                    }
                                },
                                // líneas de tendencia
                                trendlines: {                                    
                                    0: {
                                        type: 'linear',
                                        color: 'red',                                        
                                        visibleInLegend: true,
                                        labelInLegend: 'Ajuste lineal',
                                        showR2: true,
                                        opacity: 1
                                    }                       
                                }                               

                            };

                            // Display the chart inside the <div> element with id="linechart"
                            //var chart = new google.visualization.LineChart(document.getElementById('linechart'));
                            var chart_div = document.getElementById('linechart');
                            chart = new google.visualization.LineChart(chart_div);                                                                                                                                         
                            chart.draw(data, options);
                            
                        }
                        // DEL SEGUNDO GRÁFICO
                        //     NINGUNA REGRESIÓN SELECCIONADA, GRÁFICO DE DISPERSIÓN
                        function drawChart4() {
                            var i;
                            var x;
                            var y;
                            // llena el array de datos
                            // Create the data table.
                            var data = new google.visualization.DataTable();
                            //crea las columnas
                            data.addColumn('string', 'DATO');
                            data.addColumn('number', 'VALOR');
                            //los pares de datos
                            for (i = 0; i < arrayDatos.length; i++) {
                                x = String(1 + i);
                                y = Number(arrayDatos[i]);
                                data.addRows([
                                    [x, y]
                                ]);
                            }


                            // Optional; add a title and set the width and height of the chart
                            var options = {
                                //título
                                'title': 'GRÁFICA DE REGRESIÓN',
                                curveType: 'function',
                                titleTextStyle: {
                                    //azul oscuro
                                    color: '#000066',
                                    fontName: 'Tahoma',
                                    fontSize: 18,
                                    bold: true
                                },
                                //legenda
                                'legend': { position: 'bottom' },
                                //tamaño gráfico
                                'width': 800,
                                'height': 500,
                                //eje x
                                hAxis: {
                                    title: 'Datos',
                                    textStyle: {
                                        color: 'purple'
                                    },
                                    titleTextStyle: {
                                        color: 'indigo',
                                        italic: true,
                                        fontSize: 16,
                                        bold: true
                                    }
                                },
                                //eje y
                                vAxis: {
                                    title: 'Valores',
                                    textStyle: {
                                        color: 'purple'
                                    },
                                    titleTextStyle: {
                                        color: 'indigo',
                                        italic: true,
                                        fontSize: 16,
                                        bold: true
                                    }
                                },
                                //color linea de la serie
                                colors: ['blue'],
                                //color de fondo del gráfico
                                //backgroundColor: 'lavender',
                                //muestra una cruz al seleccionar o señalar
                                crosshair: { trigger: 'both' },
                                //tamaño de puntos
                                pointSize: 10,
                                //forma de puntos
                                pointShape: 'circle',
                                //SIN LINEA CONECTORA
                                lineWidth: 0
                            };

                            // Display the chart inside the <div> element with id="regChart"                            
                            var chart_divReg = document.getElementById('regChart');
                            chartReg = new google.visualization.LineChart(chart_divReg);
                            
                            chartReg.draw(data, options);

                        }
                    // del gráfico de regresión, con serie adicional según regresión seleccionada
                        // Draw the chart and set the chart values
                        
                        function drawChart5() {
                            var i, j;
                            var miX;
                            var miExtraX;                            
                            var miValor;
                            var miReg = 'null';
                            // se usa variable "media"

                            // llena el array de datos
                            // Create the data table.
                            var data = new google.visualization.DataTable();
                            //crea las columnas

                            data.addColumn('number', 'X');
                            data.addColumn('number', 'Valor');
                            //data.addColumn('number', 'Regresión');
                            data.addColumn('number', evaluarReg(0, miTipoReg, "nombre", "Regresión"));
                            //los pares de datos
                            for (i = 0; i < arrayDatos.length; i++) {
                                miX = 1 + i;
                                miValor = Number(arrayDatos[i]);
                                // calcula el valor de la regresión
                                miReg = evaluarReg(miX, miTipoReg, "valor", 'null');
                                //agrega los puntos principales
                                data.addRows([
                                    [miX, miValor, Number(miReg)]
                                ]);
                                //agrega puntos adicionales para mejorar la precisión de la curva de regresión
                                //solo si no es el último punto
                                if (i < cuenta - 1) {
                                    for (j = 1; j <= 9; j++) {
                                        miExtraX = 0.1 * j + miX;
                                        miReg = evaluarReg(miExtraX, miTipoReg, "valor", 'null');
                                        data.addRows([
                                            [miExtraX, null, Number(miReg)]
                                        ]);
                                    }
                                }
                            }
                            
                            // Optional; add a title and set the width and height of the chart
                            var options = {
                                //título
                                'title': 'GRÁFICA DE REGRESIÓN',
                                curveType: 'function',
                                titleTextStyle: {
                                    //azul oscuro
                                    color: '#000066',
                                    fontName: 'Tahoma',
                                    fontSize: 18,
                                    bold: true
                                },
                                //legenda
                                'legend': { position: 'bottom' },
                                //tamaño gráfico
                                'width': 800,
                                'height': 500,
                                //eje x
                                hAxis: {
                                    title: 'Datos',
                                    textStyle: {
                                        color: 'purple'
                                    },
                                    titleTextStyle: {
                                        color: 'indigo',
                                        italic: true,
                                        fontSize: 16,
                                        bold: true
                                    }
                                },
                                //eje y
                                vAxis: {
                                    title: 'Valores',
                                    textStyle: {
                                        color: 'purple'
                                    },
                                    titleTextStyle: {
                                        color: 'indigo',
                                        italic: true,
                                        fontSize: 16,
                                        bold: true
                                    }
                                },
                                //color de fondo del gráfico
                                //backgroundColor: 'lavender',
                                //colores líneas de serie
                                colors: ['blue', '#cc0066'],
                                //muestra una cruz al seleccionar o señalar
                                crosshair: { trigger: 'both' },
                                //personaliza series
                                series: {
                                    //VALORES
                                    0: {
                                        //tamaño de puntos
                                        pointSize: 10,
                                        //SIN LÍNEA, DISPERSIÓN
                                        lineWidth: 0,
                                        //forma de puntos
                                        pointShape: 'circle'
                                    },
                                    //REGRESIÓN
                                    1: {
                                        //tamaño de puntos
                                        pointSize: 0,
                                        //LÍNEA GRUESA
                                        lineWidth: 8,
                                        //forma de puntos
                                        pointShape: 'circle',
                                        //OPACA
                                        opacity: 0.3
                                    }
                                },
                                
                            };

                            // Display the chart inside the <div> element with id="regChart"                            
                            var chart_divReg = document.getElementById('regChart');
                            chartReg = new google.visualization.LineChart(chart_divReg);
                            chartReg.draw(data, options);

                        }
                        // del gráfico de caja
                        // Draw the chart and set the chart values
                        //     box-plot, con media agregada
                        function drawChart6() {
                            
                            // llena el array de datos
                            var miMax;
                            var miMin;
                            var miMediana;
                            var miMedia;
                            var miQ1;
                            var miQ3;

                            miMax = Number(max);
                            miMin = Number(min);
                            miMedia = Number(media);
                            miMediana = Number(mediana);
                            miQ1 = Number(q1);
                            miQ3 = Number(q3);
                            
                            var data = google.visualization.arrayToDataTable([
                                ['Mín - Máx, Q1 - Q3', miMin, miQ1, miQ3, miMax],
                                ['Mediana', miMediana, miMediana, miMediana, miMediana],
                                ['Media', miMedia, miMedia, miMedia, miMedia]
                                // Treat first row as data as well.
                            ], true);

                            // Optional; add a title and set the width and height of the chart
                            var options = {
                                 //título
                                'title': 'GRÁFICA DE CAJA',                                
                                titleTextStyle: {
                                    //azul oscuro
                                    color: '#000066',
                                    fontName: 'Tahoma',
                                    fontSize: 18,
                                    bold: true
                                },
                                //legenda
                                legend: 'none',
                                //tamaño gráfico
                                'width': 800,
                                'height': 500,
                                //eje x
                                hAxis: {
                                    title: 'Datos',
                                    textStyle: {
                                        color: 'purple'
                                    },
                                    titleTextStyle: {
                                        color: 'indigo',
                                        italic: true,
                                        fontSize: 16,
                                        bold: true
                                    }
                                },
                                //eje y
                                vAxis: { 
                                    title: 'Valores',                                    
                                    textStyle: {
                                        color: 'purple'
                                    },
                                    titleTextStyle: {
                                        color: 'indigo',
                                        italic: true,
                                        fontSize: 16,
                                        bold: true
                                    }                                    
                                },
                                //color linea de la serie
                                colors: ['blue'],
                                //color de fondo del gráfico
                                //backgroundColor: 'lavender',
                                //muestra una cruz al seleccionar o señalar
                                crosshair: { trigger: 'both' },
                                //tamaño de puntos
                                //pointSize: 5,
                                //forma de puntos
                                //pointShape: 'circle'

                                // sin espacio entre barras
                                bar: { groupWidth: '100%' }, // Remove space between bars.
                                //la caja
                                candlestick: {
                                    fallingColor: { strokeWidth: 0, fill: '#a52714' }, // red
                                    risingColor: { strokeWidth: 0, fill: '#0f9d58' }   // green
                                }
                            };

                            // Display the chart inside the <div> element with id="cajachart"                            
                            var chart_divCaja = document.getElementById('cajachart');
                            chartCaja = new google.visualization.CandlestickChart(chart_divCaja);
                            
                            chartCaja.draw(data, options);

                        }
                        // botón BtnPNG
                        document.getElementById("BtnPNG").onclick = function () {
                            //optiene un enlace a la imagen png 
                            var msj;
                            msj = chart.getImageURI();
                            copyToClipboard(msj);
                            showSnackbar("Enlace PNG copiado");
                        }

                        // botón BtnRegPNG
                        document.getElementById("BtnRegPNG").onclick = function () {
                            //optiene un enlace a la imagen png 
                            var msj;
                            msj = chartReg.getImageURI();
                            copyToClipboard(msj);
                            showSnackbar("Enlace PNG copiado");
                        }

                        // botón BtnCajaPNG
                        document.getElementById("BtnCajaPNG").onclick = function () {
                            //optiene un enlace a la imagen png 
                            var msj;
                            msj = chartCaja.getImageURI();
                            copyToClipboard(msj);
                            showSnackbar("Enlace PNG copiado");
                        }

                        // selecciona una regresión
                        document.getElementById("tipoReg").onchange = function () {
                            miTipoReg = document.getElementById("tipoReg").options.item(document.getElementById("tipoReg").options.selectedIndex).value                            
                            if (validarReg(miTipoReg) == false) {
                                // informa el error y vuelve a la predeterminada (ninguna)
                                showSnackbar("Regresión no disponible");
                                document.getElementById("tipoReg").selectedIndex = "0";
                                drawChart4();
                            } else {
                                if (document.getElementById("tipoReg").selectedIndex == "0") {
                                    drawChart4();
                                } else {
                                    //muestra la regresión seleccionada
                                    drawChart5();
                                }
                            }
                        }
                    // define si una regresión está disponible
                        function validarReg(reg) {
                            var validar = false;
                            switch (reg) {
                                case "ninguna":
                                    validar = true;
                                    break;
                                case "lineal":
                                    if (isNaN(pendiente) == false && isNaN(intercepto) == false && cuenta > 1) {
                                        validar = true;
                                    }
                                    break;
                                case "exponencial":
                                    if (isNaN(aExp) == false && isNaN(bExp) == false && cuenta > 1 && todosPositivos == true) {
                                        validar = true;
                                    }
                                    break;
                                case "logarítmica":
                                    if (isNaN(aLog) == false && isNaN(bLog) == false && cuenta > 1) {
                                        validar = true;
                                    }
                                    break;
                                case "potencial":
                                    if (isNaN(aPot) == false && isNaN(bPot) == false && cuenta > 1 && todosPositivos == true) {
                                        validar = true;
                                    }
                                    break;
                                case "polinomial2":
                                    if (isNaN(Pol2C0) == false && isNaN(Pol2C1) == false && isNaN(Pol2C2) == false && cuenta > 2) {
                                        validar = true;
                                    }
                                    break;
                                case "polinomial3":
                                    if (isNaN(Pol3C0) == false && isNaN(Pol3C1) == false && isNaN(Pol3C2) == false && isNaN(Pol3C3) == false && cuenta > 3) {
                                        validar = true;
                                    }
                                    break;
                                case "polinomial4":
                                    if (isNaN(Pol4C0) == false && isNaN(Pol4C1) == false && isNaN(Pol4C2) == false && isNaN(Pol4C3) == false && isNaN(Pol4C4) == false && cuenta > 4) {
                                        validar = true;
                                    }
                                    break;
                                case "polinomial5":
                                    if (isNaN(Pol5C0) == false && isNaN(Pol5C1) == false && isNaN(Pol5C2) == false && isNaN(Pol5C3) == false && isNaN(Pol5C4) == false && isNaN(Pol5C5) == false && cuenta > 5) {
                                        validar = true;
                                    }
                                    break;
                                case "polinomial6":
                                    if (isNaN(Pol6C0) == false && isNaN(Pol6C1) == false && isNaN(Pol6C2) == false && isNaN(Pol6C3) == false && isNaN(Pol6C4) == false && isNaN(Pol6C5) == false && isNaN(Pol6C6) == false && cuenta > 6) {
                                        validar = true;
                                    }
                                    break;
                            }
                            return validar;
                        }
                    // devuelve la evaluación de la función de pronóstico para el modelo de regresión solicitado
                    // x es el valor que se evalúa
                    // reg es el tipo de regresión
                    // tipoResultado: nombre o valor de la regresión
                    // errorValue es el valor devuelto en caso de error
                        function evaluarReg(x, reg, tipoResultado, errorValue) {                            
                            try {
                                // también es un default
                                var temporal = errorValue;
                                if (tipoResultado == "nombre") {
                                    //nombres para etiqueta del gráfico de regresión
                                    switch (reg) {
                                        case "ninguna":
                                            temporal = "Ninguna";
                                            break;
                                        case "lineal":
                                            temporal = "Lineal";
                                            break;
                                        case "exponencial":
                                            temporal = "Exponencial";
                                            break;
                                        case "logarítmica":
                                            temporal = "Logarítmica";
                                            break;
                                        case "potencial":
                                            temporal = "Potencial";
                                            break;
                                        case "polinomial2":
                                            temporal = "Polin grado 2";
                                            break;
                                        case "polinomial3":
                                            temporal = "Polin grado 3";
                                            break;
                                        case "polinomial4":
                                            temporal = "Polin grado 4";
                                            break;
                                        case "polinomial5":
                                            temporal = "Polin grado 5";
                                            break;
                                        case "polinomial6":
                                            temporal = "Polin grado 6";
                                            break;
                                    }
                                }
                                if (tipoResultado == "valor") {                                   
                                    switch (reg) {
                                        case "ninguna":
                                            //si no hay regresión, no se puede calcular nada
                                            temporal = errorValue;
                                            break;
                                        case "lineal":
                                            temporal = Number(pendiente * x) + Number(intercepto);
                                            break;
                                        case "exponencial":
                                            temporal = aExp * Math.exp(bExp * x);
                                            break;
                                        case "logarítmica":
                                            temporal = Number(bLog) + aLog * Math.log(x);
                                            break;
                                        case "potencial":
                                            temporal = aPot * Math.pow(x, bPot);
                                            break;
                                        case "polinomial2":
                                            temporal = Number(Pol2C0) + Pol2C1 * x + Pol2C2 * Math.pow(x, 2);
                                            break;
                                        case "polinomial3":
                                            temporal = Number(Pol3C0) + Pol3C1 * x + Pol3C2 * Math.pow(x, 2) + Pol3C3 * Math.pow(x, 3);
                                            break;
                                        case "polinomial4":
                                            temporal = Number(Pol4C0) + Pol4C1 * x + Pol4C2 * Math.pow(x, 2) + Pol4C3 * Math.pow(x, 3) + Pol4C4 * Math.pow(x, 4);
                                            break;
                                        case "polinomial5":
                                            temporal = Number(Pol5C0) + Pol5C1 * x + Pol5C2 * Math.pow(x, 2) + Pol5C3 * Math.pow(x, 3) + Pol5C4 * Math.pow(x, 4) + Pol5C5 * Math.pow(x, 5);
                                            break;
                                        case "polinomial6":
                                            temporal = Number(Pol6C0) + Pol6C1 * x + Pol6C2 * Math.pow(x, 2) + Pol6C3 * Math.pow(x, 3) + Pol6C4 * Math.pow(x, 4) + Pol6C5 * Math.pow(x, 5) + Pol6C6 * Math.pow(x, 6);
                                            break;
                                    }
                                }
                            }
                            catch (err){
                                temporal = errorValue;
                            }
                            finally {
                                return temporal;
                            }
                        }

                        function clickCheck() {
                            var checkBox = document.getElementById("myCheck");                            
                            if (checkBox.checked == true) {
                                mostrarSeriesAdicionales = true;
                                drawChart3();
                            } else {
                                mostrarSeriesAdicionales = false;
                                drawChart2();
                            }
                        }
                        function clickCheck2() {
                            var checkBox2 = document.getElementById("myCheck2");
                            if (checkBox2.checked == true) {
                                tipoCurva = 'function';
                            } else {
                                tipoCurva = 'null';
                            }
                            clickCheck();
                        }
                    
                </script>

                <script>
                    // inicia script para el tab
                    
                        function openTab(evt, tabName) {
                            var i, tabcontent, tablinks;
                            tabcontent = document.getElementsByClassName("tabcontent");
                            for (i = 0; i < tabcontent.length; i++) {
                                tabcontent[i].style.display = "none";
                            }
                            tablinks = document.getElementsByClassName("tablinks");
                            for (i = 0; i < tablinks.length; i++) {
                                //tablinks[i].className = tablinks[i].className.replace(" active", "");
                                removerClaseActive(tablinks[i]);
                            }
                            document.getElementById(tabName).style.display = "block";
                            //evt.currentTarget.className += " active";                           
                            agregarClaseActive(evt.currentTarget);

                             //forza actualizaciones, por un bug del eje vertical de Google Chart
                            //solo la primera vez que entra a cada tab
                            if (tabName == "caja") {                                
                                if (cajaActualizado == false) {
                                    drawChart6();
                                    cajaActualizado = true;                                    
                                }
                                
                            }
                            if (tabName == "regresión" && miTipoReg == "ninguna") {
                                if (regActualizado == false) {
                                    drawChart4();
                                    regActualizado = true;                                    
                                }                                
                            }

                        }
                    //devuelve true si el gráfico de caja puede ser mostrado
                        function validarCajaDisponible() {
                            try {
                                var temporal = false;
                                if (isNaN(media) == false && isNaN(mediana) == false && isNaN(max) == false && isNaN(min) == false && isNaN(q1) == false && isNaN(q3) == false && cuenta >= 3) {
                                    temporal = true;
                                }
                            }
                            catch (err) {
                                temporal = false;
                            }
                            finally {
                                return temporal;
                            }
                        }
                        function agregarClaseActive(element) {
                            var name, arr;                            
                            name = "active";
                            arr = element.className.split(" ");
                            if (arr.indexOf(name) == -1) {
                                element.className += " " + name;
                            }
                        }
                        function removerClaseActive(element) {                            
                            element.className = element.className.replace(/\bactive\b/g, "");
                        }
                        
                </script>



                    <footer>
                        <p>Coded by @deiner_db</p>
                        <img id="miFoto" title="Deiner Domínguez" alt="Foto Deiner Domínguez" src="miFoto.jpg" width="1280" height="893" />
                        <br />
                        <a href="https://www.facebook.com/deinerdb" target="_blank" class="fa fa-facebook"></a>
                        <a href="https://twitter.com/deiner_db" target="_blank" class="fa fa-twitter"></a>
                        <a href="https://www.instagram.com/deiner_db/" target="_blank" class="fa fa-instagram"></a>
                        
                        <a href="https://www.youtube.com/user/deinerdominguez" target="_blank" class="fa fa-youtube"></a>
                        <a href="skype:live:deiner_db?call" class="fa fa-skype"></a>
                    </footer>
</div>
            <button onclick="topFunction()" id="BtnTop" title="Subir">⇧</button>
            <script type="text/javascript" charset="utf-8" src="rutinas.js"></script>
</body>
</html>

