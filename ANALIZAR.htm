<!DOCTYPE HTML>
<html lang="es" dir="ltr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">  
        <meta name="description" content="ANALIZAR DATOS"/>
        <!-- Chrome, Firefox, OS y Opera -->
        <meta name="theme-color" content="#663399" />
        <!-- Windows Phone -->
        <meta name="msapplication-navbutton-color" content="#663399" />
        <title>ANALIZAR DATOS</title>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        <link rel="stylesheet" href="estilo.css" />
        
        <link rel="icon" href="favicon.ico" type="image/x-icon" />
        <link rel="shortcut icon" href="favicon.ico" type="image/x-icon" />
        <!--*jQuery CDN
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
        este es más nuevo, pero usamos la versión vieja
    -->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>

        <style>
            .loader {
                position: fixed;
                left: 0px;
                top: 0px;
                width: 100%;
                height: 100%;
                z-index: 9999;
                background: url('pageLoader.gif') 50% 50% no-repeat rgb(249,249,249);
                opacity: 0.8;
                filter: Alpha(opacity=80); /* IE8 and earlier */
            }
            #linechart, #noDisponible, #opcionesGráfico {
                /*RESPONSIVE*/
                max-width: 100%;
                overflow: auto;
                margin: 4px 12px 4px 4px;
                /*para que el ancho sea real*/
                -moz-box-sizing: border-box;
                -webkit-box-sizing: border-box;
                box-sizing: border-box;
                border: 2px solid purple;
                -webkit-border-radius: 4px;
                -moz-border-radius: 4px;
                border-radius: 4px;
                outline: none;
                
            }
            #linechart {
                background-color: lavender;
            }
            #noDisponible {                
                /*visible por defecto*/
                display: block;
                padding: 4px 24px;
                color:purple;
            }
            #opcionesGráfico {
                margin-top: 12px !important;
                padding: 24px 12px 12px 18px;
            }
            #linechart, #opcionesGráfico {
                /*oculto por defecto*/
                display: none;
            }
            footer {
                margin-top: 24px !important;
            }
            /*ajustes al imprimir*/
            @media print {
                #selectorN, #opcionesGráfico, #snackbar {
                    display: none !important;
                }

                #divDatos {
                    max-height: none !important;
                }
                #linechart {                    
                    overflow:hidden;
                    margin-left: 1px !important;
                    margin-right: 1px !important;                    
                }
            }

            .formulario {
                font-size: 1.1em;
                padding: 10px 8px;
                /*Formularios con borde superior e inferior gris*/
                border-bottom-style: none !important;
                border-top-style: none !important; 
                margin-bottom: 4px !important;

            }

            legend {
                font-weight:bold;
            }
            #divDatos {                
                overflow:auto;                
            }
            #divDatos div {
                display: none;
            }
            #aIzquierda {
                font-size: 1.5em;
                color: purple;
                vertical-align: auto;
                min-width: 50%;
                text-align: left;
                display: inline-block;
                font-weight: bold;
            }

            #aDerecha {
                font-size: 1.5em;
                color: purple;
                vertical-align: auto;
                min-width: 50%;
                text-align: right;
                display: inline-block;
                font-weight: bold;
            }
            #aIzquierda i:hover , #aDerecha i:hover, #BtnPNG:hover {
                background: #8c53c6; /* For browsers that do not support gradients */
                background: -webkit-linear-gradient(left, #8c53c6, rebeccapurple); /* For Safari 5.1 to 6.0 */
                background: -o-linear-gradient(right, #8c53c6, rebeccapurple); /* For Opera 11.1 to 12.0 */
                background: -moz-linear-gradient(right, #8c53c6, rebeccapurple); /* For Firefox 3.6 to 15 */
                background: linear-gradient(to right, #8c53c6, rebeccapurple); /* Standard syntax (must be last) */
            }
            #divA {
                width: 100%;
                white-space: nowrap;
                margin-top: 24px;                
            }
            #BtnPNG {
                text-decoration: none;
                padding: 16px 32px !important;
            }
            #divA i, #BtnPNG {
                -webkit-box-sizing: border-box;
                -moz-box-sizing: border-box;
                box-sizing: border-box;

                border: none; /* Remove borders */
                outline: none; /* Remove outline */
                background-color: rebeccapurple; /* Set a background color */
                color: white; /* Text color */
                cursor: pointer; /* Add a mouse pointer on hover */
                padding: 7px 12px; /* Some padding */
                -moz-border-radius: 10px;
                -webkit-border-radius: 10px;
                border-radius: 10px; /* Rounded corners */
                /*SOMBRA*/
                -moz-box-shadow: 5px 5px 3px MediumPurple;
                -webkit-box-shadow: 5px 5px 3px MediumPurple;
                box-shadow: 5px 5px 3px MediumPurple;
                /*no se puede seleccionar el texto*/
                -webkit-user-select: none; /* Chrome, Opera, Safari */
                -moz-user-select: none; /* Firefox 2+ */
                -ms-user-select: none; /* IE 10+ */
                user-select: none; /* Standard syntax */
            }
            #numDatos {
                font-size: 1.2em;
                font-family: Tahoma, Arial, sans-serif;
                padding: 1px 1px 1px 12px;
                margin: 6px 0px 4px 0px;
                overflow: auto;
                max-width: 98%;
                white-space: nowrap;
                color: purple;
                text-align:center;
            }
            #divDatos label , input[type=number] {
                display: inline-block;
                max-width:70%;
                
            }
            #divDatos input[type=number] {
                margin-left:12px;
            }
            #divDatos div {
                text-align:center;
            }
            #rangoDatos {
                border: none;
            }
            /* INICIO CSS PARA INPUT RANGE PERSONALIZADO*/
            input[type=range] {
                -webkit-appearance: none;
                margin: 10px 0;
                width: 100%;
            }

                input[type=range]:focus {
                    outline: none;
                }

                input[type=range]::-webkit-slider-runnable-track {
                    width: 100%;
                    height: 12.8px;
                    cursor: pointer;
                    animate: 0.2s;
                    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
                    background: #9370DB;
                    border-radius: 25px;
                    border: 0px solid #000101;
                }

                input[type=range]::-webkit-slider-thumb {
                    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
                    border: 0px solid #000000;
                    height: 20px;
                    width: 39px;
                    border-radius: 7px;
                    background: #4B0082;
                    cursor: pointer;
                    -webkit-appearance: none;
                    margin-top: -3.6px;
                }

                input[type=range]:focus::-webkit-slider-runnable-track {
                    background: #7B68EE;
                }

                input[type=range]::-moz-range-track {
                    width: 100%;
                    height: 12.8px;
                    cursor: pointer;
                    animate: 0.2s;
                    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
                    background: #9370DB;
                    border-radius: 25px;
                    border: 0px solid #000101;
                }

                input[type=range]::-moz-range-thumb {
                    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
                    border: 0px solid #000000;
                    height: 20px;
                    width: 39px;
                    border-radius: 7px;
                    background: #4B0082;
                    cursor: pointer;
                }

                input[type=range]::-ms-track {
                    width: 100%;
                    height: 12.8px;
                    cursor: pointer;
                    animate: 0.2s;
                    background: transparent;
                    border-color: transparent;
                    border-width: 39px 0;
                    color: transparent;
                }

                input[type=range]::-ms-fill-lower {
                    background: #9370DB;
                    border: 0px solid #000101;
                    border-radius: 50px;
                    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
                }

                input[type=range]::-ms-fill-upper {
                    background: #9370DB;
                    border: 0px solid #000101;
                    border-radius: 50px;
                    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
                }

                input[type=range]::-ms-thumb {
                    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
                    border: 0px solid #000000;
                    height: 20px;
                    width: 39px;
                    border-radius: 7px;
                    background: #4B0082;
                    cursor: pointer;
                }

                input[type=range]:focus::-ms-fill-lower {
                    background: #7B68EE;
                }

                input[type=range]:focus::-ms-fill-upper {
                    background: #7B68EE;
                }
            /* FIN CSS PARA INPUT RANGE PERSONALIZADO*/

            /*/ INICIO css para el checkbox personalizado*/
            /* The container */
            .contenedorCheckbox {
                display: block;
                position: relative;
                padding-left: 35px;
                margin-bottom: 18px;
                cursor: pointer;
                font-size: 22px;
                -webkit-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
                color: purple;
            }

                /* Hide the browser's default checkbox */
                .contenedorCheckbox input {
                    position: absolute;
                    opacity: 0;
                    cursor: pointer;
                    height: 0;
                    width: 0;
                }

            /* Create a custom checkbox */
            .checkmark {
                position: absolute;
                top: 0;
                left: 0;
                height: 25px;
                width: 25px;
                background-color: lavender; /*lavender*/
            }

            /* On mouse-over, add a grey background color */
            .contenedorCheckbox:hover input ~ .checkmark {
                background-color: #bfbff2; /*un poco más oscuro que el lavender*/
            }

            /* When the checkbox is checked, add a mediumpurple background */
            .contenedorCheckbox input:checked ~ .checkmark {
                background-color: mediumpurple; /*  mediumpurple */
            }

            /* Create the checkmark/indicator (hidden when not checked) */
            .checkmark:after {
                content: "";
                position: absolute;
                display: none;
            }

            /* Show the checkmark when checked */
            .contenedorCheckbox input:checked ~ .checkmark:after {
                display: block;
            }

            /* Style the checkmark/indicator */
            .contenedorCheckbox .checkmark:after {
                left: 9px;
                top: 5px;
                width: 5px;
                height: 10px;
                border: solid white;
                border-width: 0 3px 3px 0;
                -ms-transform: rotate(45deg);
                -webkit-transform: rotate(45deg);
                -o-transform: rotate(45deg);
                -moz-transform: rotate(45deg);
                transform: rotate(45deg);
            }

            /*/ FIN css para el checkbox personalizado*/

        </style>
    </head>
    <body>
        <div class="loader"></div>
        <script type="text/javascript">
            $(window).load(function () {
                $(".loader").fadeOut("slow");
            });

            function alturaDatos() {
                var h = window.innerHeight
                    || document.documentElement.clientHeight
                    || document.body.clientHeight;
                var datos = document.getElementById("divDatos");                
                //  define altura 
                h = 0.33 * h ;
                datos.style.maxHeight = h + "px";                
            }

        </script>

        <!-- The actual snackbar -->
        <div id="snackbar">Realizado</div>

        <div id="mySidenav" class="sidenav">
            <a href="INDEX.htm"><i class="fa fa-home"></i>INICIO</a>
            <a href="HTML.htm"><i class="fa fa-html5"></i>HTML</a>
            <a href="CSS.htm"><i class="fa fa-css3"></i>CSS</a>
            <a href="JAVASCRIPT.htm"><i class="fa fa-code"></i>JAVASCRIPT</a>            
            <a href="MEDIA.htm"><i class="fa fa-play"></i>MULTIMEDIA</a>
            <a href="FILTROS.htm"><i class="fa fa-paint-brush"></i>FILTROS</a>
            <a href="CANVAS.htm"><i class="fa fa-file-image-o"></i>CANVAS</a>
            <a href="JUEGO.htm"><i class="fa fa-gamepad"></i>JUEGO</a>
            <a href="SVG.htm"><i class="fa fa-picture-o"></i>SVG</a>
            <a href="SITIOS.htm"><i class="fa fa-globe"></i>SITIOS</a>
            <a href="FORM.htm"><i class="fa fa-file-text-o"></i>FORMULARIOS</a>
            <a href="FUENTE.htm"><i class="fa fa-font"></i>FUENTES</a>
            <a href="IMC.htm"><i class="fa fa-calculator"></i>IMC</a>
            <a href="DTV.htm"><i class="fa fa-television"></i>DirecTV <sup>&#174;</sup></a>
            <a href="LOADERS.htm"><i class="fa fa-spinner"></i>LOADERS</a>
            <a href="MAP.htm"><i class="fa fa-map-marker"></i>MAPA</a>
            <a href="TRADUCTOR.htm"><i class="fa fa-google"></i>TRADUCIR</a>
            <a href="GRAFICAR.htm"><i class="fa fa-pie-chart"></i>GRAFICAR</a>
            <a href="FRASES.htm"><i class="fa fa-book"></i>FRASES</a>
            <a class="selected" id="selectedsidenav" href="ANALIZAR.htm"><i class="fa fa-table"></i>ANALIZAR</a>
            <hr />
            <a href="#" onclick="imprimir()"><i class="fa fa-print"></i>IMPRIMIR</a>
        </div>
        <div id="relleno">
            relleno
        </div>
        <div id="overlay" onclick="soloCerrar()">
        </div>
        <div class="caja">
            <div class="container" id="container" onclick="myFunction(this)">
                <div class="bar1"></div>
                <div class="bar2"></div>
                <div class="bar3"></div>
            </div>
            <div class="navbar" id="navbar" onclick="soloCerrar()">
                <a href="INDEX.htm"><i class="fa fa-home"></i>VOLVER AL INICIO</a>
                <a href="HTML.htm"><i class="fa fa-html5"></i>HTML</a>
                <a href="CSS.htm"><i class="fa fa-css3"></i>CSS</a>
                <a href="JAVASCRIPT.htm"><i class="fa fa-code"></i>JAVASCRIPT</a>
                <a href="MEDIA.htm"><i class="fa fa-play"></i>MULTIMEDIA</a>
                <a href="FILTROS.htm"><i class="fa fa-paint-brush"></i>FILTROS</a>
                <a href="CANVAS.htm"><i class="fa fa-file-image-o"></i>CANVAS</a>
                <a href="JUEGO.htm"><i class="fa fa-gamepad"></i>JUEGO</a>
                <a href="SVG.htm"><i class="fa fa-picture-o"></i>SVG</a>
                <a href="SITIOS.htm"><i class="fa fa-globe"></i>SITIOS</a>
                <a href="FORM.htm"><i class="fa fa-file-text-o"></i>FORMULARIOS</a>
                <a href="FUENTE.htm"><i class="fa fa-font"></i>FUENTES</a>
                <a href="IMC.htm"><i class="fa fa-calculator"></i>IMC</a>
                <a href="DTV.htm"><i class="fa fa-television"></i>DirecTV <sup>&#174;</sup></a>
                <a href="LOADERS.htm"><i class="fa fa-spinner"></i>LOADERS</a>
                <a href="MAP.htm"><i class="fa fa-map-marker"></i>MAPA</a>
                <a href="TRADUCTOR.htm"><i class="fa fa-google"></i>TRADUCIR</a>
                <a href="GRAFICAR.htm"><i class="fa fa-pie-chart"></i>GRAFICAR</a>
                <a href="FRASES.htm"><i class="fa fa-book"></i>FRASES</a>
                <a class="selected" id="selectednavbar"  href="ANALIZAR.htm"><i class="fa fa-table"></i>ANALIZAR</a>
                <span id="separador">|</span>
                <a href="#" onclick="imprimir()"><i class="fa fa-print"></i>IMPRIMIR</a>

            </div>
        </div>
 
           
            <div class="main" id="main">                
                    <button class="accordion" id="accordion">ANÁLISIS DE DATOS<i id="folder" class="fa" aria-hidden="true"></i></button>
                    <div class="panel" id="panel">
                        <p>
                            <i class="fa fa-table" aria-hidden="true"></i>
                            Se realizan varios cálculos a partir de los datos ingresados. 
                            Es un análisis estadístico y gráfico.
                            <br />
                            <br />
                            <strong style="clear:left">Fragmento de código usado en esta página:</strong><br />
                        </p>

<textarea readonly rows="10">
...
function sumar() {
    var temp = 0;
    var i;
    for (i = 0; i < arrayDatos.length; i++) {
        temp = Number(arrayDatos[i]) + temp;
    }
return temp;
} 
...
</textarea>
                        <i id="arrow" class="fa fa-angle-double-up" aria-hidden="true"></i>
                    </div>


                <form class="formulario">
                    <fieldset id="selectorN">
                        <legend>Número de datos: </legend>
                        <p id="numDatos">3 datos</p>
                        <input id="rangoDatos" type="range" min="1" max="100" value="3" />                        
                        <div id="divA">
                            <span id="aIzquierda"><i id="minus" class="fa fa-minus-circle" title="Disminuir número de datos" aria-hidden="true"></i></span><span id="aDerecha"><i id="plus" class="fa fa-plus-circle" title="Aumentar número de datos" aria-hidden="true"></i></span>
                        </div>
                    </fieldset> 
                    <div id="divDatos">
                        <fieldset>
                            <legend>Datos: </legend>
                            <div id="div1"><label>1:</label><input type="number" id="dato1" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div2"><label>2:</label><input type="number" id="dato2" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div3"><label>3:</label><input type="number" id="dato3" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div4"><label>4:</label><input type="number" id="dato4" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div5"><label>5:</label><input type="number" id="dato5" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div6"><label>6:</label><input type="number" id="dato6" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div7"><label>7:</label><input type="number" id="dato7" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div8"><label>8:</label><input type="number" id="dato8" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div9"><label>9:</label><input type="number" id="dato9" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div10"><label>10:</label><input type="number" id="dato10" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div11"><label>11:</label><input type="number" id="dato11" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div12"><label>12:</label><input type="number" id="dato12" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div13"><label>13:</label><input type="number" id="dato13" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div14"><label>14:</label><input type="number" id="dato14" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div15"><label>15:</label><input type="number" id="dato15" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div16"><label>16:</label><input type="number" id="dato16" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div17"><label>17:</label><input type="number" id="dato17" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div18"><label>18:</label><input type="number" id="dato18" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div19"><label>19:</label><input type="number" id="dato19" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div20"><label>20:</label><input type="number" id="dato20" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div21"><label>21:</label><input type="number" id="dato21" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div22"><label>22:</label><input type="number" id="dato22" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div23"><label>23:</label><input type="number" id="dato23" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div24"><label>24:</label><input type="number" id="dato24" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div25"><label>25:</label><input type="number" id="dato25" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div26"><label>26:</label><input type="number" id="dato26" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div27"><label>27:</label><input type="number" id="dato27" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div28"><label>28:</label><input type="number" id="dato28" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div29"><label>29:</label><input type="number" id="dato29" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div30"><label>30:</label><input type="number" id="dato30" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div31"><label>31:</label><input type="number" id="dato31" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div32"><label>32:</label><input type="number" id="dato32" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div33"><label>33:</label><input type="number" id="dato33" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div34"><label>34:</label><input type="number" id="dato34" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div35"><label>35:</label><input type="number" id="dato35" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div36"><label>36:</label><input type="number" id="dato36" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div37"><label>37:</label><input type="number" id="dato37" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div38"><label>38:</label><input type="number" id="dato38" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div39"><label>39:</label><input type="number" id="dato39" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div40"><label>40:</label><input type="number" id="dato40" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div41"><label>41:</label><input type="number" id="dato41" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div42"><label>42:</label><input type="number" id="dato42" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div43"><label>43:</label><input type="number" id="dato43" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div44"><label>44:</label><input type="number" id="dato44" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div45"><label>45:</label><input type="number" id="dato45" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div46"><label>46:</label><input type="number" id="dato46" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div47"><label>47:</label><input type="number" id="dato47" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div48"><label>48:</label><input type="number" id="dato48" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div49"><label>49:</label><input type="number" id="dato49" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div50"><label>50:</label><input type="number" id="dato50" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div51"><label>51:</label><input type="number" id="dato51" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div52"><label>52:</label><input type="number" id="dato52" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div53"><label>53:</label><input type="number" id="dato53" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div54"><label>54:</label><input type="number" id="dato54" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div55"><label>55:</label><input type="number" id="dato55" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div56"><label>56:</label><input type="number" id="dato56" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div57"><label>57:</label><input type="number" id="dato57" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div58"><label>58:</label><input type="number" id="dato58" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div59"><label>59:</label><input type="number" id="dato59" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div60"><label>60:</label><input type="number" id="dato60" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div61"><label>61:</label><input type="number" id="dato61" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div62"><label>62:</label><input type="number" id="dato62" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div63"><label>63:</label><input type="number" id="dato63" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div64"><label>64:</label><input type="number" id="dato64" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div65"><label>65:</label><input type="number" id="dato65" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div66"><label>66:</label><input type="number" id="dato66" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div67"><label>67:</label><input type="number" id="dato67" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div68"><label>68:</label><input type="number" id="dato68" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div69"><label>69:</label><input type="number" id="dato69" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div70"><label>70:</label><input type="number" id="dato70" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div71"><label>71:</label><input type="number" id="dato71" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div72"><label>72:</label><input type="number" id="dato72" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div73"><label>73:</label><input type="number" id="dato73" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div74"><label>74:</label><input type="number" id="dato74" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div75"><label>75:</label><input type="number" id="dato75" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div76"><label>76:</label><input type="number" id="dato76" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div77"><label>77:</label><input type="number" id="dato77" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div78"><label>78:</label><input type="number" id="dato78" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div79"><label>79:</label><input type="number" id="dato79" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div80"><label>80:</label><input type="number" id="dato80" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div81"><label>81:</label><input type="number" id="dato81" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div82"><label>82:</label><input type="number" id="dato82" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div83"><label>83:</label><input type="number" id="dato83" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div84"><label>84:</label><input type="number" id="dato84" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div85"><label>85:</label><input type="number" id="dato85" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div86"><label>86:</label><input type="number" id="dato86" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div87"><label>87:</label><input type="number" id="dato87" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div88"><label>88:</label><input type="number" id="dato88" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div89"><label>89:</label><input type="number" id="dato89" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div90"><label>90:</label><input type="number" id="dato90" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div91"><label>91:</label><input type="number" id="dato91" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div92"><label>92:</label><input type="number" id="dato92" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div93"><label>93:</label><input type="number" id="dato93" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div94"><label>94:</label><input type="number" id="dato94" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div95"><label>95:</label><input type="number" id="dato95" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div96"><label>96:</label><input type="number" id="dato96" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div97"><label>97:</label><input type="number" id="dato97" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div98"><label>98:</label><input type="number" id="dato98" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div99"><label>99:</label><input type="number" id="dato99" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>
                            <div id="div100"><label>100:</label><input type="number" id="dato100" placeholder="Ingrese un número" autocomplete="off" step="any" oninput="borrarResultados();" onchange="borrarResultados();" onkeydown="manejador(event, this.id);" /></div>

                            
                        </fieldset>
                    </div>
                    
                    <button type="button" id="btnCalcular" title="Realizar cálculos">CALCULAR</button>
                    <button type="button" id="btnCopiar" disabled title="Copiar Resultados">COPIAR</button> 
                                       
                    <fieldset>
                        <legend>Resultados: </legend>
                        <label >Número de Datos:</label> <br />
                        <input type="text" id="cuenta" readonly /><br />
                        <label >Suma:</label> <br />
                        <input type="text" id="suma" readonly /><br />
                        <label>Productoria:</label> <br />
                        <input type="text" id="productoria" readonly /><br />
                        <label>Suma de cuadrados:</label> <br />
                        <input type="text" id="sumaCuadrados" readonly /><br />
                        <label>Máximo:</label> <br />
                        <input type="text" id="max" readonly /><br />
                        <label>Mínimo:</label> <br />
                        <input type="text" id="min" readonly /><br />
                        <label>Rango o recorrido:</label> <br />
                        <input type="text" id="rango" readonly /><br />
                        <label>Recorrido relativo:</label> <br />
                        <input type="text" id="recorridoRelativo" readonly /><br />
                        <label>Coeficiente de apertura:</label> <br />
                        <input type="text" id="coefApertura" readonly /><br />
                        <label>Media aritmética:</label> <br />
                        <input type="text" id="media" readonly /><br />
                        <label>Media geométrica:</label> <br />
                        <input type="text" id="mediaGeom" readonly /><br />
                        <label>Media armónica:</label> <br />
                        <input type="text" id="mediaArm" readonly /><br />
                        <label>Media cuadrática:</label> <br />
                        <input type="text" id="mediaCuad" readonly /><br />
                        <label>Moda (Primera encontrada):</label> <br />
                        <input type="text" id="moda" readonly /><br />
                        <label>Mediana:</label> <br />
                        <input type="text" id="mediana" readonly /><br />
                        <label>Primer cuartil (Q<sub>1</sub> = P<sub>25</sub>):</label> <br />
                        <input type="text" id="q1" readonly /><br />
                        <label>Tercer cuartil (Q<sub>3</sub> = P<sub>75</sub>):</label> <br />
                        <input type="text" id="q3" readonly /><br />
                        <label>Rango intercuartílico (Q<sub>3</sub> - Q<sub>1</sub>):</label> <br />
                        <input type="text" id="rangoIntercuartílico" readonly /><br />
                        <label>Desviación media:</label> <br />
                        <input type="text" id="desvMedia" readonly /><br />
                        <label>Varianza poblacional:</label> <br />
                        <input type="text" id="varianzaP" readonly /><br />
                        <label>Desviación estándar poblacional:</label> <br />
                        <input type="text" id="desvP" readonly /><br />
                        <label>Coeficiente de variación poblacional:</label> <br />
                        <input type="text" id="coefVarP" readonly /><br />
                        <label>Varianza muestral:</label> <br />
                        <input type="text" id="varianzaM" readonly /><br />
                        <label>Desviación estándar muestral:</label> <br />
                        <input type="text" id="desvM" readonly /><br />
                        <label>Coeficiente de variación muestral:</label> <br />
                        <input type="text" id="coefVarM" readonly /><br />
                        <label>Error típico de la media muestral:</label> <br />
                        <input type="text" id="ETMM" readonly /><br />
                        <label>Coeficiente de asimetría de Fisher:</label> <br />
                        <input type="text" id="coefAsim" readonly /><br />
                        <label>Curtosis:</label> <br />
                        <input type="text" id="curtosis" readonly /><br />
                        <label>Pendiente <strong>m</strong> recta de ajuste <br /> 
                        y = <strong>m</strong>x + b:</label> <br />
                        <input type="text" id="pendiente" readonly /><br />
                        <label>Intercepto <strong>b</strong> recta de ajuste <br />
                        y = mx + <strong>b</strong>:</label> <br />
                        <input type="text" id="intercepto" readonly /><br />
                        <label>Coeficiente de correlación <strong>r</strong> lineal:</label> <br />
                        <input type="text" id="r" readonly /><br />
                        <label>Coeficiente <strong>r<sup>2</sup></strong> lineal:</label> <br />
                        <input type="text" id="r2" readonly /><br />
                        <label>Pronóstico lineal:</label> <br />
                        <input type="text" id="pronLin" readonly /><br />
                        <label>Parámetro <strong>a</strong> regresión exponencial <br />
                        y = <strong>a</strong>e<sup>bx</sup>:</label> <br />
                        <input type="text" id="aExp" readonly /><br />
                        <label>Parámetro <strong>b</strong> regresión exponencial <br />
                        y = ae<sup><strong>b</strong>x</sup>:</label> <br />
                        <input type="text" id="bExp" readonly /><br />
                        <label>Coeficiente <strong>r</strong> regresión exponencial:</label> <br />
                        <input type="text" id="rExp" readonly /><br />
                        <label>Coeficiente <strong>r<sup>2</sup></strong> regresión exponencial:</label> <br />
                        <input type="text" id="r2Exp" readonly /><br />
                        <label>Pronóstico exponencial:</label> <br />
                        <input type="text" id="pronExp" readonly /><br />
                        <label>Parámetro <strong>a</strong> regresión logarítmica <br />
                        y = <strong>a</strong>ln(x) + b:</label> <br />
                        <input type="text" id="aLog" readonly /><br />
                        <label>Parámetro <strong>b</strong> regresión logarítmica <br />
                        y = aln(x) + <strong>b</strong>:</label> <br />
                        <input type="text" id="bLog" readonly /><br />
                        <label>Coeficiente <strong>r</strong> regresión logarítmica:</label> <br />
                        <input type="text" id="rLog" readonly /><br />
                        <label>Coeficiente <strong>r<sup>2</sup></strong> regresión logarítmica:</label> <br />
                        <input type="text" id="r2Log" readonly /><br />
                        <label>Pronóstico logarítmico:</label> <br />
                        <input type="text" id="pronLog" readonly /><br />
                        <label>Parámetro <strong>a</strong> regresión potencial <br />
                        y = <strong>a</strong>x<sup>b</sup>:</label> <br />
                        <input type="text" id="aPot" readonly /><br />
                        <label>Parámetro <strong>b</strong> regresión potencial <br />
                        y = ax<sup><strong>b</strong></sup>:</label> <br />
                        <input type="text" id="bPot" readonly /><br />
                        <label>Coeficiente <strong>r</strong> regresión potencial:</label> <br />
                        <input type="text" id="rPot" readonly /><br />
                        <label>Coeficiente <strong>r<sup>2</sup></strong> regresión potencial:</label> <br />
                        <input type="text" id="r2Pot" readonly /><br />
                        <label>Pronóstico potencial:</label> <br />
                        <input type="text" id="pronPot" readonly /><br />
                        <!-- polinomial grado 2 -->
                        <label>Coeficiente <strong>C<sub>0</sub></strong> regresión polinomial grado 2 <br />
                        Y = <strong>C<sub>0</sub></strong> + C<sub>1</sub>X + C<sub>2</sub>X<sup>2</sup>:
                        </label> <br />
                        <input type="text" id="Pol2C0" readonly /><br />
                        <label>Coeficiente <strong>C<sub>1</sub></strong> regresión polinomial grado 2 <br />
                        Y = C<sub>0</sub> + <strong>C<sub>1</sub></strong>X + C<sub>2</sub>X<sup>2</sup>:</label> <br />
                        <input type="text" id="Pol2C1" readonly /><br />
                        <label>Coeficiente <strong>C<sub>2</sub></strong> regresión polinomial grado 2 <br />
                        Y = C<sub>0</sub> + C<sub>1</sub>X + <strong>C<sub>2</sub></strong>X<sup>2</sup>:</label> <br />
                        <input type="text" id="Pol2C2" readonly /><br />
                        <label>Coeficiente <strong>r</strong> polinomial grado 2:</label> <br />
                        <input type="text" id="Pol2R" readonly /><br />
                        <label>Coeficiente <strong>r<sup>2</sup></strong> polinomial grado 2:</label> <br />
                        <input type="text" id="Pol2R2" readonly /><br />
                        <label>Pronóstico regresión polinomial grado 2:</label> <br />
                        <input type="text" id="Pol2Pron" readonly /><br />
                        <!-- polinomial grado 3 -->
                        <label>
                            Coeficiente <strong>C<sub>0</sub></strong> regresión polinomial grado 3 <br />
                            Y = <strong>C<sub>0</sub></strong> + C<sub>1</sub>X + C<sub>2</sub>X<sup>2</sup> + C<sub>3</sub>X<sup>3</sup>:
                        </label> <br />
                        <input type="text" id="Pol3C0" readonly /><br />
                        <label>
                            Coeficiente <strong>C<sub>1</sub></strong> regresión polinomial grado 3 <br />
                            Y = C<sub>0</sub> + <strong>C<sub>1</sub></strong>X + C<sub>2</sub>X<sup>2</sup> + C<sub>3</sub>X<sup>3</sup>:
                        </label> <br />
                        <input type="text" id="Pol3C1" readonly /><br />
                        <label>
                            Coeficiente <strong>C<sub>2</sub></strong> regresión polinomial grado 3 <br />
                            Y = C<sub>0</sub> + C<sub>1</sub>X + <strong>C<sub>2</sub></strong>X<sup>2</sup> + C<sub>3</sub>X<sup>3</sup>:
                        </label> <br />
                        <input type="text" id="Pol3C2" readonly /><br />
                        <label>
                            Coeficiente <strong>C<sub>3</sub></strong> regresión polinomial grado 3 <br />
                            Y = C<sub>0</sub> + C<sub>1</sub>X + C<sub>2</sub>X<sup>2</sup> + <strong>C<sub>3</sub></strong>X<sup>3</sup>:
                        </label> <br />
                        <input type="text" id="Pol3C3" readonly /><br />
                        <label>Coeficiente <strong>r</strong> polinomial grado 3:</label> <br />
                        <input type="text" id="Pol3R" readonly /><br />
                        <label>Coeficiente <strong>r<sup>2</sup></strong> polinomial grado 3:</label> <br />
                        <input type="text" id="Pol3R2" readonly /><br />
                        <label>Pronóstico regresión polinomial grado 3:</label> <br />
                        <input type="text" id="Pol3Pron" readonly /><br />
                    </fieldset>                    
                </form>
                <div id="linechart"></div>
                <div id="noDisponible">
                    <p>GRÁFICO NO DISPONIBLE</p>
                </div>
                <fieldset id="opcionesGráfico">
                    <legend>Opciones del Gráfico: </legend>
                    <label class="contenedorCheckbox">
                        Usar trazado curvo
                        <input type="checkbox" id="myCheck2" onclick="clickCheck2()">
                        <span class="checkmark"></span>
                    </label>
                    <label class="contenedorCheckbox">
                        Mostrar tendencia lineal y media aritmética
                        <input type="checkbox" id="myCheck" onclick="clickCheck()">
                        <span class="checkmark"></span>
                    </label>                      
                    <button id="BtnPNG" title="Copiar enlace a imagen PNG del gráfico">COPIAR ENLACE PNG</button>
                    <p class="letramorada">En navegadores modernos, puede visualizar este enlace como una imagen PNG</p>
                </fieldset>                
                
                <!--script para cargar la API de Google para gráficos-->
                <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js">
                </script>


                    <!--FUNCIONES PARA ANÁLISIS-->
                    <script>
                        //declara variables para cálculos

                        var cuenta;
                        var suma;
                        var sumaCuadrados;
                        var productoria;
                        var max;
                        var min;
                        var rango;
                        var recorridoRelativo;
                        var coefApertura;
                        var todosPositivos = true;
                        var media;
                        var mediaGeom;
                        var mediaArm;
                        var mediaCuad;
                        var moda;
                        var mediana;
                        var q1;
                        var q3;
                        var rangoIntercuartílico;
                        var mostrarSeriesAdicionales = false;
                        var varianzaP;
                        var desvP;
                        var coefVarP;
                        var varianzaM;
                        var desvM;
                        var coefVarM;
                        var ETMM;
                        var coefAsim;
                        var curtosis;
                        var pendiente;
                        var intercepto;
                        var r;
                        var r2;
                        var desvMedia;
                        var pronLin;
                        var tipoCurva = 'null';
                        var aExp;
                        var bExp;
                        var rExp;
                        var r2Exp;
                        var pronExp;
                        var aLog;
                        var bLog;
                        var rLog;
                        var r2Log;
                        var pronLog;
                        var aPot;
                        var bPot;
                        var rPot;
                        var r2Pot;
                        var pronPot;
                        //polinomial grado 2
                        var Pol2C0;
                        var Pol2C1;
                        var Pol2C2;
                        var Pol2R;
                        var Pol2R2;
                        var Pol2Pron;
                        //polinomial grado 3
                        var Pol3C0;
                        var Pol3C1;
                        var Pol3C2;
                        var Pol3C3;
                        var Pol3R;
                        var Pol3R2;
                        var Pol3Pron;
                        // para el gráfico
                        var chart;

                        //SUMA ARRAY
                        function sumar() {
                            var temp = 0;
                            var i;
                            for (i = 0; i < arrayDatos.length; i++) {
                                temp = Number(arrayDatos[i]) + temp;
                            }
                            return temp;
                        }
                        //SUMA cuadrados
                        function sumarCuadrados() {
                            var temp = 0;
                            var i;
                            for (i = 0; i < arrayDatos.length; i++) {
                                temp = Number(arrayDatos[i]) * Number(arrayDatos[i]) + temp;
                            }
                            return temp;
                        }
                        //recorre y obtiene max y min                  
                        function maxmin() {
                            var tempMax = Number(arrayDatos[0]) ;
                            var tempMin = Number(arrayDatos[0]) ;
                            var i;
                            todosPositivos = true;
                            for (i = 0; i < arrayDatos.length; i++) {
                                //verifica si no hay negativos
                                if (arrayDatos[i] <= 0) { todosPositivos = false; }
                                //mayor
                                if (arrayDatos[i] > tempMax) {
                                    tempMax = Number(arrayDatos[i]);
                                }
                                //menor
                                if (arrayDatos[i] < tempMin) {
                                    tempMin = Number(arrayDatos[i]);
                                }                                
                            } 
                            max = tempMax;
                            min = tempMin;                            
                        }
                        //productoria
                        function calculaProductoria() {                            
                            var prod = 1;
                            var i;
                            if (todosPositivos == false) {
                                //no la calcula
                                prod = "Requiere valores positivos";
                            } else {
                                for (i = 0; i < arrayDatos.length; i++) {
                                    prod = Number(arrayDatos[i]) * prod;
                                }                                
                            }
                            return prod;
                        }
                        //media geométrica
                        function mediaGeométrica() {
                            var temp;                            
                            var i;
                            if (todosPositivos == false) {
                                //no la calcula
                                temp = "Requiere valores positivos";
                            } else {                                
                                temp = Math.pow(productoria, 1 / cuenta);
                            }
                            return temp;
                        }
                        //media armónica
                        function mediaArmónica() {
                            var temp;
                            var sumaInv = 0;
                            var i;
                            if (todosPositivos == false) {
                                //no la calcula
                                temp = "Requiere valores positivos";
                            } else {
                                for (i = 0; i < arrayDatos.length; i++) {
                                    sumaInv = 1/Number(arrayDatos[i]) + sumaInv;
                                }
                                temp = sumaInv / cuenta;
                                temp = 1 / temp;
                            }
                            return temp;
                        }
                        //media cuadrática
                        function mediaCuadrática() {
                            var temp = 0;
                            temp = Math.sqrt(sumaCuadrados / cuenta);
                            return temp;
                        }
                        //devuelve la primera moda encontrada
                        function calculaModa() {
                            var repetidos = 1;
                            var temp = "No disponible (Sin duplicados)";
                            var contador = 0;
                            var i;
                            var j;
                            for (i = 0; i < arrayDatos.length; i++) {
                                contador = 0;
                                for (j = 0; j < arrayDatos.length; j++) {
                                    if (arrayDatos[i] == arrayDatos[j]) {
                                        contador++;
                                    }
                                }
                                if (contador > repetidos) {
                                    temp = arrayDatos[i];
                                    repetidos = contador;
                                }
                            }
                            return temp;
                        }
                        //devuelve la mediana
                        function calculaMediana() {
                            // Nota:
                            // n = cuenta (length)
                            // array ordenado es base 0
                            if (cuenta % 2 == 0) {
                                //es par
                                return (Number(ordenado[(cuenta / 2) - 1]) + Number(ordenado[cuenta / 2])) / 2;
                            } else {
                                //es impar
                                return Number(ordenado[((1 + cuenta) / 2) - 1]);
                            }
                        }
                        //devuelve primer cuartil
                        function calculaQ1() {
                            // Nota:
                            // n = cuenta (length)
                            // array ordenado es base 0
                            if (cuenta < 3) {
                                return "No disponible (N < 3)";
                            }
                            var parteEntera;
                            var parteDecimal;
                            var pos;

                            if ((1 + cuenta) % 4 == 0) {
                                //es múltiplo
                                pos = (1 + cuenta) / 4;
                                pos--;
                                return ordenado[pos];                                
                            } else {
                                //no es múltiplo                                
                                parteEntera = Math.floor((1 + cuenta) / 4);
                                parteDecimal = ((1 + cuenta) / 4) % 1;
                                return Number(ordenado[parteEntera - 1]) + parteDecimal * (ordenado[parteEntera] - ordenado[parteEntera-1]);
                            }
                        }
                        //devuelve tercer cuartil
                        function calculaQ3() {
                            // Nota:
                            // n = cuenta (length)
                            // array ordenado es base 0
                            if (cuenta < 3) {
                                return "No disponible (N < 3)";
                            }
                            var parteEntera;
                            var parteDecimal;
                            var pos;

                            if ((3 * (1 + cuenta)) % 4 == 0) {
                                //es múltiplo
                                pos = 3 * (1 + cuenta) / 4;
                                pos--;
                                return ordenado[pos];
                            } else {
                                //no es múltiplo                                
                                parteEntera = Math.floor(3 * (1 + cuenta) / 4);
                                parteDecimal = (3 * (1 + cuenta) / 4) % 1;
                                return Number(ordenado[parteEntera - 1]) + parteDecimal * (ordenado[parteEntera] - ordenado[parteEntera - 1]);
                            }
                        }
                        //devuelve rango intercuartílico
                        function calculaRangoIntercuartílico() {
                            if (cuenta < 3) {
                                return "No disponible (N < 3)";
                            } else {
                                return q3 - q1;
                            }                            
                        }
                        //devuelve varianza poblacional
                        function calculaVarianzaPoblacional() {
                            return (sumaCuadrados / cuenta) - (media * media);
                        }
                        //devuelve varianza muestral
                        function calculaVarianzaMuestral() {
                            if (cuenta < 2) {
                                return "No disponible (N < 2)";
                            } else {
                                return (sumaCuadrados / (cuenta - 1)) - (media * media * cuenta / (cuenta - 1));
                            }                               
                        }
                        //devuelve desviación estándar poblacional
                        function calculaDesvPoblacional() {                            
                            if (varianzaP < 0) {
                                //improbable, pero por si acaso
                                return "No disponible (Var < 0)";
                            }
                            //la raíz de la varianza
                            return Math.sqrt(varianzaP);
                        }
                        //devuelve desviación estándar muestral
                        function calculaDesvMuestral() {
                            if (cuenta < 2) {
                                return "No disponible (N < 2)";
                            }                             
                            if (varianzaM < 0) {
                                //improbable, pero por si acaso
                                return "No disponible (VarM < 0)";
                            }
                            //la raíz de la varianza muestral
                            return Math.sqrt(varianzaM);
                        }
                        //devuelve el coeficiente de variación poblacional
                        function calculaCoefVarPoblacional() {
                            if (media == 0) {
                                //evita la división por cero
                                return "No disponible (Media = 0)";
                            }
                            //cociente
                            return desvP / media;
                        }
                        //devuelve el coeficiente de variación muestral
                        function calculaCoefVarMuestral() {
                            if (cuenta < 2) {
                                return "No disponible (N < 2)";
                            }    
                            if (media == 0) {
                                //evita la división por cero
                                return "No disponible (Media = 0)";
                            }
                            //cociente
                            return desvM / media;
                        }
                        //devuelve el error típico de la media muestral ETMM
                        function calculaETMM() {
                            if (cuenta < 2) {
                                return "No disponible (N < 2)";
                            }
                            if (varianzaM < 0) {
                                //improbable, pero por si acaso
                                return "No disponible (VarM < 0)";
                            }
                            //un cociente
                            return desvM / Math.sqrt(cuenta);
                        }
                        //devuelve el coeficiente de asimetría
                        function calculaCoefAsim() {
                            if (cuenta < 3) {
                                return "No disponible (N < 3)";
                            }
                            if (desvM == 0) {
                                //impide div/0
                                return "No disponible (Desv Est = 0)";
                            }
                            //cálcula...
                            var i;
                            var sumaCubos = 0;
                            for (i = 0; i < arrayDatos.length; i++) {
                                sumaCubos = Math.pow((arrayDatos[i] - media) / desvM, 3) + sumaCubos;
                            }
                            return sumaCubos * cuenta / ((cuenta - 1) * (cuenta - 2));
                        }
                        //devuelve la curtosis
                        function calculaCurtosis() {
                            if (cuenta < 4) {
                                return "No disponible (N < 4)";
                            }
                            if (desvM == 0) {
                                //impide div/0
                                return "No disponible (Desv Est = 0)";
                            }
                            //cálcula...
                            var i;
                            var suma4 = 0;
                            var temp;
                            var restar;
                            for (i = 0; i < arrayDatos.length; i++) {
                                suma4 = Math.pow((arrayDatos[i] - media) / desvM, 4) + suma4;
                            }
                            temp = cuenta * (cuenta + 1);
                            temp = temp / ((cuenta - 1) * (cuenta - 2) * (cuenta - 3));
                            temp = temp * suma4;
                            restar = 3 * (cuenta - 1) * (cuenta - 1);
                            restar = restar / ((cuenta - 2) * (cuenta - 3));
                            return temp - restar;
                        }
                        //regresión lineal
                        function regLineal() {
                            if (cuenta == 1) {
                                //mínimo dos puntos de datos
                                //asume linealidad y recta horizontal
                                pendiente = 0;
                                intercepto = Number(arrayDatos[0]);
                                r = 1;
                                r2 = 1;
                                return;
                            }
                            
                            //cálcula...
                            var i;
                            var numerador = 0;
                            var denominador1 = 0;
                            var denominador2 = 0;
                            var mediaX;
                            var temp = 0;

                            for (i = 1; i <= cuenta; i++) {
                                temp = Number(i) + temp;
                            }
                            mediaX = temp / cuenta;
                            //sumatorias
                            for (i = 0; i < arrayDatos.length; i++) {
                                numerador = (1 + i - mediaX) * (arrayDatos[i] - media) + numerador;
                                denominador1 = Math.pow(1 + i - mediaX, 2) + denominador1;
                                denominador2 = Math.pow(arrayDatos[i] - media, 2) + denominador2;
                            }
                            if (denominador1 == 0) {
                                //improbable
                                pendiente = "No disponible";
                                intercepto = "No disponible";
                                r = "No disponible";
                                r2 = "No disponible";
                                return;
                            } else {
                                pendiente = numerador / denominador1;
                                intercepto = media - pendiente * mediaX;
                            }
                            if (denominador2 == 0) {
                                //improbable 
                                if (pendiente == 0) {
                                    r = 1;
                                    r2 = 1;
                                    return;
                                }
                                r = "No disponible";
                                r2 = "No disponible";
                                return;
                            } else {
                                r = numerador / Math.sqrt(denominador1 * denominador2);
                                r2 = r * r;
                            }                            
                        }
                        //devuelve el desviación media
                        function calculaDesvMedia() {                            
                            //cálcula...
                            var i;
                            var temp = 0;
                            for (i = 0; i < arrayDatos.length; i++) {
                                temp = Math.abs(arrayDatos[i] - media) + temp;
                            }
                            return temp / cuenta;
                        }
                        //devuelve el pronóstico lineal
                        function calculaPronósticoLineal() { 
                            if (isNaN(pendiente) == true || isNaN(intercepto) == true) {
                                return "No disponible";
                            }
                            return Number(pendiente * (1 + cuenta)) + Number(intercepto);
                        }
                        //regresión exponencial
                        function regExponencial() {
                            if (cuenta < 2) {
                                //mínimo dos puntos de datos
                                //No asume nada
                                aExp = "No disponible (N < 2)";
                                bExp = "No disponible (N < 2)";
                                rExp = "No disponible (N < 2)";
                                r2Exp = "No disponible (N < 2)";
                                pronExp = "No disponible (N < 2)";
                                return;
                            }
                            if (todosPositivos == false) {
                                //no realiza la regresión 
                                aExp = "Requiere valores positivos";
                                bExp = "Requiere valores positivos";
                                rExp = "Requiere valores positivos";
                                r2Exp = "Requiere valores positivos";
                                pronExp = "Requiere valores positivos";
                                return;
                            }
                            //cálcula...
                            var i;
                            var numerador = 0;
                            var denominador1 = 0;
                            var denominador2 = 0;
                            var mediaX;
                            var mediaLnY = 0;
                            var temp = 0;

                            for (i = 1; i <= cuenta; i++) {
                                temp = Number(i) + temp;
                                mediaLnY = Math.log(arrayDatos[i - 1]) + mediaLnY;
                            }
                            mediaX = temp / cuenta;
                            mediaLnY = mediaLnY / cuenta;
                            //sumatorias
                            for (i = 0; i < arrayDatos.length; i++) {
                                numerador = (1 + i - mediaX) * (Math.log(arrayDatos[i]) - mediaLnY) + numerador;
                                denominador1 = Math.pow(1 + i - mediaX, 2) + denominador1;
                                denominador2 = Math.pow(Math.log(arrayDatos[i]) - mediaLnY, 2) + denominador2;
                            }
                            if (denominador1 == 0) {
                                //improbable
                                aExp = "No disponible";
                                bExp = "No disponible";
                                rExp = "No disponible";
                                r2Exp = "No disponible";
                                return;
                            } else {
                                bExp = numerador / denominador1;
                                aExp = mediaLnY - bExp * mediaX;
                                aExp = Math.exp(aExp);
                            }
                            if (denominador2 == 0) {                                
                                rExp = "No disponible";
                                r2Exp = "No disponible";
                                return;
                            } else {
                                rExp = numerador / Math.sqrt(denominador1 * denominador2);
                                r2Exp = rExp * rExp;
                            }
                        }
                        //devuelve el pronóstico exponencial
                        function calculaPronósticoExponencial() {
                            if (cuenta < 2) {
                                return "No disponible (N < 2)";
                            }
                            if (todosPositivos == false) {                                
                                return "Requiere valores positivos";                                
                            }
                            if (isNaN(aExp) == true || isNaN(bExp) == true) {
                                return "No disponible";
                            }                            
                            var siguiente = 1 + cuenta;
                            return aExp * Math.exp(bExp * siguiente);
                        }

                        //regresión logarítmica
                        function regLogarítmica() {
                            if (cuenta < 2) {
                                //mínimo dos puntos de datos
                                //No asume nada
                                aLog = "No disponible (N < 2)";
                                bLog = "No disponible (N < 2)";
                                rLog = "No disponible (N < 2)";
                                r2Log = "No disponible (N < 2)";
                                pronLog = "No disponible (N < 2)";
                                return;
                            }
                            
                            //cálcula...
                            var i;
                            var numerador = 0;
                            var denominador1 = 0;
                            var denominador2 = 0;
                            var mediaLnX = 0;  

                            for (i = 1; i <= cuenta; i++) {                                
                                mediaLnX = Math.log(i) + mediaLnX;
                            }                            
                            mediaLnX = mediaLnX / cuenta;
                            //sumatorias
                            for (i = 0; i < arrayDatos.length; i++) {
                                numerador = (Math.log(1 + i) - mediaLnX) * (arrayDatos[i] - media) + numerador;
                                denominador1 = Math.pow(Math.log(1 + i) - mediaLnX, 2) + denominador1;
                                denominador2 = Math.pow(arrayDatos[i] - media, 2) + denominador2;
                            }
                            if (denominador1 == 0) {
                                //improbable
                                aLog = "No disponible";
                                bLog = "No disponible";
                                rLog = "No disponible";
                                r2Log = "No disponible";
                                return;
                            } else {
                                aLog = numerador / denominador1;
                                bLog = media - aLog * mediaLnX;                                
                            }
                            if (denominador2 == 0) {
                                rLog = "No disponible";
                                r2Log = "No disponible";
                                return;
                            } else {
                                rLog = numerador / Math.sqrt(denominador1 * denominador2);
                                r2Log = rLog * rLog;
                            }
                        }
                        //devuelve el pronóstico logarítmico
                        function calculaPronósticoLogarítmico() {
                            if (cuenta < 2) {
                                return "No disponible (N < 2)";
                            }                            
                            if (isNaN(aLog) == true || isNaN(bLog) == true) {
                                return "No disponible";
                            }
                            var siguiente = 1 + cuenta;
                            return Number(bLog) + aLog * Math.log(siguiente);
                        }
                        //regresión potencial
                        function regPotencial() {                             
                            if (cuenta < 2) {
                                //mínimo dos puntos de datos
                                //No asume nada
                                aPot = "No disponible (N < 2)";
                                bPot = "No disponible (N < 2)";
                                rPot = "No disponible (N < 2)";
                                r2Pot = "No disponible (N < 2)";
                                pronPot = "No disponible (N < 2)";
                                return;
                            }
                            if (todosPositivos == false) {
                                //no realiza la regresión 
                                aPot = "Requiere valores positivos";
                                bPot = "Requiere valores positivos";
                                rPot = "Requiere valores positivos";
                                r2Pot = "Requiere valores positivos";
                                pronPot = "Requiere valores positivos";
                                return;
                            }
                            //cálcula...
                            var i;
                            var numerador = 0;
                            var denominador1 = 0;
                            var denominador2 = 0;
                            var mediaLnX = 0;
                            var mediaLnY = 0;                            

                            for (i = 1; i <= cuenta; i++) {
                                mediaLnX = Math.log(i) + mediaLnX;
                                mediaLnY = Math.log(arrayDatos[i - 1]) + mediaLnY;
                            }
                            mediaLnX = mediaLnX / cuenta;
                            mediaLnY = mediaLnY / cuenta;
                            //sumatorias
                            for (i = 0; i < arrayDatos.length; i++) {
                                numerador = (Math.log(1 + i) - mediaLnX) * (Math.log(arrayDatos[i]) - mediaLnY) + numerador;
                                denominador1 = Math.pow(Math.log(1 + i) - mediaLnX, 2) + denominador1;
                                denominador2 = Math.pow(Math.log(arrayDatos[i]) - mediaLnY, 2) + denominador2;
                            }
                            if (denominador1 == 0) {
                                //improbable
                                aPot = "No disponible";
                                bPot = "No disponible";
                                rPot = "No disponible";
                                r2Pot = "No disponible";
                                return;
                            } else {
                                bPot = numerador / denominador1;
                                aPot = mediaLnY - bPot * mediaLnX;
                                aPot = Math.exp(aPot);
                            }
                            if (denominador2 == 0) {
                                rPot = "No disponible";
                                r2Pot = "No disponible";
                                return;
                            } else {
                                rPot = numerador / Math.sqrt(denominador1 * denominador2);
                                r2Pot = rPot * rPot;
                            }
                        }
                        //devuelve el pronóstico potencial
                        function calculaPronósticoPotencial() {
                            if (cuenta < 2) {
                                return "No disponible (N < 2)";
                            }
                            if (todosPositivos == false) {
                                return "Requiere valores positivos";
                            }
                            if (isNaN(aPot) == true || isNaN(bPot) == true) {
                                return "No disponible";
                            }
                            var siguiente = 1 + cuenta;
                            return aPot * Math.pow(siguiente, bPot);
                        }
                        /** resuelve un sistema de ecuaciones dado una matrix n x n+1
                            devuelve un vector n x 1 con las soluciones
                            basado y mejorado a partir de https://martin-thoma.com/solving-linear-equations-with-gaussian-elimination/    */
                        function gauss(A) {
                            try {
                                var n = 1;
                                n = A.length;

                                for (var i = 0; i < n; i++) {
                                    // Search for maximum in this column
                                    var maxEl = Math.abs(A[i][i]);
                                    var maxRow = i;
                                    for (var k = i + 1; k < n; k++) {
                                        if (Math.abs(A[k][i]) > maxEl) {
                                            maxEl = Math.abs(A[k][i]);
                                            maxRow = k;
                                        }
                                    }

                                    // Swap maximum row with current row (column by column)
                                    for (var k = i; k < n + 1; k++) {
                                        var tmp = A[maxRow][k];
                                        A[maxRow][k] = A[i][k];
                                        A[i][k] = tmp;
                                    }

                                    // Make all rows below this one 0 in current column
                                    for (k = i + 1; k < n; k++) {
                                        var c = -A[k][i] / A[i][i];
                                        for (var j = i; j < n + 1; j++) {
                                            if (i == j) {
                                                A[k][j] = 0;
                                            } else {
                                                A[k][j] += c * A[i][j];
                                            }
                                        }
                                    }
                                }

                                // Solve equation Ax=b for an upper triangular matrix A
                                var x = new Array(n);
                                for (var i = n - 1; i > -1; i--) {
                                    x[i] = A[i][n] / A[i][i];
                                    for (var k = i - 1; k > -1; k--) {
                                        A[k][n] -= A[k][i] * x[i];
                                    }
                                }
                            }
                            catch(err) {
                                var x = [];
                                for (var i = 0; i < n; i++) {
                                    x[i] = "No disponible";
                                }
                            }
                            finally {
                                return x;
                            }
                        }
                        // fin gauss

                        //regresión polinomial cualquier grado 
                        function regPolinomial(grado) {
                            if (cuenta < 1 + grado) {
                                var Sol = [];
                                var tope = 1 + cuenta;
                                Sol.length = 4 + grado;
                                for (i = 0; i < Sol.length; i++) {
                                    Sol[i] = "No disponible (N < " + tope + ")";
                                }
                                return Sol;
                            }
                            try {
                                var i;
                                var j;
                                var temp;
                                var St;
                                var Sr;
                                var tempR;
                                var tempR2;
                                var tempPron;
                                var tempEval;
                                var Sol = [];
                                var Sistema = [];
                                for (var i = 0; i <= grado; i++) {
                                    Sistema[i] = [];
                                    for (var j = 0; j <= 1 + grado; j++) {
                                        Sistema[i][j] = undefined;
                                    }
                                }
                                //obtiene las sumas de potencias de 0 a 2*grado
                                var xPot = [];
                                var xPotY = [];

                                for (i = 0; i <= (2 * grado); i++) {
                                    xPot[i] = 0;
                                    xPotY[i] = 0;
                                }
                                for (i = 0; i <= (2 * grado); i++) {
                                    for (j = 1; j <= cuenta; j++) {
                                        xPot[i] = Math.pow(j, i) + xPot[i];
                                        if (i <= grado) {
                                            xPotY[i] = arrayDatos[j - 1] * Math.pow(j, i) + xPotY[i];
                                        }
                                    }
                                }
                                //agrega a la matrix Sistema[][] los coeficientes
                                for (i = 0; i <= grado; i++) {
                                    for (j = 0; j <= grado; j++) {
                                        Sistema[i][j] = xPot[Number(i) + j];
                                    }
                                }
                                //agrega a la matrix Sistema[][] los términos independientes
                                j = 1 + grado;
                                for (i = 0; i <= grado; i++) {
                                    Sistema[i][j] = xPotY[i];
                                }
                                // soluciona el sistema de ecuaciones por Gauss
                                Sol = gauss(Sistema);

                                // halla St
                                temp = 0;
                                for (i = 0; i < arrayDatos.length; i++) {
                                    temp = Math.pow(arrayDatos[i] - media, 2) + temp;
                                }
                                St = temp;
                                // halla Sr
                                temp = 0;
                                for (i = 0; i < arrayDatos.length; i++) {
                                    //evalúa el polinomio en i
                                    tempEval = 0;
                                    for (j = 0; j <= grado; j++) {
                                        tempEval = Math.pow(1 + i, j) * Sol[j] + tempEval;
                                    }
                                    temp = Math.pow(arrayDatos[i] - tempEval, 2) + temp;
                                }
                                Sr = temp;
                                //halla r y r^2
                                if (St == 0) {
                                    //improbable
                                    tempR2 = "No disponible";
                                    tempR = "No disponible";
                                } else {
                                    tempR2 = (St - Sr) / St;
                                    if (tempR2 < 0) {
                                        tempR = "No disponible";
                                    } else {
                                        tempR = Math.sqrt(tempR2);
                                    }
                                }
                                //evalúa el polinomio para hallar el pronóstico
                                tempEval = 0;
                                for (j = 0; j <= grado; j++) {
                                    tempEval = Math.pow(1 + cuenta, j) * Sol[j] + tempEval;
                                }
                                tempPron = tempEval;
                                //extiende el vector solución
                                Sol[Sol.length] = tempR;
                                Sol[Sol.length] = tempR2;
                                Sol[Sol.length] = tempPron;                                
                            }
                            catch (err) {
                                var Sol = [];
                                Sol.length = 4 + grado;
                                for (i = 0; i < Sol.length; i++) {
                                    Sol[i] = "No disponible";
                                }
                            }
                            finally {
                                //Devuelve el vector extendido: coeficientes + r + r^2 + pronóstico
                                return Sol;
                            }
                        }
                    </script>
                    <!--REALIZA CÁLCULOS-->
                    <script>
                        //obtiene referencias

                        //el input range NÚMERO DE DATOS
                        var slider = document.getElementById("rangoDatos");

                        //array para almacenar los valores ingresados
                        var arrayDatos = [];
                        //array para ordenar los datos
                        var ordenado = [];

                        var getbtnCalcular = document.getElementById("btnCalcular");
                        var getbtnCopiar = document.getElementById("btnCopiar");

                        var getMinus = document.getElementById("minus");
                        var getPlus = document.getElementById("plus");

                        //tamaño de datos cambia dinámicamente con el slider
                        //input y change, redundantes por un bug en IE

                        slider.oninput = function () {
                            if (this.value > 1) {
                                document.getElementById("numDatos").innerHTML = this.value + " datos";
                            } else {
                                document.getElementById("numDatos").innerHTML = this.value + " dato";
                            }
                            
                            borrarResultados();
                            mostrarDatos(this.value);
                        }
                        slider.onchange = function () {
                            if (this.value > 1) {
                                document.getElementById("numDatos").innerHTML = this.value + " datos";
                            } else {
                                document.getElementById("numDatos").innerHTML = this.value + " dato";
                            }

                            borrarResultados();
                            mostrarDatos(this.value);
                        }
                        //muestra los necesarios
                        function mostrarDatos(num) {
                            var i;
                            for (i = 1; i <= 100; i++) {
                                if (i <= Number(num)) {
                                    document.getElementById("div" + i).style.display = "block";
                                    document.getElementById("dato" + i).value = "";
                                } else {
                                    document.getElementById("div" + i).style.display = "none";
                                }
                            }

                        }
                        //borra todo
                        function borrarResultados() {
                            document.getElementById("cuenta").value = "";
                            document.getElementById("suma").value = "";
                            document.getElementById("max").value = "";
                            document.getElementById("min").value = "";
                            document.getElementById("rango").value = "";
                            document.getElementById("media").value = "";
                            document.getElementById("mediaGeom").value = "";
                            document.getElementById("mediaArm").value = "";
                            document.getElementById("productoria").value = "";
                            document.getElementById("sumaCuadrados").value = "";
                            document.getElementById("recorridoRelativo").value = "";
                            document.getElementById("mediaCuad").value = "";                            
                            document.getElementById("coefApertura").value = "";
                            document.getElementById("moda").value = "";
                            document.getElementById("mediana").value = "";
                            document.getElementById("q1").value = "";
                            document.getElementById("q3").value = "";
                            document.getElementById("rangoIntercuartílico").value = "";
                            document.getElementById("varianzaP").value = "";
                            document.getElementById("desvP").value = "";
                            document.getElementById("coefVarP").value = "";
                            document.getElementById("varianzaM").value = "";
                            document.getElementById("desvM").value = "";
                            document.getElementById("coefVarM").value = "";
                            document.getElementById("ETMM").value = "";
                            document.getElementById("coefAsim").value = "";
                            document.getElementById("curtosis").value = "";
                            document.getElementById("pendiente").value = "";
                            document.getElementById("intercepto").value = "";
                            document.getElementById("r").value = "";
                            document.getElementById("r2").value = "";
                            document.getElementById("desvMedia").value = "";
                            document.getElementById("pronLin").value = "";
                            document.getElementById("aExp").value = "";
                            document.getElementById("bExp").value = "";
                            document.getElementById("rExp").value = "";
                            document.getElementById("r2Exp").value = "";
                            document.getElementById("pronExp").value = "";
                            document.getElementById("aLog").value = "";
                            document.getElementById("bLog").value = "";
                            document.getElementById("rLog").value = "";
                            document.getElementById("r2Log").value = "";
                            document.getElementById("pronLog").value = "";
                            document.getElementById("aPot").value = "";
                            document.getElementById("bPot").value = "";
                            document.getElementById("rPot").value = "";
                            document.getElementById("r2Pot").value = "";
                            document.getElementById("pronPot").value = "";
                            // polinomial grado 2
                            document.getElementById("Pol2C0").value = "";
                            document.getElementById("Pol2C1").value = "";
                            document.getElementById("Pol2C2").value = "";
                            document.getElementById("Pol2R").value = "";
                            document.getElementById("Pol2R2").value = "";
                            document.getElementById("Pol2Pron").value = "";
                            // polinomial grado 3
                            document.getElementById("Pol3C0").value = "";
                            document.getElementById("Pol3C1").value = "";
                            document.getElementById("Pol3C2").value = "";
                            document.getElementById("Pol3C3").value = "";
                            document.getElementById("Pol3R").value = "";
                            document.getElementById("Pol3R2").value = "";
                            document.getElementById("Pol3Pron").value = "";
                            //nada que copiar
                            getbtnCopiar.setAttribute("disabled", "disabled");
                            //nada que graficar
                            document.getElementById("linechart").style.display = "none";
                            document.getElementById("opcionesGráfico").style.display = "none";
                            document.getElementById("noDisponible").style.display = "block";

                        }

                        //parámetros deben ser correctos
                        function validarParámetros() {
                            var i;
                            //Borra los array
                            arrayDatos.length = 0;
                            ordenado.length = 0;
                            //recorre todos los input
                            for (i = 1; i <= Number(slider.value); i++) {
                                //valida (compatible con tipo number)
                                if (Number(document.getElementById("dato" + i).value) == 0 && document.getElementById("dato" + i).value == ""
                                    || isNaN(document.getElementById("dato" + i).value) == true) {
                                    //enfoca el error
                                    document.getElementById("dato" + i).focus();
                                    //sale
                                    return false;
                                }
                                //se van almacenando los valores ingresados en el array de datos
                                arrayDatos[i - 1] = document.getElementById("dato" + i).value;
                                //se almacena una copia para ordenarla
                                ordenado[i - 1] = arrayDatos[i - 1];
                            }
                            //ordena el array
                            ordenado.sort(function (a, b) { return a - b });
                            // todo salió bien
                            return true;
                        }

                        //realiza el cálculo
                        function calcular() {
                            //valida
                            if (validarParámetros() == false) {
                                //informa del error
                                showSnackbar("¡Error en los datos ingresados!");
                                return;
                            }
                            //ahora sí trabaja con los datos validados...

                            
                            //calcula
                            //cuenta
                            cuenta = arrayDatos.length;
                            //suma
                            suma = sumar();
                            //suma de cuadrados
                            sumaCuadrados = sumarCuadrados();                            
                            //max, min, todos postivos?
                            maxmin();
                            //productoria
                            productoria = calculaProductoria();
                            //rango o recorrido
                            rango = max - min;                            
                            //media aritmética
                            media = suma / cuenta;
                            //recorrido relativo
                            if (media == 0) {
                                recorridoRelativo = "No disponible (Media = 0)";
                            } else {
                                recorridoRelativo = rango / media;
                            }                            
                            //coeficiente da apertura
                            if (min == 0) {
                                coefApertura = "No disponible (Mínimo = 0)";
                            } else {
                                coefApertura = max / min;
                            }  
                            //media geométrica
                            mediaGeom = mediaGeométrica();
                            //media armónica
                            mediaArm = mediaArmónica();
                            //media cuadrática
                            mediaCuad = mediaCuadrática();
                            //moda
                            moda = calculaModa();
                            //mediana
                            mediana = calculaMediana();
                            //primer cuartil
                            q1 = calculaQ1();
                            //tercer cuartil
                            q3 = calculaQ3();
                            //rango intercuartílico
                            rangoIntercuartílico = calculaRangoIntercuartílico();
                            //desviación media
                            desvMedia = calculaDesvMedia();
                            //varianza poblacional
                            varianzaP = calculaVarianzaPoblacional();
                            //desviación estándar poblacional
                            desvP = calculaDesvPoblacional();
                            //coeficiente de variación poblacional
                            coefVarP = calculaCoefVarPoblacional();
                            //varianza muestral
                            varianzaM = calculaVarianzaMuestral();
                            //desviación estándar muestral
                            desvM = calculaDesvMuestral();
                            //coeficiente de variación muestral
                            coefVarM = calculaCoefVarMuestral();
                            //error típico de la media muestral
                            ETMM = calculaETMM();
                            //coeficiente de asimetría
                            coefAsim = calculaCoefAsim();
                            //curtosis
                            curtosis = calculaCurtosis();
                            //regresión lineal
                            //se obtienen 4 variables: pendiente, intercepto, r y r^2
                            regLineal(); 
                            pronLin = calculaPronósticoLineal();
                            //regresión exponencial
                            // se obtienen 4 variables: aExp, bExp, rExp y r2Exp
                            regExponencial();
                            pronExp = calculaPronósticoExponencial();
                            //regresión logarítmica
                            // se obtienen 4 variables: aLog, bLog, rLog y r2Log
                            regLogarítmica();
                            pronLog = calculaPronósticoLogarítmico();
                            //regresión potencial
                            // se obtienen 4 variables: aPot, bPot, rPot y r2Pot
                            regPotencial();
                            pronPot = calculaPronósticoPotencial();
                            //regresión polinomial grado 2
                            // se obtienen todos los parámetros
                            var ArrayTemp = [];                            
                            ArrayTemp = regPolinomial(2);                            
                            Pol2C0 = ArrayTemp[0];
                            Pol2C1 = ArrayTemp[1];
                            Pol2C2 = ArrayTemp[2];
                            Pol2R = ArrayTemp[3];
                            Pol2R2 = ArrayTemp[4];
                            Pol2Pron = ArrayTemp[5];
                            //regresión polinomial grado 3
                            // se obtienen todos los parámetros
                            var ArrayTemp = [];
                            ArrayTemp = regPolinomial(3);
                            Pol3C0 = ArrayTemp[0];
                            Pol3C1 = ArrayTemp[1];
                            Pol3C2 = ArrayTemp[2];
                            Pol3C3 = ArrayTemp[3];
                            Pol3R = ArrayTemp[4];
                            Pol3R2 = ArrayTemp[5];
                            Pol3Pron = ArrayTemp[6];
                            
                            //formatea resultados: min 0 y max 9 decimales... y configuración local                            
                            //escribe resultados
                            document.getElementById("cuenta").value = cuenta;
                            document.getElementById("suma").value = suma.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("sumaCuadrados").value = sumaCuadrados.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("productoria").value = productoria.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("max").value = max.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("min").value = min.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("rango").value = rango.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("recorridoRelativo").value = recorridoRelativo.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("coefApertura").value = coefApertura.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("media").value = media.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("mediaGeom").value = mediaGeom.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("mediaArm").value = mediaArm.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("mediaCuad").value = mediaCuad.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("moda").value = moda.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("mediana").value = mediana.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("q1").value = q1.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("q3").value = q3.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("rangoIntercuartílico").value = rangoIntercuartílico.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("varianzaP").value = varianzaP.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("desvP").value = desvP.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("coefVarP").value = coefVarP.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("varianzaM").value = varianzaM.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("desvM").value = desvM.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("coefVarM").value = coefVarM.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("ETMM").value = ETMM.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("coefAsim").value = coefAsim.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("curtosis").value = curtosis.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("pendiente").value = pendiente.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("intercepto").value = intercepto.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("r").value = r.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("r2").value = r2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("desvMedia").value = desvMedia.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("pronLin").value = pronLin.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("aExp").value = aExp.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("bExp").value = bExp.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("rExp").value = rExp.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("r2Exp").value = r2Exp.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("pronExp").value = pronExp.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("aLog").value = aLog.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("bLog").value = bLog.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("rLog").value = rLog.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("r2Log").value = r2Log.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("pronLog").value = pronLog.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("aPot").value = aPot.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("bPot").value = bPot.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("rPot").value = rPot.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("r2Pot").value = r2Pot.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("pronPot").value = pronPot.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            // polinomial grado 2
                            document.getElementById("Pol2C0").value = Pol2C0.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol2C1").value = Pol2C1.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol2C2").value = Pol2C2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol2R").value = Pol2R.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol2R2").value = Pol2R2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol2Pron").value = Pol2Pron.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            // polinomial grado 3
                            document.getElementById("Pol3C0").value = Pol3C0.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol3C1").value = Pol3C1.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol3C2").value = Pol3C2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol3C3").value = Pol3C3.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol3R").value = Pol3R.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol3R2").value = Pol3R2.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });
                            document.getElementById("Pol3Pron").value = Pol3Pron.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 9 });

                            //informa éxito en cálculo
                            showSnackbar("¡Cálculos realizados!");

                            //ya hay algo que copiar
                            getbtnCopiar.removeAttribute("disabled");

                            //muestra la gráfica y sus opciones                         
                            document.getElementById("linechart").style.display = "block";
                            document.getElementById("opcionesGráfico").style.display = "block";                                                        
                            document.getElementById("noDisponible").style.display = "none";
                            if (mostrarSeriesAdicionales == true) {
                                drawChart3();
                            } else {
                                drawChart2();
                            }
                            
                        }
                        function manejador(e, miId) {                            
                            var characterCode;
                            // e.key es la recomendación actual
                            if (e.key != undefined) {
                                if (e.key.toLowerCase() == "enter") {
                                    characterCode = 13;
                                }
                                else {
                                    characterCode = 0;
                                }
                            } else {
                                /* navegadores antiguos...  */
                                characterCode = e.which || e.charCode || e.keyCode || e.keyIdentifier || 0;
                            }
                            //ejecuta solo si presionó Enter
                            //dirige el foco al siguiente con Enter                            
                            if (characterCode == 13) {                                 
                                //dirige el foco al siguiente con Enter                            
                                if (Number(miId.slice(4)) < Number(slider.value)) {
                                    var sigue = Number(miId.slice(4)) + 1
                                    document.getElementById("dato" + sigue).focus();
                                } else {
                                    //ejecuta si es el último input
                                    document.getElementById(miId).blur();
                                    getbtnCalcular.focus();
                                    calcular();
                                }

                            }
                        }

                        //****************************************
                        // COPIAR
                        //copia resultados al portapapeles
                        //****************************************

                        //pasa el contenido de cada campo a una cadena
                        function copiarResultados() {
                            //aquí guardamos una referencia a cada control a copiar
                            var copyCampo;
                            //aquí vamos guardando la cadena total a copiar
                            var copyText = "*** ANÁLISIS DE DATOS ***" + "\r" ;
                            
                            //RESULTADOS
                            copyText = copyText + "RESULTADOS:";

                            //cuenta
                            copyCampo = document.getElementById("cuenta");
                            copyText = copyText + "\r" + 'Número de Datos = ' + "\t" + copyCampo.value;
                            //suma
                            copyCampo = document.getElementById("suma");
                            copyText = copyText + "\r" + 'Suma = ' + "\t" + copyCampo.value;
                            //productoria
                            copyCampo = document.getElementById("productoria");
                            copyText = copyText + "\r" + 'Productoria = ' + "\t" + copyCampo.value;
                            //sumaCuadrados
                            copyCampo = document.getElementById("sumaCuadrados");
                            copyText = copyText + "\r" + 'Suma de cuadrados = ' + "\t" + copyCampo.value;
                            //max
                            copyCampo = document.getElementById("max");
                            copyText = copyText + "\r" + 'Máximo = ' + "\t" + copyCampo.value;
                            //min
                            copyCampo = document.getElementById("min");
                            copyText = copyText + "\r" + 'Mínimo = ' + "\t" + copyCampo.value;
                            //rango
                            copyCampo = document.getElementById("rango");
                            copyText = copyText + "\r" + 'Rango o recorrido = ' + "\t" + copyCampo.value;
                            //recorridoRelativo
                            copyCampo = document.getElementById("recorridoRelativo");
                            copyText = copyText + "\r" + 'Recorrido relativo = ' + "\t" + copyCampo.value;
                            //coefApertura
                            copyCampo = document.getElementById("coefApertura");
                            copyText = copyText + "\r" + 'Coeficiente de apertura = ' + "\t" + copyCampo.value;
                            //media
                            copyCampo = document.getElementById("media");
                            copyText = copyText + "\r" + 'Media aritmética = ' + "\t" + copyCampo.value;
                            //mediaGeom
                            copyCampo = document.getElementById("mediaGeom");
                            copyText = copyText + "\r" + 'Media geométrica = ' + "\t" + copyCampo.value;
                            //mediaArm
                            copyCampo = document.getElementById("mediaArm");
                            copyText = copyText + "\r" + 'Media armónica = ' + "\t" + copyCampo.value;
                            //mediaCuad
                            copyCampo = document.getElementById("mediaCuad");
                            copyText = copyText + "\r" + 'Media cuadrática = ' + "\t" + copyCampo.value;
                            //moda
                            copyCampo = document.getElementById("moda");
                            copyText = copyText + "\r" + 'Moda (Primera encontrada) = ' + "\t" + copyCampo.value;
                            //mediana
                            copyCampo = document.getElementById("mediana");
                            copyText = copyText + "\r" + 'Mediana = ' + "\t" + copyCampo.value;
                            //q1
                            copyCampo = document.getElementById("q1");
                            copyText = copyText + "\r" + 'Primer cuartil (Q1 = P25) = ' + "\t" + copyCampo.value;
                            //q3
                            copyCampo = document.getElementById("q3");
                            copyText = copyText + "\r" + 'Tercer cuartil (Q3 = P75) = ' + "\t" + copyCampo.value;
                            //rangoIntercuartílico
                            copyCampo = document.getElementById("rangoIntercuartílico");
                            copyText = copyText + "\r" + 'Rango intercuartílico (Q3 - Q1) = ' + "\t" + copyCampo.value;
                            //desviación media
                            copyCampo = document.getElementById("desvMedia");
                            copyText = copyText + "\r" + 'Desviación media = ' + "\t" + copyCampo.value;
                            //varianzaP
                            copyCampo = document.getElementById("varianzaP");
                            copyText = copyText + "\r" + 'Varianza poblacional = ' + "\t" + copyCampo.value;
                            //desvP
                            copyCampo = document.getElementById("desvP");
                            copyText = copyText + "\r" + 'Desviación estándar poblacional = ' + "\t" + copyCampo.value;
                            //coefVarP
                            copyCampo = document.getElementById("coefVarP");
                            copyText = copyText + "\r" + 'Coeficiente de variación poblacional = ' + "\t" + copyCampo.value;
                            //varianzaM
                            copyCampo = document.getElementById("varianzaM");
                            copyText = copyText + "\r" + 'Varianza muestral = ' + "\t" + copyCampo.value;
                            //desvM
                            copyCampo = document.getElementById("desvM");
                            copyText = copyText + "\r" + 'Desviación estándar muestral = ' + "\t" + copyCampo.value;
                            //coefVarM
                            copyCampo = document.getElementById("coefVarM");
                            copyText = copyText + "\r" + 'Coeficiente de variación muestral = ' + "\t" + copyCampo.value;
                            //ETMM
                            copyCampo = document.getElementById("ETMM");
                            copyText = copyText + "\r" + 'Error típico de la media muestral = ' + "\t" + copyCampo.value;
                            //coefAsim
                            copyCampo = document.getElementById("coefAsim");
                            copyText = copyText + "\r" + 'Coeficiente de asimetría de Fisher = ' + "\t" + copyCampo.value;
                            //curtosis
                            copyCampo = document.getElementById("curtosis");
                            copyText = copyText + "\r" + 'Curtosis = ' + "\t" + copyCampo.value;
                            //pendiente
                            copyCampo = document.getElementById("pendiente");
                            copyText = copyText + "\r" + 'Pendiente recta de ajuste = ' + "\t" + copyCampo.value;
                            //intercepto
                            copyCampo = document.getElementById("intercepto");
                            copyText = copyText + "\r" + 'Intercepto recta de ajuste = ' + "\t" + copyCampo.value;
                            //r
                            copyCampo = document.getElementById("r");
                            copyText = copyText + "\r" + 'Coeficiente r lineal = ' + "\t" + copyCampo.value;
                            //r2
                            copyCampo = document.getElementById("r2");
                            copyText = copyText + "\r" + 'Coeficiente r^2 lineal = ' + "\t" + copyCampo.value;
                            //pronóstico lineal
                            copyCampo = document.getElementById("pronLin");
                            copyText = copyText + "\r" + 'Pronóstico lineal = ' + "\t" + copyCampo.value;
                            //a exp
                            copyCampo = document.getElementById("aExp");
                            copyText = copyText + "\r" + 'Parámetro a regresión exponencial = ' + "\t" + copyCampo.value;
                            //b exp
                            copyCampo = document.getElementById("bExp");
                            copyText = copyText + "\r" + 'Parámetro b regresión exponencial = ' + "\t" + copyCampo.value;
                            //r exp
                            copyCampo = document.getElementById("rExp");
                            copyText = copyText + "\r" + 'Coeficiente r exponencial = ' + "\t" + copyCampo.value;
                            //r2 exp
                            copyCampo = document.getElementById("r2Exp");
                            copyText = copyText + "\r" + 'Coeficiente r^2 exponencial = ' + "\t" + copyCampo.value;
                            //pronóstico exp
                            copyCampo = document.getElementById("pronExp");
                            copyText = copyText + "\r" + 'Pronóstico exponencial = ' + "\t" + copyCampo.value;
                            //a log
                            copyCampo = document.getElementById("aLog");
                            copyText = copyText + "\r" + 'Parámetro a regresión logarítmica = ' + "\t" + copyCampo.value;
                            //b log
                            copyCampo = document.getElementById("bLog");
                            copyText = copyText + "\r" + 'Parámetro b regresión logarítmica = ' + "\t" + copyCampo.value;
                            //r log
                            copyCampo = document.getElementById("rLog");
                            copyText = copyText + "\r" + 'Coeficiente r logarítmico = ' + "\t" + copyCampo.value;
                            //r2 log
                            copyCampo = document.getElementById("r2Log");
                            copyText = copyText + "\r" + 'Coeficiente r^2 logarítmico = ' + "\t" + copyCampo.value;
                            //pronóstico log
                            copyCampo = document.getElementById("pronLog");
                            copyText = copyText + "\r" + 'Pronóstico logarítmico = ' + "\t" + copyCampo.value;
                            //a Pot
                            copyCampo = document.getElementById("aPot");
                            copyText = copyText + "\r" + 'Parámetro a regresión potencial = ' + "\t" + copyCampo.value;
                            //b Pot
                            copyCampo = document.getElementById("bPot");
                            copyText = copyText + "\r" + 'Parámetro b regresión potencial = ' + "\t" + copyCampo.value;
                            //r Pot
                            copyCampo = document.getElementById("rPot");
                            copyText = copyText + "\r" + 'Coeficiente r potencial = ' + "\t" + copyCampo.value;
                            //r2 Pot
                            copyCampo = document.getElementById("r2Pot");
                            copyText = copyText + "\r" + 'Coeficiente r^2 potencial = ' + "\t" + copyCampo.value;
                            //pronóstico Pot
                            copyCampo = document.getElementById("pronPot");
                            copyText = copyText + "\r" + 'Pronóstico potencial = ' + "\t" + copyCampo.value;
                            // regresión polinomial grado 2
                            //Pol2C0
                            copyCampo = document.getElementById("Pol2C0");
                            copyText = copyText + "\r" + 'Coeficiente C0 regresión polinomial grado 2 = ' + "\t" + copyCampo.value;
                            //Pol2C1
                            copyCampo = document.getElementById("Pol2C1");
                            copyText = copyText + "\r" + 'Coeficiente C1 regresión polinomial grado 2 = ' + "\t" + copyCampo.value;
                            //Pol2C2
                            copyCampo = document.getElementById("Pol2C2");
                            copyText = copyText + "\r" + 'Coeficiente C2 regresión polinomial grado 2 = ' + "\t" + copyCampo.value;
                            //Pol2R
                            copyCampo = document.getElementById("Pol2R");
                            copyText = copyText + "\r" + 'Coeficiente r regresión polinomial grado 2 = ' + "\t" + copyCampo.value;
                            //Pol2R2
                            copyCampo = document.getElementById("Pol2R2");
                            copyText = copyText + "\r" + 'Coeficiente r^2 regresión polinomial grado 2 = ' + "\t" + copyCampo.value;
                            //Pol2Pron
                            copyCampo = document.getElementById("Pol2Pron");
                            copyText = copyText + "\r" + 'Pronóstico polinomial grado 2 = ' + "\t" + copyCampo.value;
                            // regresión polinomial grado 3
                            //Pol3C0
                            copyCampo = document.getElementById("Pol3C0");
                            copyText = copyText + "\r" + 'Coeficiente C0 regresión polinomial grado 3 = ' + "\t" + copyCampo.value;
                            //Pol3C1
                            copyCampo = document.getElementById("Pol3C1");
                            copyText = copyText + "\r" + 'Coeficiente C1 regresión polinomial grado 3 = ' + "\t" + copyCampo.value;
                            //Pol3C2
                            copyCampo = document.getElementById("Pol3C2");
                            copyText = copyText + "\r" + 'Coeficiente C2 regresión polinomial grado 3 = ' + "\t" + copyCampo.value;
                            //Pol3C3
                            copyCampo = document.getElementById("Pol3C3");
                            copyText = copyText + "\r" + 'Coeficiente C3 regresión polinomial grado 3 = ' + "\t" + copyCampo.value;
                            //Pol3R
                            copyCampo = document.getElementById("Pol3R");
                            copyText = copyText + "\r" + 'Coeficiente r regresión polinomial grado 3 = ' + "\t" + copyCampo.value;
                            //Pol3R2
                            copyCampo = document.getElementById("Pol3R2");
                            copyText = copyText + "\r" + 'Coeficiente r^2 regresión polinomial grado 3 = ' + "\t" + copyCampo.value;
                            //Pol3Pron
                            copyCampo = document.getElementById("Pol3Pron");
                            copyText = copyText + "\r" + 'Pronóstico polinomial grado 3 = ' + "\t" + copyCampo.value;







                            //FECHA DE CÁLCULO
                            var d = new Date();
                            copyText = copyText + "\r" + '********';
                            copyText = copyText + "\r" + 'CALCULADO: ';
                            copyText = copyText + "\r" + d.toLocaleString();
                            //finalmente copiamos la cadena completa...
                            copyToClipboard(copyText);
                        }



                        getbtnCalcular.onclick = function () {
                            calcular();
                        }

                        getbtnCopiar.onclick = function () {
                            copiarResultados();
                            //informa que copió
                            showSnackbar("¡Resultados copiados!");
                        }

                        getMinus.onclick = function () {                            
                            //disminuye el número de datos
                            if (slider.value != 1) {
                                var nuevo = slider.value - 1;
                                slider.value = nuevo;
                                if (nuevo > 1) {
                                    document.getElementById("numDatos").innerHTML = nuevo + " datos";
                                } else {
                                    document.getElementById("numDatos").innerHTML = nuevo + " dato";
                                }
                                borrarResultados();
                                mostrarDatos(nuevo);
                            }
                        }
                        getPlus.onclick = function () {
                            //disminuye el número de datos
                            if (slider.value != 100) {
                                var nuevo = Number( slider.value ) + 1;
                                slider.value = nuevo;                                
                                document.getElementById("numDatos").innerHTML = nuevo + " datos";                                
                                borrarResultados();
                                mostrarDatos(nuevo);
                            }
                        }

                </script>

                
                <script type="text/javascript">
                    //script del gráfico

                        // Load google charts
                        google.charts.load('current', { 'packages': ['corechart', 'line'] });
                        google.charts.setOnLoadCallback(drawChart2);                       

                        // Draw the chart and set the chart values
                        //     normal, sin series adicionales
                        function drawChart2() {
                            var i;
                            var x;
                            var y;
                            // llena el array de datos
                            // Create the data table.
                            var data = new google.visualization.DataTable();
                            //crea las columnas
                            data.addColumn('string', 'DATO');
                            data.addColumn('number', 'VALOR');
                            //los pares de datos
                            for (i = 0; i < arrayDatos.length; i++) {
                                x = String(1 + i);
                                y = Number(arrayDatos[i]);                                
                                data.addRows([
                                    [x, y]
                                ]);
                            }
                            
                            
                            // Optional; add a title and set the width and height of the chart
                            var options = {
                                //título
                                'title': 'GRÁFICA DE DATOS INGRESADOS',  
                                curveType: tipoCurva,
                                titleTextStyle: {
                                    //azul oscuro
                                    color: '#000066',
                                    fontName: 'Tahoma', 
                                    fontSize: 18, 
                                    bold: true                                       
                                },
                                //legenda
                                'legend': { position: 'bottom' },
                                //tamaño gráfico
                                'width': 800,
                                'height': 500,
                                //eje x
                                hAxis: {
                                    title: 'Datos',
                                    textStyle: {
                                        color: 'purple'                                        
                                    },
                                    titleTextStyle: {
                                        color: 'indigo',                                        
                                        italic: true,
                                        fontSize: 16, 
                                        bold: true
                                    }
                                },
                                //eje y
                                vAxis: {
                                    title: 'Valores',
                                    textStyle: {
                                        color: 'purple'
                                    },
                                    titleTextStyle: {
                                        color: 'indigo', 
                                        italic: true,
                                        fontSize: 16, 
                                        bold: true
                                    }
                                },
                                //color linea de la serie
                                colors: ['blue'],
                                //color de fondo del gráfico
                                backgroundColor: 'lavender',
                                //muestra una cruz al seleccionar o señalar
                                crosshair: { trigger: 'both' },
                                //tamaño de puntos
                                pointSize: 5,
                                //forma de puntos
                                pointShape: 'circle' 
                            };

                            // Display the chart inside the <div> element with id="linechart"
                            //var chart = new google.visualization.LineChart(document.getElementById('linechart'));
                            var chart_div = document.getElementById('linechart');
                            chart = new google.visualization.LineChart(chart_div);

                                                      
                             //   enlace de descarga png, esto no funcionó
                             //document.getElementById('png').outerHTML = '<a href="' + chart.getImageURI() + '" download="Imagen" target="_blank" class="link" title="Obtener imagen png del gráfico">Descargar Gráfico</a>';
                            
                            chart.draw(data, options);                          
                            
                        }
                        
                        // Draw the chart and set the chart values
                        // con series adicionales
                        function drawChart3() {
                            var i;
                            var miX;
                            var miValor;
                            // se usa variable "media"

                            // llena el array de datos
                            // Create the data table.
                            var data = new google.visualization.DataTable();
                            //crea las columnas

                            data.addColumn('number', 'X');
                            data.addColumn('number', 'Valor');
                            data.addColumn('number', 'Media');

                            //los pares de datos
                            for (i = 0; i < arrayDatos.length; i++) {
                                miX = 1 + i;
                                miValor = Number(arrayDatos[i]);
                                // y la media ya está calculada
                                data.addRows([
                                    [miX, miValor, Number(media)]
                                ]);
                            }


                            // Optional; add a title and set the width and height of the chart
                            var options = {
                                //título
                                'title': 'GRÁFICA DE DATOS INGRESADOS',
                                curveType: tipoCurva,
                                titleTextStyle: {
                                    //azul oscuro
                                    color: '#000066',
                                    fontName: 'Tahoma',
                                    fontSize: 18,
                                    bold: true
                                },
                                //legenda
                                'legend': { position: 'bottom' },
                                //tamaño gráfico
                                'width': 800,
                                'height': 500,
                                //eje x
                                hAxis: {
                                    title: 'Datos',
                                    textStyle: {
                                        color: 'purple'
                                    },
                                    titleTextStyle: {
                                        color: 'indigo',
                                        italic: true,
                                        fontSize: 16,
                                        bold: true
                                    }
                                },
                                //eje y
                                vAxis: {
                                    title: 'Valores',
                                    textStyle: {
                                        color: 'purple'
                                    },
                                    titleTextStyle: {
                                        color: 'indigo',
                                        italic: true,
                                        fontSize: 16,
                                        bold: true
                                    }
                                },
                                //color de fondo del gráfico
                                backgroundColor: 'lavender',
                                //colores líneas de serie
                                colors: ['blue', 'green'],
                                //muestra una cruz al seleccionar o señalar
                                crosshair: { trigger: 'both' },
                                //personaliza series
                                series: {
                                    //valores
                                    0: {
                                        //tamaño de puntos
                                        pointSize: 5,
                                        //forma de puntos
                                        pointShape: 'circle'
                                    },
                                    //media
                                    1: {
                                        //tamaño de puntos
                                        pointSize: 0,
                                        //forma de puntos
                                        pointShape: 'circle',
                                        //punteada
                                        lineDashStyle: [4, 4]
                                    }
                                },
                                // líneas de tendencia
                                trendlines: {                                    
                                    0: {
                                        type: 'linear',
                                        color: 'red',                                        
                                        visibleInLegend: true,
                                        labelInLegend: 'Ajuste lineal',
                                        showR2: true,
                                        opacity: 1
                                    }                       
                                }                               

                            };

                            // Display the chart inside the <div> element with id="linechart"
                            //var chart = new google.visualization.LineChart(document.getElementById('linechart'));
                            var chart_div = document.getElementById('linechart');
                            chart = new google.visualization.LineChart(chart_div);                                                                                                                                         
                            chart.draw(data, options);
                            
                        }
                        // botón png
                        document.getElementById("BtnPNG").onclick = function () {
                            //optiene un enlace a la imagen png 
                            var msj;
                            msj = chart.getImageURI();
                            copyToClipboard(msj);
                            showSnackbar("Enlace PNG copiado");
                        }
                    
                        function clickCheck() {
                            var checkBox = document.getElementById("myCheck");                            
                            if (checkBox.checked == true) {
                                mostrarSeriesAdicionales = true;
                                drawChart3();
                            } else {
                                mostrarSeriesAdicionales = false;
                                drawChart2();
                            }
                        }
                        function clickCheck2() {
                            var checkBox2 = document.getElementById("myCheck2");
                            if (checkBox2.checked == true) {
                                tipoCurva = 'function';
                            } else {
                                tipoCurva = 'null';
                            }
                            clickCheck();
                        }
                    
                </script>




                    <footer>
                        <p>Coded by @deiner_db</p>
                        <img id="miFoto" title="Deiner Domínguez" alt="Foto Deiner Domínguez" src="miFoto.jpg" width="1280" height="893" />
                        <br />
                        <a href="https://www.facebook.com/deinerdb" target="_blank" class="fa fa-facebook"></a>
                        <a href="https://twitter.com/deiner_db" target="_blank" class="fa fa-twitter"></a>
                        <a href="https://www.instagram.com/deiner_db/" target="_blank" class="fa fa-instagram"></a>
                        
                        <a href="https://www.youtube.com/user/deinerdominguez" target="_blank" class="fa fa-youtube"></a>
                        <a href="skype:live:deiner_db?call" class="fa fa-skype"></a>
                    </footer>
</div>
            <button onclick="topFunction()" id="BtnTop" title="Subir">⇧</button>
            <script type="text/javascript" charset="utf-8" src="rutinas.js"></script>
</body>
</html>

